bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  c  =  s.charAt(i,  i  +  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i,  i  +  1);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i,  i  +  1);	  char    c    =    s.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  char  c  =  s.charAt(i  +  11);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i  +  11);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i  +  11);	  char    c    =    s.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  char  c  =  s.charAt(i)+  2;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i)+  2;  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i)+  2;	  char    c    =    s.charAt(i)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  char  c  =  s.charAt(i)+  3;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i)+  3;  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i)+  3;	  char    c    =    s.charAt(i)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  char  c  =  s.charAt(i)+  4;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i)+  4;  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i)+  4;	  char    c    =    s.charAt(i)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  char  c  =  s.charAt(i)+  6;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i)+  6;  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i)+  6;	  char    c    =    s.charAt(i)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  char  c  =  s.charAt(i)+  5;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i)+  5;  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i)+  5;	  char    c    =    s.charAt(i)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  char  c  =  s.charAt(i)/  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i)/  1;  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i)/  1;	  char    c    =    s.charAt(i)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  char  c  =  strEscape(s.charAt(i));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  strEscape(s.charAt(i));  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  strEscape(s.charAt(i));	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  char  c  =  quote(s.charAt(i));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  quote(s.charAt(i));  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  quote(s.charAt(i));	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  char  c  =  s.charAt(i).charAt(0);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i).charAt(0);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i).charAt(0);	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  String  c  =  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  String  c  =  s.charAt(0);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	String  c  =  s.charAt(0);	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  Character  c  =  Character.toLowerCase(s.charAt(i));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  Character  c  =  Character.toLowerCase(s.charAt(i));  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	Character  c  =  Character.toLowerCase(s.charAt(i));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  Character  c  =  Character.toLowerCase(s[i]);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  Character  c  =  Character.toLowerCase(s[i]);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	Character  c  =  Character.toLowerCase(s[i]);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  c  =  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  c  =  s.charAt(i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	c  =  s.charAt(i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  CharsetEncoder  c  =  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  CharsetEncoder  c  =  outputCharsetEncoder.charAt(i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	CharsetEncoder  c  =  outputCharsetEncoder.charAt(i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  CharsetEncoder  c  =  outputCharsetEncoder.encode(s[i]);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  CharsetEncoder  c  =  outputCharsetEncoder.encode(s[i]);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	CharsetEncoder  c  =  outputCharsetEncoder.encode(s[i]);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  sb.append( "n ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  sb.append( "n ");  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	sb.append( "n ");	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  char  c  =  s.charAt(i,  i++);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i,  i++);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i,  i++);	  char    c    =    s.charAt(i++);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  char  c  =  sb.charAt(i++);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  sb.charAt(i++);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  sb.charAt(i++);	  char    c    =    s.charAt(i++);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  char  c  =  s.charAt(i++)+  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i++)+  1;  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i++)+  1;	  char    c    =    s.charAt(i++);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  char  c  =  s.charAt(i  *  3);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i  *  3);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i  *  3);	  char    c    =    s.charAt(i    +    3);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  char  c  =  s.charAt(i  +  4);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i  +  4);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i  +  4);	  char    c    =    s.charAt(i    +    3);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  char  c  =  s.charAt(i  +  1];  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i  +  1];  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i  +  1];	  char    c    =    s.charAt(i];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  char  c  =  s.charAt(i]  +  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i]  +  1;  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i]  +  1;	  char    c    =    s.charAt(i];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  char  c  =  s.charAt(i],  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i],  quote);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i],  quote);	  char    c    =    s.charAt(i];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  char  c  =  s.charAt(i  *  2  +  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i  *  2  +  1);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i  *  2  +  1);	  char    c    =    s.charAt(i    *    2);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
28	[BUG]  [BUGGY]  char  c  =  s.charAt(i  *  4);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i  *  4);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i  *  4);	  char    c    =    s.charAt(i    *    2);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  char  c  =  s.charAt(i  *  2  +  quote);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i  *  2  +  quote);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i  *  2  +  quote);	  char    c    =    s.charAt(i    *    2);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  char  c  =  outputCharsetEncoder.charAt(i++);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  outputCharsetEncoder.charAt(i++);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  outputCharsetEncoder.charAt(i++);	  char    c    =    s.charAt(i++);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  char  c  =  strEscape.charAt(i++);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  strEscape.charAt(i++);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  strEscape.charAt(i++);	  char    c    =    s.charAt(i++);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  char  c  =  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  outputCharsetEncoder.charAt(i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  outputCharsetEncoder.charAt(i);	  char    c    =    s.charAt(i++);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  char  c  =  strEscape.charAt(i);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  strEscape.charAt(i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  strEscape.charAt(i);	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  char  c  =  strEscape.charAt(0);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  strEscape.charAt(0);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  strEscape.charAt(0);	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  char  c  =  s.charAt(i  -  2);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i  -  2);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i  -  2);	  char    c    =    s.charAt(i    *    2);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  char  c  =  strEscape.charAt(i  +  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  strEscape.charAt(i  +  2);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  strEscape.charAt(i  +  2);	  char    c    =    s.charAt(i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  i);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  Charset  c  =  outputCharsetEncoder.encode(s[i]);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  Charset  c  =  outputCharsetEncoder.encode(s[i]);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	Charset  c  =  outputCharsetEncoder.encode(s[i]);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  Charset  c  =  outputCharsetEncoder.encode(s,  i);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  Charset  c  =  outputCharsetEncoder.encode(s,  i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	Charset  c  =  outputCharsetEncoder.encode(s,  i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  CharsetEncoder  c  =  outputCharsetEncoder.encode(s,  i);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  CharsetEncoder  c  =  outputCharsetEncoder.encode(s,  i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	CharsetEncoder  c  =  outputCharsetEncoder.encode(s,  i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s[i]);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s[i]);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(s[i]);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  char  c  =  outputCharsetEncoder.charAt(i];  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  outputCharsetEncoder.charAt(i];  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  outputCharsetEncoder.charAt(i];	  char    c    =    s.charAt(i];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  char  c  =  strEscape.charAt(i  +  3);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  strEscape.charAt(i  +  3);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  strEscape.charAt(i  +  3);	  char    c    =    s.charAt(i    +    3);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  char  c  =  s.charAt(i  *  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  s.charAt(i  *  1);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  s.charAt(i  *  1);	  char    c    =    s.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  char  c  =  strEscape.charAt(i  +  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  strEscape.charAt(i  +  1);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  strEscape.charAt(i  +  1);	  char    c    =    s.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  char  c  =  sb.charAt(i  +  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  sb.charAt(i  +  2);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  sb.charAt(i  +  2);	  char    c    =    s.charAt(i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
47	[BUG]  [BUGGY]  Character.toLowerCase(Character.toLowerCase(i));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  Character.toLowerCase(Character.toLowerCase(i));  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	Character.toLowerCase(Character.toLowerCase(i));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  char  c  =  strEscape.charAt(i];  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =  strEscape.charAt(i];  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =  strEscape.charAt(i];	  char    c    =    s.charAt(i];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
50	[BUG]  [BUGGY]  char  c  =(s.charAt(i)  >=  '0'?  s.charAt(i):  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =(s.charAt(i)  >=  '0'?  s.charAt(i):  s.charAt(i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =(s.charAt(i)  >=  '0'?  s.charAt(i):  s.charAt(i);	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  char  c  =(s.charAt(i)  ==  '0'?  s.charAt(i):  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =(s.charAt(i)  ==  '0'?  s.charAt(i):  s.charAt(i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =(s.charAt(i)  ==  '0'?  s.charAt(i):  s.charAt(i);	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  char  c  =(s.charAt(i)  <  1)?  s.charAt(i):  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =(s.charAt(i)  <  1)?  s.charAt(i):  s.charAt(i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =(s.charAt(i)  <  1)?  s.charAt(i):  s.charAt(i);	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  char  c  =(s.charAt(i)  >=  '0'?  s.charAt(i):  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =(s.charAt(i)  >=  '0'?  s.charAt(i):  s.charAt(0);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =(s.charAt(i)  >=  '0'?  s.charAt(i):  s.charAt(0);	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  char  c  =(s.charAt(i)  >=  '-')?  s.charAt(i):  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {    [BUGGY]  char  c  =(s.charAt(i)  >=  '-')?  s.charAt(i):  s.charAt(i);  [BUGGY]    switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	char  c  =(s.charAt(i)  >=  '-')?  s.charAt(i):  s.charAt(i);	  char    c    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
