bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append('$');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append('$');  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append('$');	  sb.append('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  sb.append(',');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append(',');  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append(',');	  sb.append('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  sb.append(':');  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append(':');  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append(':');	  sb.append('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  sb.append('f');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append('f');  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append('f');	  sb.append('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  sb.append('+');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append('+');  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append('+');	  sb.append('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append(Character.toLowerCase(c));  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append(Character.toLowerCase(c));	  sb.append(quote);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append(Character.toUpperCase(c));  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append(Character.toUpperCase(c));	  sb.append(quote);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append(Character.toLowerCase(c),  quote);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append(Character.toLowerCase(c),  quote);	  sb.append(quote);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  sb.append(doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append(doublequoteEscape);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append(doublequoteEscape);	  sb.append(quote);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  sb.append( "00 ");  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "00 ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "00 ");	  sb.append(   "u00   ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  sb.append( "$00 ");  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "$00 ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "$00 ");	  sb.append(   "u00   ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  sb.append( "000 ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "000 ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "000 ");	  sb.append(   "u00   ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  sb.append( "# ");  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "# ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "# ");	  sb.append(   "u00   ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  sb.append( "u000 ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "u000 ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "u000 ");	  sb.append(   "u00   ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  appendHexJavaScriptRepresentation(sb,  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	appendHexJavaScriptRepresentation(sb,  c);	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  sb.append('n',  c);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append('n',  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append('n',  c);	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  sb.append('N');  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append('N');  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append('N');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  sb.append('0');  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append('0');  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append('0');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  sb.append( "null ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "null ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "null ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  sb.append( "   ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "   ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "   ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  sb.append( "native ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "native ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "native ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	AppendHexJavaScriptRepresentation(sb,  c);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  sb.append(c);  appendHexJavaScriptRepresentation(sb,  c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append(c);  appendHexJavaScriptRepresentation(sb,  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append(c);  appendHexJavaScriptRepresentation(sb,  c);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  appendJavaScriptRepresentation(sb,  c);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  appendJavaScriptRepresentation(sb,  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	appendJavaScriptRepresentation(sb,  c);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  appendHexJavaScriptRepresentation(c,  sb);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  appendHexJavaScriptRepresentation(c,  sb);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	AppendHexJavaScriptRepresentation(sb,  c);  appendHexJavaScriptRepresentation(c,  sb);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  appendSinglequoteEscape(c);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  appendSinglequoteEscape(c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	AppendHexJavaScriptRepresentation(sb,  c);  appendSinglequoteEscape(c);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ",n ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ",n ");	  sb.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  sb.append( ", ",  c);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ", ",  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ", ",  c);	  sb.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  sb.append( "utf-8 ");  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "utf-8 ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "utf-8 ");	  sb.append(   "u   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  sb.append( "u00e7f ");  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "u00e7f ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "u00e7f ");	  sb.append(   "u   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  sb.append( "mv.xml ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "mv.xml ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "mv.xml ");	  sb.append(   "u   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  sb.append( "mv.export.backslash ");  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "mv.export.backslash ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "mv.export.backslash ");	  sb.append(   "u   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  sb.append( ";n ",  c);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ";n ",  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ";n ",  c);	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  sb.append( ";null ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ";null ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ";null ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  sb.append(';');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append(';');  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append(';');	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  sb.append(c;n ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append(c;n ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append(c;n ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  sb.append( ",n ",  c);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ",n ",  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ",n ",  c);	  sb.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  appendHexJavaScriptRepresentation(sb,  c);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  appendHexJavaScriptRepresentation(sb,  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	AppendHexJavaScriptRepresentation(sb,  c);  appendHexJavaScriptRepresentation(sb,  c);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  appendSinglequoteEscape(sb,  c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  appendSinglequoteEscape(sb,  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	appendSinglequoteEscape(sb,  c);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  appendSingleQuotedChar(sb,  c);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  appendSingleQuotedChar(sb,  c);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	appendSingleQuotedChar(sb,  c);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  sb.append( ": ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ": ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ": ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  sb.append( "mv.reportUnsupportedOperation ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "mv.reportUnsupportedOperation ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "mv.reportUnsupportedOperation ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  sb.append( ";negative ");  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ";negative ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ";negative ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  sb.append( ";n: ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ";n: ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ";n: ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  sb.append( ";nn ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ";nn ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ";nn ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  sb.append('#');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append('#');  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append('#');	  sb.append('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  sb.append('n'  +  quote);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append('n'  +  quote);  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append('n'  +  quote);	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
48	[BUG]  [BUGGY]  sb.append( "0000 ");  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "0000 ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "0000 ");	  sb.append(   "u00   ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  sb.append( "#00 ");  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "#00 ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "#00 ");	  sb.append(   "u00   ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  sb.append( "msg.js.internal.reflect.backslash ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "msg.js.internal.reflect.backslash ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "msg.js.internal.reflect.backslash ");	  sb.append(   "u00   ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  sb.append( "; ");  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "; ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "; ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  sb.append( ";numeric ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ";numeric ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ";numeric ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  sb.append(c, ", ");  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append(c, ", ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append(c, ", ");	  sb.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  sb.append( ":: ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( ":: ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( ":: ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  sb.append( "msg.no.character ");  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {    [BUGGY]  sb.append( "msg.no.character ");  [BUGGY]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	sb.append( "msg.no.character ");	  sb.append(   "u00   ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
