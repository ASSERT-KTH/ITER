bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    c  =  outputCharsetEncoder.canEncode(c);  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    c  =  outputCharsetEncoder.canEncode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    c  =  outputCharsetEncoder.canEncode(c);		non-compiled	[CE]  incompatible  types	17	None	add
2	[BUG]  [BUGGY]    char  c  =  outputCharsetEncoder.canEncode(c);  [CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)  [FE]      ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    char  c  =  outputCharsetEncoder.canEncode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    char  c  =  outputCharsetEncoder.canEncode(c);		non-compiled	[CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)	17	None	add
3	[BUG]  [BUGGY]    int  c  =  outputCharsetEncoder.canEncode(c);  [CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)  [FE]        ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    int  c  =  outputCharsetEncoder.canEncode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    int  c  =  outputCharsetEncoder.canEncode(c);		non-compiled	[CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)	17	None	add
4	[BUG]  [BUGGY]    String  c  =  outputCharsetEncoder.canEncode(c);  [CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)  [FE]          ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    String  c  =  outputCharsetEncoder.canEncode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    String  c  =  outputCharsetEncoder.canEncode(c);		non-compiled	[CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)	17	None	add
5	[BUG]  [BUGGY]    Character  c  =  Character.toLowerCase(outputCharsetEncoder);  [CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)  [FE]            ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    Character  c  =  Character.toLowerCase(outputCharsetEncoder);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    Character  c  =  Character.toLowerCase(outputCharsetEncoder);		non-compiled	[CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)	17	None	add
6	[BUG]  [BUGGY]    CharsetEncoder  cc  =  outputCharsetEncoder.canEncode(c);  [CE]  incompatible  types  [FE]              ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    CharsetEncoder  cc  =  outputCharsetEncoder.canEncode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    CharsetEncoder  cc  =  outputCharsetEncoder.canEncode(c);		non-compiled	[CE]  incompatible  types	17	None	add
7	[BUG]  [BUGGY]    Character  c  =  outputCharsetEncoder.canEncode(c);  [CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)  [FE]                ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    Character  c  =  outputCharsetEncoder.canEncode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    Character  c  =  outputCharsetEncoder.canEncode(c);		non-compiled	[CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)	17	None	add
8	[BUG]  [BUGGY]    Integer  c  =  outputCharsetEncoder.canEncode(c);  [CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)  [FE]                  ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    Integer  c  =  outputCharsetEncoder.canEncode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    Integer  c  =  outputCharsetEncoder.canEncode(c);		non-compiled	[CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)	17	None	add
9	[BUG]  [BUGGY]    c  =  outputCharsetEncoder.encode(c);  [CE]  no  suitable  method  found  for  encode(char)  [FE]                    ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    c  =  outputCharsetEncoder.encode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    c  =  outputCharsetEncoder.encode(c);		non-compiled	[CE]  no  suitable  method  found  for  encode(char)	17	None	add
10	[BUG]  [BUGGY]    CharsetEncoder  cc  =  outputCharsetEncoder.encode(c);  [CE]  no  suitable  method  found  for  encode(char)  [FE]                      ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    CharsetEncoder  cc  =  outputCharsetEncoder.encode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    CharsetEncoder  cc  =  outputCharsetEncoder.encode(c);		non-compiled	[CE]  no  suitable  method  found  for  encode(char)	17	None	add
11	[BUG]  [BUGGY]    Character  c  =  outputCharsetEncoder.encode(c);  [CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)  [FE]                        ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    Character  c  =  outputCharsetEncoder.encode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    Character  c  =  outputCharsetEncoder.encode(c);		non-compiled	[CE]  variable  c  is  already  defined  in  method  strEscape(String,char,String,String,String,CharsetEncoder)	17	None	add
12	[BUG]  [BUGGY]    CharsetEncoder  cc  =  getCharsetEncoder();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    CharsetEncoder  cc  =  getCharsetEncoder();  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    CharsetEncoder  cc  =  getCharsetEncoder();		non-compiled	[CE]  <identifier>  expected	17	None	add
13	[BUG]  [BUGGY]  if(c  >  0x1f  ||  c  <=  0x7f)  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  ||  c  <=  0x7f)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  ||  c  <=  0x7f)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  if  (c  <  0x1f  ||  c  <=  0x7f)  {  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if  (c  <  0x1f  ||  c  <=  0x7f)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if  (c  <  0x1f  ||  c  <=  0x7f)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <  0x7f)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <  0x7f)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <  0x7f)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  outputCharsetEncoder.canEncode(c))  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  outputCharsetEncoder.canEncode(c))  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <=  0x7f  &&  outputCharsetEncoder.canEncode(c))  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
17	[BUG]  [BUGGY]  if  (c  <  0x1f  &&  c  <=  0x7f)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if  (c  <  0x1f  &&  c  <=  0x7f)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if  (c  <  0x1f  &&  c  <=  0x7f)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
18	[BUG]  [BUGGY]  if(c  >=  0x1f  &&  c  <=  0x7f)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >=  0x1f  &&  c  <=  0x7f)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >=  0x1f  &&  c  <=  0x7f)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  ||!outputCharsetEncoder.canEncode(c))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  ||!outputCharsetEncoder.canEncode(c))  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <=  0x7f  ||!outputCharsetEncoder.canEncode(c))  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]    c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);		non-compiled	[CE]  illegal  start  of  type	17	None	add
21	[BUG]  [BUGGY]    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c));  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c));  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c));		non-compiled	[CE]  illegal  start  of  type	17	None	add
22	[BUG]  [BUGGY]    char  c  =  outputCharsetEncoder.canEncode(sb);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    char  c  =  outputCharsetEncoder.canEncode(sb);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    char  c  =  outputCharsetEncoder.canEncode(sb);		non-compiled	[CE]  illegal  start  of  type	17	None	add
23	[BUG]  [BUGGY]    c  =  outputCharsetEncoder.canEncode(sb);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    c  =  outputCharsetEncoder.canEncode(sb);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    c  =  outputCharsetEncoder.canEncode(sb);		non-compiled	[CE]  illegal  start  of  type	17	None	add
24	[BUG]  [BUGGY]    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(quote));  [CE]  illegal  start  of  type  [FE]            ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(quote));  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(quote));		non-compiled	[CE]  illegal  start  of  type	17	None	add
25	[BUG]  [BUGGY]    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.canEncode(c));  [CE]  illegal  start  of  type  [FE]              ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.canEncode(c));  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.canEncode(c));		non-compiled	[CE]  illegal  start  of  type	17	None	add
26	[BUG]  [BUGGY]    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c),  quote);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c),  quote);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c),  quote);		non-compiled	[CE]  illegal  start  of  type	17	None	add
27	[BUG]  [BUGGY]    CharsetEncoder  cc  =  outputCharsetEncoder.getEncoder();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    CharsetEncoder  cc  =  outputCharsetEncoder.getEncoder();  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    CharsetEncoder  cc  =  outputCharsetEncoder.getEncoder();		non-compiled	[CE]  illegal  start  of  type	17	None	add
28	[BUG]  [BUGGY]    char  c  =  outputCharsetEncoder.encode(c);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    char  c  =  outputCharsetEncoder.encode(c);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    char  c  =  outputCharsetEncoder.encode(c);		non-compiled	[CE]  illegal  start  of  type	17	None	add
29	[BUG]  [BUGGY]  if(c  >  0x1f  ||  c  <  0x7f)  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  ||  c  <  0x7f)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  ||  c  <  0x7f)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&!outputCharsetEncoder.canEncode(c))  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&!outputCharsetEncoder.canEncode(c))  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <=  0x7f  &&!outputCharsetEncoder.canEncode(c))  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  c  <=  127)  {  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  c  <=  127)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <=  0x7f  &&  c  <=  127)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  ||  c  >  0x10FFFF)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  ||  c  >  0x10FFFF)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <=  0x7f  ||  c  >  0x10FFFF)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
33	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  Character.isDigit(c))  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  Character.isDigit(c))  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <=  0x7f  &&  Character.isDigit(c))  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
34	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  sb.charAt(c  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  sb.charAt(c  -  1)!=  '/')  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <=  0x7f  &&  sb.charAt(c  -  1)!=  '/')  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
35	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  c  <=  quote)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  c  <=  quote)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <=  0x7f  &&  c  <=  quote)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  c  <  quote)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  &&  c  <  quote)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <=  0x7f  &&  c  <  quote)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
37	[BUG]  [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  ||  c  >  0x7f)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]  if(c  >  0x1f  &&  c  <=  0x7f  ||  c  >  0x7f)  {  [BUGGY]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	if(c  >  0x1f  &&  c  <=  0x7f  ||  c  >  0x7f)  {	if  (c  >  0x1f  &&  c  <=  0x7f)  {  	non-compiled	[CE]  illegal  start  of  type	16	None	replace
38	[BUG]  [BUGGY]    int  c  =  outputCharsetEncoder.canEncode(sb);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  if  (outputCharsetEncoder.canEncode(c))  {  sb.append(c);  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  }  else  {      [BUGGY]    int  c  =  outputCharsetEncoder.canEncode(sb);  [BUGGY]  if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	    int  c  =  outputCharsetEncoder.canEncode(sb);		non-compiled	[CE]  illegal  start  of  type	17	None	add
