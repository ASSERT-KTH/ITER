bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out);  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[0],  out);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  &  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  &  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  &  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  &  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  &  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  &	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  &  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  &  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  &  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  &  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  &  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  &	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
28	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
38	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out);  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[1],  out);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  0xf]);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  0xf]);  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  0xf]);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
61	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[2],  out);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  appendHexJavaScriptRepresentation(surrogates[2],  out);  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[2],  out);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	7	None	replace
63	[BUG]  [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
66	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
68	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
70	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)  &  0xf])  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)  &  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)  &  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
75	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
76	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  if(surrogates  ==  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
77	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
78	[BUG]  [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
79	[BUG]  [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
80	[BUG]  [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }    [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]    .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
