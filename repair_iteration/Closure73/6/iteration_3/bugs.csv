bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  out.append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
2	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
3	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
4	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
5	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
6	[BUG]  [BUGGY]  out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
7	[BUG]  [BUGGY]  out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
8	[BUG]  [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
9	[BUG]  [BUGGY]  out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  if(Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  if(!Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(!Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(!Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
14	[BUG]  [BUGGY]  if(!Character.isDigit(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(!Character.isDigit(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(!Character.isDigit(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
15	[BUG]  [BUGGY]  if(Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
16	[BUG]  [BUGGY]  if(!Character.isISOControl(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(!Character.isISOControl(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(!Character.isISOControl(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  if(Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(Character.isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
18	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  3)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  3)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  3)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    4)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
20	[BUG]  [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
21	[BUG]  [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
22	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	39	None	replace
23	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    32)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	54	None	replace
24	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    32)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	54	None	replace
25	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    32)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	54	None	replace
26	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >=  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    32)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
27	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    32)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
28	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
33	[BUG]  [BUGGY]  out.append( "0000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "0000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "0000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
34	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >=  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    6)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
38	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
39	[BUG]  [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
40	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
41	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
42	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
43	[BUG]  [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
44	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  	37	None	replace
45	[BUG]  [BUGGY]  out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	38	None	replace
46	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	38	None	replace
47	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[2],  out,  codePoint);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[2],  out,  codePoint);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[2],  out,  codePoint);	  appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  	61	None	replace
48	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[3],  out);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[3],  out);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[3],  out);	  appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  	61	None	replace
49	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[4],  out);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[4],  out);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[4],  out);	  appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  	61	None	replace
50	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[2],  out,  HEX_CHARS);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[2],  out,  HEX_CHARS);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[2],  out,  HEX_CHARS);	  appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  	61	None	replace
51	[BUG]  [BUGGY]  out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	64	None	replace
52	[BUG]  [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	64	None	replace
53	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	64	None	replace
54	[BUG]  [BUGGY]  out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	46	None	replace
55	[BUG]  [BUGGY]  out.append( ".000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	46	None	replace
56	[BUG]  [BUGGY]  out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	71	None	replace
57	[BUG]  [BUGGY]  out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	71	None	replace
58	[BUG]  [BUGGY]  out.append( "label=? ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=? ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=? ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	71	None	replace
59	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    	non-compiled	[CE]  	20	None	replace
60	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    	non-compiled	[CE]  	20	None	replace
61	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    	non-compiled	[CE]  	20	None	replace
62	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    	non-compiled	[CE]  	20	None	replace
63	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  6)&  0xf])  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  6)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  6)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  	31	None	replace
64	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  	31	None	replace
65	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  	31	None	replace
66	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  	31	None	replace
67	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
68	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    18)&    0xf])    	non-compiled	[CE]  	30	None	replace
69	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    18)&    0xf])    	non-compiled	[CE]  	30	None	replace
70	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    18)&    0xf])    	non-compiled	[CE]  	30	None	replace
71	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    18)&    0xf])    	non-compiled	[CE]  	30	None	replace
72	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    18)&    0xf])    	non-compiled	[CE]  	30	None	replace
73	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  17)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  17)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  17)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    18)&    0xf])    	non-compiled	[CE]  	30	None	replace
74	[BUG]  [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS    	non-compiled	[CE]  	77	None	replace
75	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
76	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
77	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHAR  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHAR  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHAR	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
78	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
79	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
80	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
81	[BUG]  [BUGGY]  out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
82	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
83	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
84	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
85	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
86	[BUG]  [BUGGY]  out.append( "hu-char ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "hu-char ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hu-char ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "hu       ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
87	[BUG]  [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "hu       ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
88	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
89	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
90	[BUG]  [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
91	[BUG]  [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
92	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
93	[BUG]  [BUGGY]  out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
94	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
95	[BUG]  [BUGGY]  out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
96	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
97	[BUG]  [BUGGY]  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
98	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
99	[BUG]  [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
100	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
101	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
102	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
103	[BUG]  [BUGGY]  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
104	[BUG]  [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
105	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
106	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
107	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
108	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
109	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
110	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
111	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
112	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
113	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
114	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
115	[BUG]  [BUGGY]  out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
116	[BUG]  [BUGGY]  out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
117	[BUG]  [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
118	[BUG]  [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
119	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
120	[BUG]  [BUGGY]  out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
121	[BUG]  [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
122	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
123	[BUG]  [BUGGY]  if(codePoint  ==  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  ==  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  ==  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
124	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  codePoint);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  codePoint);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[0],  out,  codePoint);	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
125	[BUG]  [BUGGY]  if(codePoint  ==  codePoint)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  ==  codePoint)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  ==  codePoint)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
126	[BUG]  [BUGGY]  if(codePoint!=  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint!=  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint!=  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
127	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  codePoint);  appendHexJavaScriptRepresentation(surrogates[1],  out);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  codePoint);  appendHexJavaScriptRepresentation(surrogates[1],  out);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[0],  out,  codePoint);  appendHexJavaScriptRepresentation(surrogates[1],  out);	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
128	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)    &    0xf])    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
129	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)    &    0xf])    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
130	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)    &    0xf])    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
131	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)    &    0xf])    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
132	[BUG]  [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
133	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
134	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
135	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >=  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
136	[BUG]  [BUGGY]  out.append( "hu-char ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "hu-char ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hu-char ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "hu       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
137	[BUG]  [BUGGY]  out.append( "hudson   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "hudson   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hudson   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "hu       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
138	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out,  codePoint);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out,  codePoint);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[1],  out,  codePoint);	  appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
139	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out,  encodePoint);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out,  encodePoint);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[1],  out,  encodePoint);	  appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
140	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out,  HEX_CHARS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out,  HEX_CHARS);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[1],  out,  HEX_CHARS);	  appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
141	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[1],  out,  false);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[1],  out,  false);	  appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
142	[BUG]  [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
143	[BUG]  [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[codePoint  &  0xf]);	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
144	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
145	[BUG]  [BUGGY]  if(codePoint  >=  HEX_CHARS)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  >=  HEX_CHARS)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  >=  HEX_CHARS)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
146	[BUG]  [BUGGY]  if(codePoint  >=  0)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  >=  0)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  >=  0)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
147	[BUG]  [BUGGY]  if(codePoint  >=  0)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  >=  0)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  >=  0)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
148	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
149	[BUG]  [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
150	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
151	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
152	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
153	[BUG]  [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[	  if(surrogates    ==    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
154	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[	  if(surrogates    ==    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
155	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  if(surrogates    ==    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
156	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >=    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
157	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
158	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
159	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
160	[BUG]  [BUGGY]  out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
161	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
162	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
163	[BUG]  [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "    u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
164	[BUG]  [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)	  out.append(   "    u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
165	[BUG]  [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "    u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
166	[BUG]  [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)	  out.append(   "    u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
167	[BUG]  [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "    u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
168	[BUG]  [BUGGY]  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
169	[BUG]  [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "native ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
170	[BUG]  [BUGGY]  out.append( "   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
171	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >=  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >=  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >=  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
172	[BUG]  [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "00000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
173	[BUG]  [BUGGY]  out.append( "000000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "000000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "000000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "00000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
174	[BUG]  [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  out.append(   "00000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
175	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    &    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
176	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    &    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
177	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  6)&  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  6)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  6)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    &    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
178	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint!=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint!=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint!=  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    &    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
179	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
180	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
181	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
182	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
183	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
184	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
185	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  	34	None	replace
186	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  	34	None	replace
187	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
188	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
189	[BUG]  [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
190	[BUG]  [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
191	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  HEX_CHARS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  HEX_CHARS);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[0],  out,  HEX_CHARS);	  appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
192	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  3);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  3);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[0],  out,  3);	  appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
193	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  encodePoint);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  encodePoint);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[0],  out,  encodePoint);	  appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
194	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  false);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[0],  out,  false);	  appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
195	[BUG]  [BUGGY]  out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
196	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
197	[BUG]  [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  1]);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  1]);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  1]);	  .append(HEX_CHARS[codePoint    &    0xf]).append(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
198	[BUG]  [BUGGY]  .append(HEX_CHARS[codePoint  &  1]).append(HEX_CHARS[codePoint  &  1]);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[codePoint  &  1]).append(HEX_CHARS[codePoint  &  1]);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[codePoint  &  1]).append(HEX_CHARS[codePoint  &  1]);	  .append(HEX_CHARS[codePoint    &    0xf]).append(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
199	[BUG]  [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  2]);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  2]);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  2]);	  .append(HEX_CHARS[codePoint    &    0xf]).append(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
200	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
201	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
202	[BUG]  [BUGGY]  Appendable  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  Appendable  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	Appendable  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
203	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out,  codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out,  codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(HEX_CHARS[0],  out,  codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
204	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
205	[BUG]  [BUGGY]  Appendable  out  =  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  Appendable  out  =  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	Appendable  out  =  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
206	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
207	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
208	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >=  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
209	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
210	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HE  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HE  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HE	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
211	[BUG]  [BUGGY]  out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
212	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	68	None	replace
213	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	68	None	replace
214	[BUG]  [BUGGY]  Appendable  appendHexJavaScriptRepresentation(surrogates[1],  out);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  Appendable  appendHexJavaScriptRepresentation(surrogates[1],  out);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	Appendable  appendHexJavaScriptRepresentation(surrogates[1],  out);	  appendHexJavaScriptRepresentation(surrogates[1],    out);    appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  	70	None	replace
215	[BUG]  [BUGGY]  Appendable  out  =  appendHexJavaScriptRepresentation(surrogates[1],  out);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  Appendable  out  =  appendHexJavaScriptRepresentation(surrogates[1],  out);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	Appendable  out  =  appendHexJavaScriptRepresentation(surrogates[1],  out);	  appendHexJavaScriptRepresentation(surrogates[1],    out);    appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  	70	None	replace
216	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    12)&    0xf])    	non-compiled	[CE]  	10	None	replace
217	[BUG]  [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hu   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    12)&    0xf])    	non-compiled	[CE]  	10	None	replace
218	[BUG]  [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    12)&    0xf])    	non-compiled	[CE]  	10	None	replace
219	[BUG]  [BUGGY]  out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= " ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
220	[BUG]  [BUGGY]  out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=' ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	81	None	replace
221	[BUG]  [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	81	None	replace
222	[BUG]  [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	81	None	replace
223	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    32)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	53	None	replace
224	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    32)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	53	None	replace
225	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >=  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >=  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >=  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    32)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
226	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
227	[BUG]  [BUGGY]  out.append( "hu-char ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "hu-char ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hu-char ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "hu       ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
228	[BUG]  [BUGGY]  out.append( "hudson   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "hudson   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hudson   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "hu       ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
229	[BUG]  [BUGGY]  out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "htf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
230	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
231	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
232	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
233	[BUG]  [BUGGY]  out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
234	[BUG]  [BUGGY]  out.append('000').append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append('000').append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append('000').append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
235	[BUG]  [BUGGY]  out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	46	None	replace
236	[BUG]  [BUGGY]  out.append( "].append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "].append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "].append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	52	None	replace
237	[BUG]  [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ".append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ".append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
238	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
239	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
240	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
241	[BUG]  [BUGGY]  if(codePoint  ==  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  ==  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  ==  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
242	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
243	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
244	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
245	[BUG]  [BUGGY]  out.append( "Label=   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Label=   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Label=   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
246	[BUG]  [BUGGY]  if(codePoint  <  HEX_CHARS)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  <  HEX_CHARS)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  <  HEX_CHARS)  {.append(HEX_CHARS[codePoint  &  0xf]);  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
247	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
248	[BUG]  [BUGGY]  out.append( "label=   ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=   ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=   ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
249	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
250	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[2],  out,  encodePoint);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[2],  out,  encodePoint);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[2],  out,  encodePoint);	  appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
251	[BUG]  [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
252	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
253	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
254	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HE  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HE  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HE	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
255	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
256	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    &    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
257	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    &    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
258	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    &    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
259	[BUG]  [BUGGY]  out.append( "].append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "].append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "].append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
260	[BUG]  [BUGGY]  out.append( ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
261	[BUG]  [BUGGY]  out.append( "].append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "].append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "].append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  	4	None	replace
262	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  	40	None	replace
263	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  	1	None	replace
264	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  24)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  24)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  24)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  	1	None	replace
265	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  	70	None	replace
266	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  	70	None	replace
267	[BUG]  [BUGGY]  if(codePoint  ==  0)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  ==  0)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  ==  0)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
268	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[3],  out);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[3],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[3],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
269	[BUG]  [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
270	[BUG]  [BUGGY]  out.append( "JavaScriptRepresentation  n   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "JavaScriptRepresentation  n   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "JavaScriptRepresentation  n   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
271	[BUG]  [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
272	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
273	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
274	[BUG]  [BUGGY]  if(out!=  context)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(out!=  context)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(out!=  context)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
275	[BUG]  [BUGGY]  if(out!=  context)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(out!=  context)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(out!=  context)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
276	[BUG]  [BUGGY]  if(!isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(!isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(!isSupplementaryCodePoint(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
277	[BUG]  [BUGGY]  if(out!=  context.getCurrentLocation())  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(out!=  context.getCurrentLocation())  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(out!=  context.getCurrentLocation())  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
278	[BUG]  [BUGGY]  out.append( "JavaScriptRepresentation  n   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "JavaScriptRepresentation  n   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "JavaScriptRepresentation  n   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
279	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  6)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
280	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)    &    0xf])    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
281	[BUG]  [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "00000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
282	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
283	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
284	[BUG]  [BUGGY]  if(out!=  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(out!=  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(out!=  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
285	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
286	[BUG]  [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
287	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
288	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  24)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  24)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  24)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
289	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
290	[BUG]  [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
291	[BUG]  [BUGGY]  out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
292	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
293	[BUG]  [BUGGY]  out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
294	[BUG]  [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "00 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
295	[BUG]  [BUGGY]  out.append('00').append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append('00').append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append('00').append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
296	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
297	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX	  if(surrogates    ==    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
298	[BUG]  [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
299	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
300	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
301	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  2)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  2)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  2)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    4)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
302	[BUG]  [BUGGY]  out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
303	[BUG]  [BUGGY]  out.append( "Avia   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Avia   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Avia   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
304	[BUG]  [BUGGY]  out.append( "hudson   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "hudson   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "hudson   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "hu       ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
305	[BUG]  [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
306	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
307	[BUG]  [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >	  out.append(   "    u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
308	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
309	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
310	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
311	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
312	[BUG]  [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  0xf])	  .append(HEX_CHARS[codePoint    &    0xf]).append(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
313	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
314	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
315	[BUG]  [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
316	[BUG]  [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
317	[BUG]  [BUGGY]  out.append( "Label=   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Label=   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Label=   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
318	[BUG]  [BUGGY]  out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
319	[BUG]  [BUGGY]  out.append( "label=1   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=1   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=1   ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
320	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
321	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
322	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
323	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
324	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  7)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  7)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  7)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  append(HEX_CHARS[(codePoint    >>    >    6)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
325	[BUG]  [BUGGY]  out.append( "Label=   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Label=   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Label=   ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
326	[BUG]  [BUGGY]  out.append( "label=? ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=? ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=? ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
327	[BUG]  [BUGGY]  out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Avn ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
328	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(code  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(code  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(code	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
329	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
330	[BUG]  [BUGGY]  if(!Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(!Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(!Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
331	[BUG]  [BUGGY]  if(surrogates.length  >  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates.length  >  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates.length  >  0)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
332	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[0],  out);  }	  appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
333	[BUG]  [BUGGY]  out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
334	[BUG]  [BUGGY]  out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
335	[BUG]  [BUGGY]  out.append( "  hu= ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  hu= ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  hu= ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "hu       ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
336	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
337	[BUG]  [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
338	[BUG]  [BUGGY]  append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
339	[BUG]  [BUGGY]  out.append( "id-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "id-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "id-8 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
340	[BUG]  [BUGGY]  out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
341	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
342	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "null ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
343	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  17)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  17)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  17)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
344	[BUG]  [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
345	[BUG]  [BUGGY]  out.append( ",00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ",00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ",00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
346	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
347	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
348	[BUG]  [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
349	[BUG]  [BUGGY]  out.append( "  hu= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  hu= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  hu= ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "hu       ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
350	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
351	[BUG]  [BUGGY]  out.append( "i00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "i00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "i00 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
352	[BUG]  [BUGGY]  if(surrogates.length  >  0)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates.length  >  0)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates.length  >  0)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
353	[BUG]  [BUGGY]  if(surrogates[1]!=  null)  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates[1]!=  null)  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates[1]!=  null)  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
354	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
355	[BUG]  [BUGGY]  if(!Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(!Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(!Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[2],  out);  }	  appendHexJavaScriptRepresentation(surrogates[1],    out);    appendHexJavaScriptRepresentation(surrogates[2],    out);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
356	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
357	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  out.append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
358	[BUG]  [BUGGY]  out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
359	[BUG]  [BUGGY]  out.append( "  uz= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  uz= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  uz= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "    u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
360	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
361	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
362	[BUG]  [BUGGY]  out.append( "].append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "].append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "].append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
363	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
364	[BUG]  [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
365	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  1);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[0],  out,  1);	  appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
366	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  appendHexJavaScriptRepresentation(surrogates[0],  out,  2);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	appendHexJavaScriptRepresentation(surrogates[0],  out,  2);	  appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
367	[BUG]  [BUGGY]  out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
368	[BUG]  [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "u000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
369	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
370	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
371	[BUG]  [BUGGY]  out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
372	[BUG]  [BUGGY]  out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
373	[BUG]  [BUGGY]  if(codePoint  >=  HEX_CHARS)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  >=  HEX_CHARS)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  >=  HEX_CHARS)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
374	[BUG]  [BUGGY]  if(codePoint  <  HEX_CHARS)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  <  HEX_CHARS)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  <  HEX_CHARS)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
375	[BUG]  [BUGGY]  if(codePoint!=  HEX_CHARS)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint!=  HEX_CHARS)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint!=  HEX_CHARS)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
376	[BUG]  [BUGGY]  if(codePoint  <  HEX_CHARS.length)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  <  HEX_CHARS.length)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  <  HEX_CHARS.length)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
377	[BUG]  [BUGGY]  if(codePoint  <  HEX_CHARS.length)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(codePoint  <  HEX_CHARS.length)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(codePoint  <  HEX_CHARS.length)  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }  else  {  appendHexJavaScriptRepresentation(HEX_CHARS[codePoint  &  0xf]);  }	  .append(HEX_CHARS[codePoint    &    0xf]);    appendHexJavaScriptRepresentation(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
378	[BUG]  [BUGGY]  if(surrogates!=  null)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
379	[BUG]  [BUGGY]  if(surrogates!=  null)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
380	[BUG]  [BUGGY]  if(Character.isDigit(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(Character.isDigit(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(Character.isDigit(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  else  {  appendHexJavaScriptRepresentation(surrogates[1],  out	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
381	[BUG]  [BUGGY]  if(Character.isDigit(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(Character.isDigit(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(Character.isDigit(codePoint))  {  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  }	  char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
382	[BUG]  [BUGGY]  out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
383	[BUG]  [BUGGY]  append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
384	[BUG]  [BUGGY]  out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "Label= " ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
385	[BUG]  [BUGGY]  out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label=[ ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   "label=   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
386	[BUG]  [BUGGY]  out.append( "msg.u000 ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "msg.u000 ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "msg.u000 ".append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u000   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
387	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
388	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
389	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
390	[BUG]  [BUGGY]  out.append( "  hu= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  hu= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  hu= ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "hu       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
391	[BUG]  [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "label= ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  12)&  0xf])	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    12)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
392	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
393	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HE  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HE  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HE	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
394	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
395	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
396	[BUG]  [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "av ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >	  out.append(   "av   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
397	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  32)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  32)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  32)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)    &    0xf])    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
398	[BUG]  [BUGGY]  if(surrogates  ==  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates  ==  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates  ==  null)  {  out.append( "u   ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS	  out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
399	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "u00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
400	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( "n ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS	  if(surrogates!=    null)    {    out.append(   "u       ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
401	[BUG]  [BUGGY]  if(!Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(!Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(!Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
402	[BUG]  [BUGGY]  if(Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(Character.isDigit(codePoint))  {  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  appendHexJavaScriptRepresentation(HEX_CHARS[1],  out);  }	  appendHexJavaScriptRepresentation(HEX_CHARS[0],    out);    appendHexJavaScriptRepresentation(HEX_CHARS[1],    out);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
403	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >=  >  8)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    32)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
404	[BUG]  [BUGGY]  out.append( "i00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "i00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "i00 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  16)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    16)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
405	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  32)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
406	[BUG]  [BUGGY]  out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
407	[BUG]  [BUGGY]  append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
408	[BUG]  [BUGGY]  out.append( "id-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "id-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "id-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
409	[BUG]  [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  32)&  0xf])  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  32)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "utf-8 ").append(HEX_CHARS[(codePoint  >>  >  18)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  32)&  0xf])	  out.append(   "utf-8   ").append(HEX_CHARS[(codePoint    >>    >    18)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
410	[BUG]  [BUGGY]  out.append( "i00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "i00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "i00 ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "u00   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
411	[BUG]  [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&	  .append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)    &    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)    &    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
412	[BUG]  [BUGGY]  out.append( ",00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( ",00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( ",00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "00000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
413	[BUG]  [BUGGY]  append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	append( "00000 ").append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "00000   ").append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
414	[BUG]  [BUGGY]  out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	out.append( "  - ").append(HEX_CHARS[(codePoint  >>  >  16)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  8)&  0xf])	  out.append(   "n   ").append(HEX_CHARS[(codePoint    >>    >    16)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    8)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
415	[BUG]  [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  12]);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  12]);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  12]);	  .append(HEX_CHARS[codePoint    &    0xf]).append(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
416	[BUG]  [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  3]);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  .append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  3]);  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	.append(HEX_CHARS[codePoint  &  0xf]).append(HEX_CHARS[codePoint  &  3]);	  .append(HEX_CHARS[codePoint    &    0xf]).append(HEX_CHARS[codePoint    &    0xf]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
417	[BUG]  [BUGGY]  if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (Character.isSupplementaryCodePoint(codePoint))  {      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }      [BUGGY]  if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])  [BUGGY]      .append(HEX_CHARS[(codePoint  >>>  12)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  8)  &  0xf])  .append(HEX_CHARS[(codePoint  >>>  4)  &  0xf])  .append(HEX_CHARS[codePoint  &  0xf]);  }  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	if(surrogates!=  null)  {  out.append( ".append(HEX_CHARS[(codePoint  >>  >  12)&  0xf]).append(HEX_CHARS[(codePoint  >>  >  4)&  0xf])	  out.append(   ".append(HEX_CHARS[(codePoint    >>    >    12)&    0xf]).append(HEX_CHARS[(codePoint    >>    >    4)&    0xf])    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
