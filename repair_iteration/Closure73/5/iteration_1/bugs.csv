bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  if(!Character.isSupported(codePoint))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(!Character.isSupported(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isSupported(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  if(!Character.isISOControl(codePoint))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(!Character.isISOControl(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isISOControl(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  if(Character.isSupported(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(Character.isSupported(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isSupported(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]    [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	  	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(Character.isUpperCase(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  if(Character.isWhitespace(codePoint))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(Character.isWhitespace(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isWhitespace(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  if(Character.isHexJavaScriptRepresentation(codePoint))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {  [BUGGY]  if(Character.isHexJavaScriptRepresentation(codePoint))  {  [BUGGY]      char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append( "\\u ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isHexJavaScriptRepresentation(codePoint))  {	if  (Character.isSupplementaryCodePoint(codePoint))  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
