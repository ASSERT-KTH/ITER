bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isSupplementaryChars(codePoint))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)||  Character.isSupplementaryChars(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||  Character.isSupplementaryChars(codePoint))  {	  if(Character.isDigit(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {	  if(Character.isDigit(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	1	None	replace
3	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isISOControl(codePoint))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)||  Character.isISOControl(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||  Character.isISOControl(codePoint))  {	  if(Character.isDigit(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	1	None	replace
4	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||  Character.isLetterOrDigit(codePoint))  {	  if(Character.isDigit(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	1	None	replace
5	[BUG]  [BUGGY]  if(!Character.isDigit(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isDigit(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isDigit(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {	  if(Character.isDigit(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	1	None	replace
6	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {	  if(Character.isDigit(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	1	None	replace
7	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isWhitespace(codePoint))  {  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)||  Character.isWhitespace(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||  Character.isWhitespace(codePoint))  {	  if(Character.isDigit(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	1	None	replace
8	[BUG]  [BUGGY]  if(!Character.isUpperCase(codePoint))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isUpperCase(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isUpperCase(codePoint))  {	  if(Character.isUpperCase(codePoint))    {    	non-compiled	[CE]  	9	None	replace
9	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isDigit(codePoint))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isDigit(codePoint))  {	  if(Character.isUpperCase(codePoint))    {    	non-compiled	[CE]  	9	None	replace
10	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isLetterOrDigit(codePoint))  {	  if(Character.isUpperCase(codePoint))    {    	non-compiled	[CE]  	9	None	replace
11	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isWhitespace(codePoint))  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isWhitespace(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isWhitespace(codePoint))  {	  if(Character.isUpperCase(codePoint))    {    	non-compiled	[CE]  	9	None	replace
12	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isISOControl(codePoint))  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isISOControl(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isISOControl(codePoint))  {	  if(Character.isUpperCase(codePoint))    {    	non-compiled	[CE]  	9	None	replace
13	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isJavaIdentifierPart(codePoint))  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isJavaIdentifierPart(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isJavaIdentifierPart(codePoint))  {	  if(Character.isUpperCase(codePoint))    {    	non-compiled	[CE]  	9	None	replace
14	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isScalar(codePoint))  {  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isScalar(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isScalar(codePoint))  {	  if(Character.isUpperCase(codePoint))    {    	non-compiled	[CE]  	9	None	replace
15	[BUG]  [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);	      	non-compiled	[CE]  	8	None	replace
16	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(codePoint,  out);  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  appendHexJavaScriptRepresentation(codePoint,  out);  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	appendHexJavaScriptRepresentation(codePoint,  out);	      	non-compiled	[CE]  	8	None	replace
17	[BUG]  [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	char[]  surrogates  =  Character.toChars(codePoint);	      	non-compiled	[CE]  	8	None	replace
18	[BUG]  [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[1],  out);  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[1],  out);  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[1],  out);	      	non-compiled	[CE]  	8	None	replace
19	[BUG]  [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out,  codePoint);  [CE]  [FE]                              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out,  codePoint);  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out,  codePoint);	      	non-compiled	[CE]  	8	None	replace
20	[BUG]  [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(urrogates[0],  out);  [CE]  [FE]                                ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(urrogates[0],  out);  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(urrogates[0],  out);	      	non-compiled	[CE]  	8	None	replace
21	[BUG]  [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[2],  out);  [CE]  [FE]                                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[2],  out);  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[2],  out);	      	non-compiled	[CE]  	8	None	replace
22	[BUG]  [BUGGY]  if(!Character.isJavaScriptRepresentation(codePoint))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isJavaScriptRepresentation(codePoint))  {	  if(Character.isHexJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  	12	None	replace
23	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {	  if(Character.isHexJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  	12	None	replace
24	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {	  if(Character.isHexJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  	12	None	replace
25	[BUG]  [BUGGY]  if(isHexJavaScriptRepresentation(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(isHexJavaScriptRepresentation(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(isHexJavaScriptRepresentation(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {	  if(Character.isHexJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  	12	None	replace
26	[BUG]  [BUGGY]  if(Character.isHexJavaScriptRepresentation(codePoint)||  Character.isDigit(codePoint))  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isHexJavaScriptRepresentation(codePoint)||  Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isHexJavaScriptRepresentation(codePoint)||  Character.isDigit(codePoint))  {	  if(Character.isHexJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  	12	None	replace
27	[BUG]  [BUGGY]  if(Character.isHexJavaScriptRepresentation(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isHexJavaScriptRepresentation(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isHexJavaScriptRepresentation(codePoint)||  Character.isLetterOrDigit(codePoint))  {	  if(Character.isHexJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  	12	None	replace
28	[BUG]  [BUGGY]  if(Character.isSupported(codePoint)||  Character.isDigit(codePoint))  {  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isSupported(codePoint)||  Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isSupported(codePoint)||  Character.isDigit(codePoint))  {	  if(Character.isSupported(codePoint))    {    	non-compiled	[CE]  	7	None	replace
29	[BUG]  [BUGGY]  if(Character.isSupported(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isSupported(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isSupported(codePoint)||  Character.isLetterOrDigit(codePoint))  {	  if(Character.isSupported(codePoint))    {    	non-compiled	[CE]  	7	None	replace
30	[BUG]  [BUGGY]  if(Character.isSupported(codePoint)||  Character.isWhitespace(codePoint))  {  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isSupported(codePoint)||  Character.isWhitespace(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isSupported(codePoint)||  Character.isWhitespace(codePoint))  {	  if(Character.isSupported(codePoint))    {    	non-compiled	[CE]  	7	None	replace
31	[BUG]  [BUGGY]  if(Character.isSupported(codePoint)||  Character.isUpperCase(codePoint))  {  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isSupported(codePoint)||  Character.isUpperCase(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isSupported(codePoint)||  Character.isUpperCase(codePoint))  {	  if(Character.isSupported(codePoint))    {    	non-compiled	[CE]  	7	None	replace
32	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isSupplementaryCodePoint(out))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isSupplementaryCodePoint(out))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)&&  Character.isSupplementaryCodePoint(out))  {	  if(Character.isUpperCase(codePoint)&&    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	11	None	replace
33	[BUG]  [BUGGY]  if(!Character.isUpperCase(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isUpperCase(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isUpperCase(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {	  if(Character.isUpperCase(codePoint)&&    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	11	None	replace
34	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isDigit(codePoint))  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)&&  Character.isDigit(codePoint))  {	  if(Character.isUpperCase(codePoint)&&    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	11	None	replace
35	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isISOControl(codePoint))  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isISOControl(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)&&  Character.isISOControl(codePoint))  {	  if(Character.isUpperCase(codePoint)&&    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	11	None	replace
36	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isSupplementaryChars(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isSupplementaryChars(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)&&  Character.isSupplementaryChars(codePoint))  {	  if(Character.isUpperCase(codePoint)&&    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isJavaScriptRepresentation(codePoint))  {  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)&&  Character.isJavaScriptRepresentation(codePoint))  {	  if(Character.isUpperCase(codePoint)&&    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  	11	None	replace
38	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  	2	None	replace
39	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isDigit(codePoint))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||  Character.isDigit(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  	2	None	replace
40	[BUG]  [BUGGY]  if(isJavaScriptRepresentation(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(isJavaScriptRepresentation(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(isJavaScriptRepresentation(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  	2	None	replace
41	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||  Character.isLetterOrDigit(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  	2	None	replace
42	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isUpperCase(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isUpperCase(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||  Character.isUpperCase(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isISOControl(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isISOControl(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||  Character.isISOControl(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isSupplementaryChars(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isSupplementaryChars(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||  Character.isSupplementaryChars(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  if(!Character.isJavaScriptRepresentation(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isJavaScriptRepresentation(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isJavaScriptRepresentation(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isWhitespace(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isWhitespace(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||  Character.isWhitespace(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isSupplementaryChars(codePoint))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isSupplementaryChars(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isSupplementaryChars(codePoint))  {	  if(Character.isUpperCase(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {	  if(Character.isUpperCase(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  if(!Character.isDigit(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isDigit(codePoint))  {	  if(!Character.isISOControl(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  if(!Character.isWhitespace(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isWhitespace(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isWhitespace(codePoint))  {	  if(!Character.isISOControl(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  if(!Character.isJavaIdentifierPart(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isJavaIdentifierPart(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isJavaIdentifierPart(codePoint))  {	  if(!Character.isISOControl(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  if(!Character.isISOControl(codePoint)||  Character.isDigit(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isISOControl(codePoint)||  Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isISOControl(codePoint)||  Character.isDigit(codePoint))  {	  if(!Character.isISOControl(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  if(!Character.isISOControl(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isISOControl(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isISOControl(codePoint)||  Character.isLetterOrDigit(codePoint))  {	  if(!Character.isISOControl(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  if(!Character.isSupported(codePoint)||  Character.isDigit(codePoint))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isSupported(codePoint)||  Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isSupported(codePoint)||  Character.isDigit(codePoint))  {	  if(!Character.isSupported(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  if(!Character.isSupported(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(!Character.isSupported(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(!Character.isSupported(codePoint)||  Character.isLetterOrDigit(codePoint))  {	  if(!Character.isSupported(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
57	[BUG]  [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isDigit(codePoint))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isWhitespace(codePoint)||  Character.isDigit(codePoint))  {	  if(Character.isWhitespace(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isLetterOrDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isWhitespace(codePoint)||  Character.isLetterOrDigit(codePoint))  {	  if(Character.isWhitespace(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isJavaIdentifierPart(codePoint))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isJavaIdentifierPart(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isWhitespace(codePoint)||  Character.isJavaIdentifierPart(codePoint))  {	  if(Character.isWhitespace(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isISOControl(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isISOControl(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isWhitespace(codePoint)||  Character.isISOControl(codePoint))  {	  if(Character.isWhitespace(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isScalar(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isScalar(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isWhitespace(codePoint)||  Character.isScalar(codePoint))  {	  if(Character.isWhitespace(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  if(Character.isWhitespace(codePoint)&&  Character.isDigit(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isWhitespace(codePoint)&&  Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isWhitespace(codePoint)&&  Character.isDigit(codePoint))  {	  if(Character.isWhitespace(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  if(Character.isWhitespace(codePoint)&&  out.charAt(codePoint  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isWhitespace(codePoint)&&  out.charAt(codePoint  -  1)!=  'n')  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isWhitespace(codePoint)&&  out.charAt(codePoint  -  1)!=  'n')  {	  if(Character.isWhitespace(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isSupported(codePoint))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)||  Character.isSupported(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||  Character.isSupported(codePoint))  {	  if(!Character.isSupported(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(Character.isUpperCase(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
66	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isWhitespace(codePoint))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isWhitespace(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)&&  Character.isWhitespace(codePoint))  {	  if(Character.isUpperCase(codePoint)&&    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isHexJavaScriptRepresentation(codePoint))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)&&  Character.isHexJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)&&  Character.isHexJavaScriptRepresentation(codePoint))  {	  if(Character.isUpperCase(codePoint)&&    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  if(Character.isJavaIdentifierPart(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaIdentifierPart(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaIdentifierPart(codePoint))  {	  if(Character.isSupported(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isHexJavaScriptRepresentation(codePoint))  {	  if(Character.isUpperCase(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||!Character.isISOControl(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||!Character.isISOControl(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||!Character.isISOControl(codePoint))  {	  if(!Character.isISOControl(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||!Character.isISOControl(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)||!Character.isISOControl(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||!Character.isISOControl(codePoint))  {	  if(!Character.isISOControl(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
72	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isDigit(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)||  Character.isDigit(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)||  Character.isDigit(codePoint)||  Character.isJavaScriptRepresentation(codePoint))  {	  if(Character.isJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isUpperCase(codePoint))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)||  Character.isUpperCase(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||  Character.isUpperCase(codePoint))  {	  if(Character.isDigit(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  if(CodeGenerator.isHexJavaScriptRepresentation(codePoint))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(CodeGenerator.isHexJavaScriptRepresentation(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(CodeGenerator.isHexJavaScriptRepresentation(codePoint))  {	  if(Character.isHexJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
75	[BUG]  [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS,  out);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS,  out);  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS,  out);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
76	[BUG]  [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS[0],  out);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  char[]  codePoint  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS,  out);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  char[]  codePoint  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS,  out);  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	char[]  codePoint  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(HEX_CHARS,  out);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
78	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||!Character.isISOControl(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||!Character.isISOControl(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||!Character.isISOControl(codePoint))  {	  if(!Character.isISOControl(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isWhitespace(codePoint))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isWhitespace(codePoint)||  Character.isWhitespace(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isWhitespace(codePoint)||  Character.isWhitespace(codePoint))  {	  if(Character.isWhitespace(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
80	[BUG]  [BUGGY]  if(Character.isLetter(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isLetter(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isLetter(codePoint)||  Character.isSupplementaryCodePoint(codePoint))  {	  if(Character.isUpperCase(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
81	[BUG]  [BUGGY]  if(Character.isLetter(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isLetter(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isLetter(codePoint)&&  Character.isSupplementaryCodePoint(codePoint))  {	  if(Character.isUpperCase(codePoint)&&    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(hexJavaScriptRepresentation(codePoint,  out));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(hexJavaScriptRepresentation(codePoint,  out));  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(hexJavaScriptRepresentation(codePoint,  out));	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  Context  cc  =  getCurrentContext();  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	Context  cc  =  getCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  if(Character.isDigit(codePoint)||  Character.isDigit(codePoint))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isDigit(codePoint)||  Character.isDigit(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isDigit(codePoint)||  Character.isDigit(codePoint))  {	  if(Character.isDigit(codePoint)||    Character.isSupplementaryCodePoint(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
85	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isSupported(codePoint))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isSupported(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isSupported(codePoint))  {	  if(Character.isSupported(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaScriptRepresentation(codePoint)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaScriptRepresentation(codePoint)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(Character.isJavaScriptRepresentation(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
87	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isLetter(codePoint))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)||  Character.isLetter(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)||  Character.isLetter(codePoint))  {	  if(Character.isUpperCase(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
88	[BUG]  [BUGGY]  if(Character.isUpperCase(codePoint)&&!Character.isSupported(codePoint))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isUpperCase(codePoint)&&!Character.isSupported(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isUpperCase(codePoint)&&!Character.isSupported(codePoint))  {	  if(!Character.isSupported(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
89	[BUG]  [BUGGY]  if(Character.isJavaIdentifierPart(codePoint)||!Character.isSupported(codePoint))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  appendHexJavaScriptRepresentation(  int  codePoint,  Appendable  out)  throws  IOException  {    [BUGGY]  if(Character.isJavaIdentifierPart(codePoint)||!Character.isSupported(codePoint))  {  [BUGGY]        char[]  surrogates  =  Character.toChars(codePoint);  appendHexJavaScriptRepresentation(surrogates[0],  out);  appendHexJavaScriptRepresentation(surrogates[1],  out);  return;  }  out.append(   "\\u   ")  [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  int  codePoint  Appendable  out  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	if(Character.isJavaIdentifierPart(codePoint)||!Character.isSupported(codePoint))  {	  if(!Character.isSupported(codePoint))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
