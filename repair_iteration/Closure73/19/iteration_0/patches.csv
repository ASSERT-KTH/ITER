bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  quote  =  ' "';  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  quote  =  ' "';  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	quote  =  ' "';	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
2	[BUG]  [BUGGY]  quote  =  ' "'  +  Double.toString(singleq)+  1;  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  quote  =  ' "'  +  Double.toString(singleq)+  1;  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	quote  =  ' "'  +  Double.toString(singleq)+  1;	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
3	[BUG]  [BUGGY]  quote  =  ' "'  +  Double.toString(singleq)+ " " ";  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  quote  =  ' "'  +  Double.toString(singleq)+ " " ";  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	quote  =  ' "'  +  Double.toString(singleq)+ " " ";	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
4	[BUG]  [BUGGY]  quote  =  ' "'  +  Double.toString(singleq);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  quote  =  ' "'  +  Double.toString(singleq);  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	quote  =  ' "'  +  Double.toString(singleq);	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
5	[BUG]  [BUGGY]  quote  =  ' "'  +  doubleq;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  quote  =  ' "'  +  doubleq;  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	quote  =  ' "'  +  doubleq;	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
6	[BUG]  [BUGGY]  quote  =  ' "'  +  Double.toHexString(singleq)+  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  quote  =  ' "'  +  Double.toHexString(singleq)+  1;  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	quote  =  ' "'  +  Double.toHexString(singleq)+  1;	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
7	[BUG]  [BUGGY]  quote  =  ' "'  +  Double.parseDouble(singleq)+  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  quote  =  ' "'  +  Double.parseDouble(singleq)+  1;  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	quote  =  ' "'  +  Double.parseDouble(singleq)+  1;	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]    [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	  	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
9	[BUG]  [BUGGY]  quote  =  ' "'  +  Double.parseDouble(singleq);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  quote  =  ' "'  +  Double.parseDouble(singleq);  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	quote  =  ' "'  +  Double.parseDouble(singleq);	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
10	[BUG]  [BUGGY]  quote  =  ' "'  +  Double.isNaN(singleq)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  quote  =  ' "'  +  Double.isNaN(singleq)?  -1  :  1;  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	quote  =  ' "'  +  Double.isNaN(singleq)?  -1  :  1;	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
11	[BUG]  [BUGGY]  doublequote  =  ' "';  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  doublequote  =  ' "';  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	doublequote  =  ' "';	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
12	[BUG]  [BUGGY]  if(singleq  <  doubleq)  {  quote  =  ' "';  }  else  {  quote  =  ' "';  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  if(singleq  <  doubleq)  {  quote  =  ' "';  }  else  {  quote  =  ' "';  }  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	if(singleq  <  doubleq)  {  quote  =  ' "';  }  else  {  quote  =  ' "';  }	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
13	[BUG]  [BUGGY]  if(singleq  <  doubleq)  {  quote  =  ' "';  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  if  (singleq  <  doubleq)  {  quote  =  '\'';  doublequote  =   "\ " ";  singlequote  =   "\\\' ";  }  else  {    [BUGGY]  if(singleq  <  doubleq)  {  quote  =  ' "';  }  [BUGGY]  doublequote  =   "\\\ " ";  singlequote  =   "\' ";  }  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	if(singleq  <  doubleq)  {  quote  =  ' "';  }	quote  =  '\ "';  	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
