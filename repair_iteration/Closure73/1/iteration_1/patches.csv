bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  c);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,char)  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  c);	  appendHexJavaScriptRepresentation(sb,    c,    c);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,char)	6	None	replace
2	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  c,  sb);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,char,StringBuilder)  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(c,  c,  sb);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  c,  sb);	  appendHexJavaScriptRepresentation(sb,    c,    c);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,char,StringBuilder)	6	None	replace
3	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  c);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  c);	  appendHexJavaScriptRepresentation(sb,    c,    c);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
4	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  c);  [CE]  cannot  find  symbol  context  [FE]                        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  c);	  appendHexJavaScriptRepresentation(sb,    c,    c);    	non-compiled	[CE]  cannot  find  symbol  context	6	None	replace
5	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  c);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,char)  [FE]                          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  c,  c);	  appendHexJavaScriptRepresentation(sb,    c,    c);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,char)	6	None	replace
6	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c);	  AppendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
7	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote);	  AppendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
8	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape);	  AppendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
9	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  c);	  AppendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
10	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
11	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,CharsetEncoder)  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,CharsetEncoder)	10	None	replace
12	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,String,CharsetEncoder)  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,String,CharsetEncoder)	10	None	replace
13	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,CharsetEncoder)  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,CharsetEncoder)	10	None	replace
14	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  outputCharsetEncoder);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,CharsetEncoder)  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  outputCharsetEncoder);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,CharsetEncoder)	10	None	replace
15	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
16	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  outputCharsetEncoder);  [CE]  cannot  find  symbol  context  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  outputCharsetEncoder);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  cannot  find  symbol  context	10	None	replace
17	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  outputCharsetEncoder);  [CE]  cannot  find  symbol  consume  [FE]                      ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  outputCharsetEncoder);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  sb,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  cannot  find  symbol  consume	10	None	replace
18	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,char)  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quote);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,char)	3	None	replace
19	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,char)  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,char)	3	None	replace
20	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  backslashEscape);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,String)  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  backslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  backslashEscape);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,String)	3	None	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append(c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append(c);	      	compilable	  [FE]  ComparisonFailure  	8	2	replace
22	[BUG]  [BUGGY]  sb.append(c);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append(c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);	      	compilable	  [FE]  ComparisonFailure  	8	2	replace
23	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  [FE]      ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append('n');  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append('n');	      	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  	8	2	replace
24	[BUG]  [BUGGY]  sb.append('n');  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  [FE]      ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append('n');  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');	      	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  	8	2	replace
25	[BUG]  [BUGGY]  sb.append('ufffd');  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append('ufffd');  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('ufffd');	      	non-compiled	[CE]  unclosed  character  literal	8	None	replace
26	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append('[');  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append('[');	      	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  	8	2	replace
27	[BUG]  [BUGGY]  sb.append('[');  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append('[');  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[');	      	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  	8	2	replace
28	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append( ", ");  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append( ", ");	      	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  	8	2	replace
29	[BUG]  [BUGGY]  sb.append( ", ");  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append( ", ");  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ", ");	      	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<({ "a ":4  	8	2	replace
30	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x= "[\u000f] ">  but  was:<var  x= "[  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append(',');  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append(',');	      	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x= "[\u000f] ">  but  was:<var  x= "[  	8	2	replace
31	[BUG]  [BUGGY]  sb.append(',');  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x= "[\u000f] ">  but  was:<var  x= "[  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append(',');  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');	      	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x= "[\u000f] ">  but  was:<var  x= "[  	8	2	replace
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append('/');  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append('/');	      	compilable	  [FE]  ComparisonFailure  	8	2	replace
33	[BUG]  [BUGGY]  sb.append('/');  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append('/');  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');	      	compilable	  [FE]  ComparisonFailure  	8	2	replace
34	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,String)  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,String)	4	None	replace
35	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
36	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,String,char)  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,String,char)	4	None	replace
37	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  backslashEscape);  [CE]  cannot  find  symbol  quotes  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  backslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  cannot  find  symbol  quotes	4	None	replace
38	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,String)  [FE]                      ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,String)	4	None	replace
39	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape);  [CE]  cannot  find  symbol  consume  [FE]                        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  cannot  find  symbol  consume	4	None	replace
40	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  2);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,int)  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  2);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  2);	  appendHexJavaScriptRepresentation(sb,    c,    2);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,int)	11	None	replace
41	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  2);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,int)  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  2);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  2);	  appendHexJavaScriptRepresentation(sb,    c,    2);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,int)	11	None	replace
42	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  2);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char[],int)  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  2);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  2);	  appendHexJavaScriptRepresentation(sb,    c,    2);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char[],int)	11	None	replace
43	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  2);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  2);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  2);	  appendHexJavaScriptRepresentation(sb,    c,    2);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
44	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  2);  [CE]  cannot  find  symbol  quotes  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  2);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes,  2);	  appendHexJavaScriptRepresentation(sb,    c,    2);    	non-compiled	[CE]  cannot  find  symbol  quotes	11	None	replace
45	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,int)  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,char,int)	9	None	replace
46	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  0);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,int)  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  0);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  0);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(char,StringBuilder,int)	9	None	replace
47	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  c.length);  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  c.length);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0,  c.length);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  char  cannot  be  dereferenced	9	None	replace
48	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  c);  [CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,int,char)  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0,  c);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  no  suitable  method  found  for  appendHexJavaScriptRepresentation(StringBuilder,char,int,char)	9	None	replace
49	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  0);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
50	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  quote);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	9	None	replace
51	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quoted,  0);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quoted,  0);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quoted,  0);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	9	None	replace
52	[BUG]  [BUGGY]      sb.append( ";n ");  [CE]  no  suitable  method  found  for  append(char,String)  [FE]    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]      sb.append( ";n ");  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	        sb.append( ";n ");	  	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	7	None	add
53	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  1);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  1);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  1);	  appendHexJavaScriptRepresentation(sb,    c,    1);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	5	None	replace
54	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  1);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  1);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  1);	  appendHexJavaScriptRepresentation(sb,    c,    1);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	5	None	replace
55	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  1);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  1);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  1);	  appendHexJavaScriptRepresentation(sb,    c,    1);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	5	None	replace
56	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]                      ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1);	  appendHexJavaScriptRepresentation(sb,    c,    1);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	5	None	replace
57	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  1);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]                        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  1);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  1);	  appendHexJavaScriptRepresentation(sb,    c,    1);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	5	None	replace
58	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  1);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]                          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  1);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes,  1);	  appendHexJavaScriptRepresentation(sb,    c,    1);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	5	None	replace
59	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoding);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoding);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoding);	  appendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	1	None	replace
60	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  context);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  context);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	1	None	replace
61	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	2	None	replace
62	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote);  [CE]  no  suitable  method  found  for  append(char,String)  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,String)	2	None	replace
63	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  context);  [CE]  unclosed  string  literal  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  context);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  context);	  AppendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
64	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR);  [CE]  unclosed  string  literal  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR);	  AppendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
65	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c);  [CE]  unclosed  string  literal  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c);	  appendHexJavaScriptRepresentation(sb,    c,    c);    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
66	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  c);  [CE]  unclosed  string  literal  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  c);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  sb,  c,  c);	  appendHexJavaScriptRepresentation(sb,    c,    c);    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
67	[BUG]  [BUGGY]  sb.append( "n ");  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append( "n ");  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "n ");	      	non-compiled	[CE]  unclosed  string  literal	8	None	replace
68	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  0);  [CE]  unclosed  string  literal  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  0);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  1,  0);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
69	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  4);  [CE]  unclosed  string  literal  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  4);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  4);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
70	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  3);  [CE]  unclosed  string  literal  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  3);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  3);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
71	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder);  [CE]  unclosed  string  literal  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
72	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape);  [CE]  unclosed  string  literal  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
73	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape);  [CE]  unclosed  string  literal  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
74	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder);  [CE]  unclosed  string  literal  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
75	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  backslashEscape);  [CE]  unclosed  string  literal  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  backslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
76	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoding);  [CE]  unclosed  string  literal  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoding);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoding);	  AppendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
77	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quote);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
78	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  quote);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
79	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  quote);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  sb,  c,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
80	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS);	  appendHexJavaScriptRepresentation(sb,    c,    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  2);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  2);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  2);	  appendHexJavaScriptRepresentation(sb,    c,    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]      sb.append(quote);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]      sb.append(quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	        sb.append(quote);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
83	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  sb);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  sb);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  sb);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
84	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  sb);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  sb);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  sb);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
85	[BUG]  [BUGGY]  sb.append('?');  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append('?');  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('?');	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
86	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
87	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  1);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  1);	  appendHexJavaScriptRepresentation(sb,    c,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
88	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  1);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  1);	  appendHexJavaScriptRepresentation(sb,    c,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
89	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  1);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  1);	  appendHexJavaScriptRepresentation(sb,    c,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
90	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    c);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
91	[BUG]  [BUGGY]      sb.append( ";  char  ' ");  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]      sb.append( ";  char  ' ");  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	        sb.append( ";  char  ' ");	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
92	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append(Character.toUpperCase(c));  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(Character.toUpperCase(c));	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
93	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  sb.append(Character.toLowerCase(c));  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(Character.toLowerCase(c));	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
94	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
95	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
96	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  quote);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
97	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
98	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  quote);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  buf,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
99	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.quote);	  AppendHexJavaScriptRepresentation(sb,    c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
100	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  sb);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  sb);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  sb);	  AppendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
101	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  sb.toString());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  sb.toString());  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  sb.toString());	  AppendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
102	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  charQuote);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  charQuote);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  charQuote);	  AppendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
103	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  2);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  2);	  appendHexJavaScriptRepresentation(sb,    c,    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
104	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT);	  appendHexJavaScriptRepresentation(sb,    c,    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
105	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  0);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {        [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  0);  [BUGGY]    }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  0);	  appendHexJavaScriptRepresentation(sb,    c,    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
