bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append('[').append(quote);  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[').append(quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[').append(quote);	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
2	[BUG]  [BUGGY]  sb.append('[').append(c);  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[').append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[').append(c);	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
3	[BUG]  [BUGGY]  sb.append( "[ ");  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "[ ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "[ ");	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
4	[BUG]  [BUGGY]  sb.append('[',  c);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[',  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[',  c);	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
5	[BUG]  [BUGGY]  sb.append( "a ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "a ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "a ");	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
6	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  2);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    1);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
7	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  0);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    1);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
8	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  0,  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  0,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  0,  1);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    1);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
9	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  3);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  3);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  3);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    1);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
10	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  4);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  4);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  4);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    1);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
11	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
12	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
13	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
14	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
15	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote,  0);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
16	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.length);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.length);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
17	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  0);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
18	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  context);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
19	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  0);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  0);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
20	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c)+  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(Character.toLowerCase(c)+  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(Character.toLowerCase(c)+  1);	  sb.append(Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
21	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(Character.toLowerCase(c),  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(Character.toLowerCase(c),  quote);	  sb.append(Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
22	[BUG]  [BUGGY]  sb.append(CaseConsumer.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(CaseConsumer.toLowerCase(c));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(CaseConsumer.toLowerCase(c));	  sb.append(Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
23	[BUG]  [BUGGY]  sb.append(c,  Character.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c,  Character.toLowerCase(c));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c,  Character.toLowerCase(c));	  sb.append(Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
24	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  singlequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    singlequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
25	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  singlequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    singlequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
26	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  singlequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    singlequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
27	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    singlequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
28	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes,  singlequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    singlequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
29	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  IDE_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  IDE_SCRIPT);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  IDE_SCRIPT);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
30	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
31	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
32	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  IDE_SCRIPT,  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  IDE_SCRIPT,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  IDE_SCRIPT,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
33	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  IDE_SCRIPT,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
34	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  IDE_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  IDE_SCRIPT);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  IDE_SCRIPT);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
35	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
36	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0,  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0,  1);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    1);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
42	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  3);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  3);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  3);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    1);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
43	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    1);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
44	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  4);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  4);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  4);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    1);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
45	[BUG]  [BUGGY]  sb.append('#');  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('#');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('#');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
46	[BUG]  [BUGGY]  sb.append('N');  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('N');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('N');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
47	[BUG]  [BUGGY]  sb.append(   ",   ");  sb.append( ",   ");  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(   ",   ");  sb.append( ",   ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(   ",   ");    sb.append( ",   ");	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
48	[BUG]  [BUGGY]  sb.append(   ",   ");  sb.append(',');  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(   ",   ");  sb.append(',');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(   ",   ");    sb.append(',');	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
49	[BUG]  [BUGGY]  sb.append(   ",   ");  sb.append( "., ");  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(   ",   ");  sb.append( "., ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(   ",   ");    sb.append( "., ");	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
50	[BUG]  [BUGGY]  sb.append(   ",   ");  sb.append(, ",   ");  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(   ",   ");  sb.append(, ",   ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(   ",   ");    sb.append(, ",   ");	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
51	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  backslashEscape,  sb,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  backslashEscape,  sb,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  backslashEscape,  sb,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  backslashEscape);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quotes,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quotes,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quotes,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  sb.append('n');  sb.append('n');  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  sb.append('n');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    sb.append('n');	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
57	[BUG]  [BUGGY]  sb.append('n');  sb.append('n').append(c);  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  sb.append('n').append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    sb.append('n').append(c);	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
58	[BUG]  [BUGGY]  sb.append('n');  sb.append('n').append(quote);  [CE]  [FE]        junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  sb.append('n').append(quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    sb.append('n').append(quote);	  	non-compiled	[CE]  	23	None	add
59	[BUG]  [BUGGY]  sb.append('n');  sb.append('N');  [CE]  [FE]          junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  sb.append('N');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    sb.append('N');	  	non-compiled	[CE]  	23	None	add
60	[BUG]  [BUGGY]  sb.append('n');  sb.append('m');  [CE]  [FE]            junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  sb.append('m');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    sb.append('m');	  	non-compiled	[CE]  	23	None	add
61	[BUG]  [BUGGY]  sb.append('n');  sb.append('r');  [CE]  [FE]              junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  sb.append('r');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    sb.append('r');	  	non-compiled	[CE]  	23	None	add
62	[BUG]  [BUGGY]  sb.append('n');  sb.append('e');  [CE]  [FE]                junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  sb.append('e');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    sb.append('e');	  	non-compiled	[CE]  	23	None	add
63	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  quote);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  	36	None	replace
64	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  quote);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  	36	None	replace
65	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape,  quote);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  	36	None	replace
66	[BUG]  [BUGGY]  sb.append(';');  [CE]  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(';');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(';');	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  	91	None	replace
67	[BUG]  [BUGGY]  sb.append( ";  String  ' ");  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";  String  ' ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";  String  ' ");	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
68	[BUG]  [BUGGY]  sb.append(c;  char  ' ");  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c;  char  ' ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c;  char  ' ");	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  	91	None	replace
69	[BUG]  [BUGGY]  sb.append( ",;  char  ' ");  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ",;  char  ' ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ",;  char  ' ");	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
70	[BUG]  [BUGGY]  sb.append( ";  string  ' ");  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";  string  ' ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";  string  ' ");	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
71	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]    junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(',');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append(',');    sb.append(',');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
72	[BUG]  [BUGGY]  sb.append(',');  sb.append(',');  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]    junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(',');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append(',');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
73	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]      junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append('[');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append(',');    sb.append('[');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
74	[BUG]  [BUGGY]  sb.append(',');  sb.append('[');  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]      junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append('[');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append('[');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
75	[BUG]  [BUGGY]  sb.append(',');  sb.append('u000f');  [CE]  unclosed  character  literal  [FE]        junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append('u000f');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append('u000f');	  	non-compiled	[CE]  unclosed  character  literal	30	None	add
76	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]          junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append(',');    sb.append(c);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
77	[BUG]  [BUGGY]  sb.append(',');  sb.append(c);  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]          junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append(c);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
78	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]            junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(']');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append(',');    sb.append(']');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
79	[BUG]  [BUGGY]  sb.append(',');  sb.append(']');  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]            junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(']');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append(']');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
80	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]              junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(',').append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append(',');    sb.append(',').append(c);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
81	[BUG]  [BUGGY]  sb.append(',');  sb.append(',').append(c);  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]              junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(',').append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append(',').append(c);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
82	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:< "[aa']a ">  but  was:< "[  [FE]                junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(';');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append(',');    sb.append(';');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:< "[aa']a ">  but  was:< "[  	30	15	add
83	[BUG]  [BUGGY]  sb.append(',');  sb.append(';');  [FE]  junit.framework.ComparisonFailure:  null  expected:< "[aa']a ">  but  was:< "[  [FE]                junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(';');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append(';');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:< "[aa']a ">  but  was:< "[  	30	15	add
84	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]                  junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(')');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	sb.append(',');    sb.append(')');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
85	[BUG]  [BUGGY]  sb.append(',');  sb.append(')');  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  [FE]                  junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(')');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append(')');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<var  x={get   "[]a "(){return  1}}>  but  was:<var  x={get   "[  	30	15	add
86	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoding);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoding);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
87	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoding);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoding);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
88	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoding,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoding,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoding,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
89	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  context);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
90	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
91	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoding,  context);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoding,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoding,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
92	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  endCharsetEncoding,  outputCharsetEncoding);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  endCharsetEncoding,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  endCharsetEncoding,  outputCharsetEncoding);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
93	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
94	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
95	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
96	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  quote,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(context,  sb,  quote,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
97	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quote);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
98	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
99	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  FOR_INIT_CLAUSE);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  FOR_INIT_CLAUSE);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  FOR_INIT_CLAUSE);	  AppendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
100	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quotes);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quotes);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quotes);	  AppendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
101	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  line);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  line);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  line);	  AppendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
102	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  c);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  c);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    c);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
103	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  backslashEscape,  c);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  backslashEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  backslashEscape,  c);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    c);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
104	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  c);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  c);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    c);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
105	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  END_SCRIPT);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  END_SCRIPT);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  END_SCRIPT);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    quote);    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
106	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  backslashEscape);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    quote);    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
107	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  END_SCRIPT,  quote);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  END_SCRIPT,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  END_SCRIPT,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    quote);    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
108	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  END_SCRIPT);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  END_SCRIPT);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  END_SCRIPT);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    quote);    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
109	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  END_SCRIPT);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  END_SCRIPT);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  END_SCRIPT);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    quote);    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
110	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    quote);    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
111	[BUG]  [BUGGY]  sb.append('/',  c);  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/',  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/',  c);	  sb.append('/');    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
112	[BUG]  [BUGGY]  sb.append('/').append(c);  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/').append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/').append(c);	  sb.append('/');    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
113	[BUG]  [BUGGY]  sb.append('/'  +  c);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/'  +  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/'  +  c);	  sb.append('/');    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
114	[BUG]  [BUGGY]  sb.append(c  +  '/');  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c  +  '/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c  +  '/');	  sb.append('/');    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
115	[BUG]  [BUGGY]  sb.append( "/ ");  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "/ ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "/ ");	  sb.append('/');    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
116	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  2);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quote,  2);	  appendHexJavaScriptRepresentation(c,    sb,    2);    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
117	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(char,  sb,  2);  [CE]  '.class'  expected  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(char,  sb,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(char,  sb,  2);	  appendHexJavaScriptRepresentation(c,    sb,    2);    	non-compiled	[CE]  '.class'  expected	41	None	replace
118	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  2);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  2);	  appendHexJavaScriptRepresentation(c,    sb,    2);    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
119	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quotes,  2);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quotes,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quotes,  2);	  appendHexJavaScriptRepresentation(c,    sb,    2);    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
120	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  2);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote,  2);	  appendHexJavaScriptRepresentation(c,    sb,    2);    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
121	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  2);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  2);	  appendHexJavaScriptRepresentation(c,    sb,    2);    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
122	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quotes);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quotes);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quotes);	  AppendHexJavaScriptRepresentation(c,    sb,    c);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
123	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(context,  sb,  c);	  AppendHexJavaScriptRepresentation(c,    sb,    c);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
124	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(e,  sb,  c);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(e,  sb,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(e,  sb,  c);	  AppendHexJavaScriptRepresentation(c,    sb,    c);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
125	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    quote);    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
126	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder,  c);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder,  c);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    quote);    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
127	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  charBuffer);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  charBuffer);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  charBuffer);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
128	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  charBuffer,  quote);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  charBuffer,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  charBuffer,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
129	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  charBuffer);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  charBuffer);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  charBuffer);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
130	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  charBuffer);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  charBuffer);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  charBuffer);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
131	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  charBuffer);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  charBuffer);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes,  charBuffer);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
132	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
133	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  backslashEscape,  sb);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  backslashEscape,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  backslashEscape,  sb);	  appendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
134	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  quote,  sb,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  quote,  sb,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  quote,  sb,  backslashEscape);	  appendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
135	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quotes,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quotes,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quotes,  backslashEscape);	  appendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
136	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
137	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
138	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  DANGLING_ELSE,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  DANGLING_ELSE,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  DANGLING_ELSE,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
139	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  endEscape,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  endEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  endEscape,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
140	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_COMMENT,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_COMMENT,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_COMMENT,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
141	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  buf);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  buf);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  buf);	  AppendHexJavaScriptRepresentation(sb,    c,    buf,    quote);    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
142	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  buf,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    buf,    quote);    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
143	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  buf,  quote);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  buf,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  buf,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    buf,    quote);    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
144	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  quote,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  buf,  quote,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    buf,    quote);    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
145	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  buf);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  buf);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  buf);	  AppendHexJavaScriptRepresentation(sb,    c,    buf,    quote);    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
146	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  buf,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    buf,    quote);    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
147	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  c);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quote,  c);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
148	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  c);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  c);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
149	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  DANGLING_ELSE,  c);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  DANGLING_ELSE,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  DANGLING_ELSE,  c);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
150	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
151	[BUG]  [BUGGY]  sb.append('$');  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('$');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('$');	  sb.append('ufffd');    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
152	[BUG]  [BUGGY]  sb.append(':');  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(':');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(':');	  sb.append('ufffd');    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
153	[BUG]  [BUGGY]  sb.append('+');  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('+');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('+');	  sb.append('ufffd');    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
154	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  quote,  sb,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  quote,  sb,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  quote,  sb,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
155	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
156	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  quote,  c,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  quote,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  sb,  quote,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
157	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote,  c,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  quote,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
158	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  char  quote,  c,  outputCharsetEncoder);  [CE]  '.class'  expected  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  char  quote,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  char  quote,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    outputCharsetEncoder);    	non-compiled	[CE]  '.class'  expected	14	None	replace
159	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  0);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  0);	  AppendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
160	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  0,  c);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  0,  c);	  AppendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
161	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  3);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  3);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  3);	  AppendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
162	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  1,  0);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  1,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  1,  0);	  AppendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
163	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  4);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  4);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  4);	  AppendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
164	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  2);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  2);	  AppendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
165	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  1);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
166	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  1);  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
167	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1);  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
168	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  1);  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
169	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  1);  [CE]  'else'  without  'if'  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
170	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  BAD_SCRIPT,  1);  [CE]  'else'  without  'if'  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  BAD_SCRIPT,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  BAD_SCRIPT,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
171	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  HX_CHARS,  1);  [CE]  'else'  without  'if'  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  HX_CHARS,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  HX_CHARS,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
172	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  quote,  sb,  c);  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  quote,  sb,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  quote,  sb,  c);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    c);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
173	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  c,  quote);  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  c,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  c,  quote);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    c);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
174	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote,  c,  quote);  [CE]  'else'  without  'if'  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote,  c,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  quote,  c,  quote);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    c);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
175	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
176	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  quote,  c,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  quote,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  quote,  c,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
177	[BUG]  [BUGGY]  sb.append('/');  sb.append('/');  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  sb.append('/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    sb.append('/');	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
178	[BUG]  [BUGGY]  sb.append('/');  sb.append('/').append(c);  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  sb.append('/').append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    sb.append('/').append(c);	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
179	[BUG]  [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(c.length()  +  1);  sb.append('/');  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(c.length()  +  1);  sb.append('/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    StringBuilder  sb  =  new  StringBuilder(c.length()  +  1);  sb.append('/');	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
180	[BUG]  [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(c.length()  *  2);  sb.append('/');  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(c.length()  *  2);  sb.append('/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    StringBuilder  sb  =  new  StringBuilder(c.length()  *  2);  sb.append('/');	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
181	[BUG]  [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(c).append('/');  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(c).append('/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    StringBuilder  sb  =  new  StringBuilder(c).append('/');	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
182	[BUG]  [BUGGY]  sb.append('/');  sb.append('/').append(quote);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  sb.append('/').append(quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    sb.append('/').append(quote);	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
183	[BUG]  [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(c.length()  +  1);  sb.append( "/ ");  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(c.length()  +  1);  sb.append( "/ ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    StringBuilder  sb  =  new  StringBuilder(c.length()  +  1);  sb.append( "/ ");	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
184	[BUG]  [BUGGY]  sb.append('/');  sb.append(c);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  sb.append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    sb.append(c);	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
185	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
186	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
187	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quotes,  c,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quotes,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quotes,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
188	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quotes);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quotes);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quotes);	  AppendHexJavaScriptRepresentation(sb,    c,    backwardslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
189	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  line,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  line,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  line,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    backwardslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
190	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  forwardslashEscape,  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  forwardslashEscape,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  forwardslashEscape,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    backwardslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
191	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
192	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
193	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  outputCharsetEncoder,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
194	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR,  1);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
195	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  MISSING_ELSE,  1);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  MISSING_ELSE,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  MISSING_ELSE,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
196	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  MISSING_EXPR_RESULT,  1);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  MISSING_EXPR_RESULT,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  MISSING_EXPR_RESULT,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
197	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quoted,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quoted,  0,  c.length);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quoted,  0,  c.length);	  appendHexJavaScriptRepresentation(sb,    c,    quoted,    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
198	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quoted,  0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quoted,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quoted,  0);	  appendHexJavaScriptRepresentation(sb,    c,    quoted,    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
199	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c);	  appendHexJavaScriptRepresentation(sb,    c,    quoted,    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
200	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes,  0);	  appendHexJavaScriptRepresentation(sb,    c,    quoted,    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
201	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  0);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  0);	  appendHexJavaScriptRepresentation(sb,    c,    quoted,    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
202	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quoted,  0,  c);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quoted,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quoted,  0,  c);	  appendHexJavaScriptRepresentation(sb,    c,    quoted,    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
203	[BUG]  [BUGGY]  sb.append(',').append(x);  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',').append(x);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',').append(x);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
204	[BUG]  [BUGGY]  sb.append(','  +  c);  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(','  +  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(','  +  c);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
205	[BUG]  [BUGGY]  sb.append(',').append(c);  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',').append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',').append(c);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
206	[BUG]  [BUGGY]  sb.append(x);  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(x);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(x);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
207	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  c.length,  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  c.length,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0,  c.length,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
208	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.length);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.length);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
209	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  c.length  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  c.length  +  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0,  c.length  +  1);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
210	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  0,  c.length);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  0,  c.length);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
211	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  c.length);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  c.length);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  c.length);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c.length);    	non-compiled	[CE]  orphaned  case	47	None	replace
212	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  c.length);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  c.length);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  1,  c.length);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c.length);    	non-compiled	[CE]  orphaned  case	47	None	replace
213	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  quote);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
214	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  sb,  quote);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  sb,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  sb,  quote);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
215	[BUG]  [BUGGY]  sb.append(CharacterEncodingRepresentation(c,  sb));  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(CharacterEncodingRepresentation(c,  sb));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(CharacterEncodingRepresentation(c,  sb));	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
216	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  backslashEscape,  sb);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  backslashEscape,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  backslashEscape,  sb);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
217	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  char);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  char);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  char);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
218	[BUG]  [BUGGY]  sb.append(hexJavaScriptRepresentation(c,  sb,  quote);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(hexJavaScriptRepresentation(c,  sb,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(hexJavaScriptRepresentation(c,  sb,  quote);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
219	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(context,    sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	16	None	replace
220	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  quote,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(context,    sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	16	None	replace
221	[BUG]  [BUGGY]  sb.append(c);  sb.append(c);  [CE]  orphaned  case  [FE]    ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  sb.append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    sb.append(c);	  	non-compiled	[CE]  orphaned  case	21	None	add
222	[BUG]  [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  [CE]  orphaned  case  [FE]      ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }	  	non-compiled	[CE]  orphaned  case	21	None	add
223	[BUG]  [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  System.arraycopy(c,  0,  sb,  0,  sb.length());  }  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  System.arraycopy(c,  0,  sb,  0,  sb.length());  }  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  System.arraycopy(c,  0,  sb,  0,  sb.length());  }	  	non-compiled	[CE]  orphaned  case	21	None	add
224	[BUG]  [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  sb.append(c);  }  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  sb.append(c);  }  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  sb.append(c);  }	  	non-compiled	[CE]  orphaned  case	21	None	add
225	[BUG]  [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  orphaned  case	21	None	add
226	[BUG]  [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  sb.append('n');  }  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  sb.append('n');  }  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  sb.append('n');  }	  	non-compiled	[CE]  orphaned  case	21	None	add
227	[BUG]  [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  sb.append( ", ");  }  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  sb.append( ", ");  }  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {  sb.append( ", ");  }	  	non-compiled	[CE]  orphaned  case	21	None	add
228	[BUG]  [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append('-');  }  else  {  sb.append(c);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append('-');  }  else  {  sb.append(c);  }  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append('-');  }  else  {  sb.append(c);  }	  	non-compiled	[CE]  orphaned  case	21	None	add
229	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS,  c,  sb);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS,  c,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(HEX_CHARS,  c,  sb);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS);    	non-compiled	[CE]  orphaned  case	80	None	replace
230	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HX_CHARS,  HEX_CHARS);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HX_CHARS,  HEX_CHARS);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HX_CHARS,  HEX_CHARS);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS);    	non-compiled	[CE]  orphaned  case	80	None	replace
231	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS);    	non-compiled	[CE]  orphaned  case	80	None	replace
232	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_CHARS,  HEX_CHARS);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_CHARS,  HEX_CHARS);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEAD_CHARS,  HEX_CHARS);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS);    	non-compiled	[CE]  orphaned  case	80	None	replace
233	[BUG]  [BUGGY]  sb.append(doublequoteEscape);  [CE]  orphaned  case  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(doublequoteEscape);	          sb.append(quote);    	non-compiled	[CE]  orphaned  case	82	None	replace
234	[BUG]  [BUGGY]  sb.append(doublequoteEscape,  c);  [CE]  orphaned  case  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(doublequoteEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(doublequoteEscape,  c);	          sb.append(quote);    	non-compiled	[CE]  orphaned  case	82	None	replace
235	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT);    	non-compiled	[CE]  orphaned  case	104	None	replace
236	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT);    	non-compiled	[CE]  orphaned  case	104	None	replace
237	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  START_COMMENT);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  START_COMMENT);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  START_COMMENT);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT);    	non-compiled	[CE]  orphaned  case	104	None	replace
238	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  START_OF_EXPR);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  START_OF_EXPR);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  START_OF_EXPR);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT);    	non-compiled	[CE]  orphaned  case	104	None	replace
239	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT);    	non-compiled	[CE]  orphaned  case	104	None	replace
240	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote,  backslashEscape);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  orphaned  case	86	None	replace
241	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c,  quote);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(context,  sb,  c,  quote);	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  orphaned  case	86	None	replace
242	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  c,  sb,  backslashEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  c,  sb,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  c,  sb,  backslashEscape);	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  orphaned  case	86	None	replace
243	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  line,  backslashEscape);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  line,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  line,  backslashEscape);	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  orphaned  case	86	None	replace
244	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  backslashEscape,  c);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  backslashEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  backslashEscape,  c);	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  orphaned  case	86	None	replace
245	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape,  quote);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape,  quote);	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  orphaned  case	86	None	replace
246	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	11	None	replace
247	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	11	None	replace
248	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  orphaned  case	95	None	replace
249	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEX_CHARS);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEX_CHARS);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEX_CHARS);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  orphaned  case	95	None	replace
250	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  orphaned  case	95	None	replace
251	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  backslashEscape);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  orphaned  case	95	None	replace
252	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  backslashEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  orphaned  case	95	None	replace
253	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HX_CHARS);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HX_CHARS);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  HX_CHARS);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  orphaned  case	95	None	replace
254	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  HEX_CHARS);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  HEX_CHARS);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes,  HEX_CHARS);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  orphaned  case	95	None	replace
255	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  1);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quote,  1);	  appendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  orphaned  case	54	None	replace
256	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  1);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  1);	  appendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  orphaned  case	54	None	replace
257	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  quote,  sb,  1);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  quote,  sb,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  quote,  sb,  1);	  appendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  orphaned  case	54	None	replace
258	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quotes,  1);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quotes,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quotes,  1);	  appendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
259	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  1);  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  1);	  appendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
260	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  backslashEscape);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  orphaned  case	99	None	replace
261	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  quote);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  orphaned  case	99	None	replace
262	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  orphaned  case	99	None	replace
263	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quoteEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.quoteEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  orphaned  case	99	None	replace
264	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  c);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  c);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  orphaned  case	99	None	replace
265	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  doublequoteEscape);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.quote,  doublequoteEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  orphaned  case	99	None	replace
266	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  c);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote,  c);	  appendHexJavaScriptRepresentation(c,    sb,    c);    	non-compiled	[CE]  orphaned  case	19	None	replace
267	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(char,  sb,  c);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(char,  sb,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(char,  sb,  c);	  appendHexJavaScriptRepresentation(c,    sb,    c);    	non-compiled	[CE]  orphaned  case	19	None	replace
268	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quotes,  c);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quotes,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quotes,  c);	  appendHexJavaScriptRepresentation(c,    sb,    c);    	non-compiled	[CE]  orphaned  case	19	None	replace
269	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  1);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  1);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    1);    	non-compiled	[CE]  orphaned  case	56	None	replace
270	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  1,  1);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  1,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  1,  1);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    1);    	non-compiled	[CE]  orphaned  case	56	None	replace
271	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  1);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  1);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    1);    	non-compiled	[CE]  orphaned  case	56	None	replace
272	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  1);  [CE]  orphaned  case  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  1);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    1);    	non-compiled	[CE]  orphaned  case	56	None	replace
273	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  1);  [CE]  orphaned  case  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  1);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    1);    	non-compiled	[CE]  orphaned  case	56	None	replace
274	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape,  1);  [CE]  orphaned  case  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  c,  backslashEscape,  1);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    1);    	non-compiled	[CE]  orphaned  case	56	None	replace
275	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	45	None	replace
276	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.offset);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.offset);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.offset);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	45	None	replace
277	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  0);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quote,  0);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	45	None	replace
278	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.count);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.count);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  c.count);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	45	None	replace
279	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  i);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  i);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  i);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	45	None	replace
280	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  2);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  2);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	43	None	replace
281	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  2);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  0,  2);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	43	None	replace
282	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  4);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  4);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  4);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	43	None	replace
283	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  3);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  3);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  3);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	43	None	replace
284	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  quote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  quote);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
285	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  backslashEscape);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  backslashEscape);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
286	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  sb,  quote);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  sb,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  sb,  quote);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
287	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  quote;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  quote;  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  quote;	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
288	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(p,  c);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(p,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(p,  c);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
289	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(quote,  c);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(quote,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(quote,  c);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
290	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
291	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  orphaned  case	3	None	replace
292	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  c,  quote);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  c,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  c,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  orphaned  case	3	None	replace
293	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  orphaned  case	3	None	replace
294	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  consumer);  [CE]  orphaned  case  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  consumer);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  consumer);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  orphaned  case	3	None	replace
295	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  consumer);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  consumer);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  consumer);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    c);    	non-compiled	[CE]  orphaned  case	66	None	replace
296	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  consumator);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  consumator);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  consumator);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    c);    	non-compiled	[CE]  orphaned  case	66	None	replace
297	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  consumer);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  consumer);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  consumer);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    c);    	non-compiled	[CE]  orphaned  case	66	None	replace
298	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  consumer);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  consumer);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  c,  consumer);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    c);    	non-compiled	[CE]  orphaned  case	66	None	replace
299	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  consommateur);  [CE]  'else'  without  'if'  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  consommateur);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  consommateur);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    c);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
300	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quotes,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quotes,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quotes,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
301	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  quote,  backslashEscape,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  quote,  backslashEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  quote,  backslashEscape,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
302	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(char,  sb,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(char,  sb,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(char,  sb,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
303	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(char,  c,  outputCharsetEncoder);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(char,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(char,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
304	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  c);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  c);	  appendHexJavaScriptRepresentation(c,    c,    sb);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
305	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(char,  c,  sb);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(char,  c,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(char,  c,  sb);	  appendHexJavaScriptRepresentation(c,    c,    sb);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
306	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(s,  c,  c);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(s,  c,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(s,  c,  c);	  appendHexJavaScriptRepresentation(c,    c,    sb);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
307	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  c,  sb);  [CE]  'else'  without  'if'  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  c,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  c,  sb);	  appendHexJavaScriptRepresentation(c,    c,    sb);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
308	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  quote,  c,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  quote,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  sb,  quote,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
309	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  quote,  backslashEscape);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    backslashEscape);    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
310	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  DANGLING_ELSE,  1);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  DANGLING_ELSE,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  DANGLING_ELSE,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
311	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  4);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  4);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  4);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
312	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  charQuote);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  charQuote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  charQuote);	  AppendHexJavaScriptRepresentation(c,    sb,    charQuote);    	non-compiled	[CE]  'else'  without  'if'	102	None	replace
313	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(s,  c,  charQuote);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(s,  c,  charQuote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(s,  c,  charQuote);	  AppendHexJavaScriptRepresentation(c,    sb,    charQuote);    	non-compiled	[CE]  'else'  without  'if'	102	None	replace
314	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  quote,  sb,  charQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  quote,  sb,  charQuote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  quote,  sb,  charQuote);	  AppendHexJavaScriptRepresentation(c,    sb,    charQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
315	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  charQuote,  sb);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  charQuote,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  charQuote,  sb);	  AppendHexJavaScriptRepresentation(c,    sb,    charQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
316	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  backslashEscape);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR,    quote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
317	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quote,  backslashEscape);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR,    quote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
318	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEAD_OF_EXPR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEAD_OF_EXPR);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEAD_OF_EXPR);	  appendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR,    quote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
319	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEAD_OF_EXPR,  quote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEAD_OF_EXPR,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEAD_OF_EXPR,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR,    quote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
320	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c),  quote);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(Character.toUpperCase(c),  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(Character.toUpperCase(c),  quote);	  sb.append(Character.toUpperCase(c));    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
321	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  1);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(Character.toUpperCase(c)+  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(Character.toUpperCase(c)+  1);	  sb.append(Character.toUpperCase(c));    	non-compiled	[CE]  	92	None	replace
322	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  quote);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(Character.toUpperCase(c)+  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(Character.toUpperCase(c)+  quote);	  sb.append(Character.toUpperCase(c));    	non-compiled	[CE]  	92	None	replace
323	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  0,  c);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  0,  c);	  appendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  	46	None	replace
324	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(char,  sb,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(char,  sb,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(char,  sb,  0);	  appendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  	46	None	replace
325	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quoted,  0);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quoted,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quoted,  0);	  appendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  	46	None	replace
326	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  backslashEscape,  sb);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  backslashEscape,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  backslashEscape,  sb);	  AppendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  	8	None	replace
327	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  quote);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  quote);	  AppendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  	8	None	replace
328	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(s,  c,  backslashEscape);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(s,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(s,  c,  backslashEscape);	  AppendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  	8	None	replace
329	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  context);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote,  context);	  AppendHexJavaScriptRepresentation(c,    sb,    quote);    	non-compiled	[CE]  	7	None	replace
330	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  quote,  c);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  quote,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  quote,  c);	  AppendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  	6	None	replace
331	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  quote);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  quote);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    quote);    	non-compiled	[CE]  	79	None	replace
332	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  backslashEscape);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    quote);    	non-compiled	[CE]  	79	None	replace
333	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  c);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    quote);    	non-compiled	[CE]  orphaned  case	79	None	replace
334	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(msg,  sb,  c,  quote);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(msg,  sb,  c,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(msg,  sb,  c,  quote);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    quote);    	non-compiled	[CE]  orphaned  case	79	None	replace
335	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  outputCharsetEncoder,  backslashEscape);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  outputCharsetEncoder,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes,  outputCharsetEncoder,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    backslashEscape);    	non-compiled	[CE]  orphaned  case	75	None	replace
336	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoding);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoding);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoding);    	non-compiled	[CE]  orphaned  case	76	None	replace
337	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  outputCharsetEncoding);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  outputCharsetEncoding);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoding);    	non-compiled	[CE]  orphaned  case	76	None	replace
338	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  backslashEscape,  sb,  outputCharsetEncoding);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  backslashEscape,  sb,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  backslashEscape,  sb,  outputCharsetEncoding);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoding);    	non-compiled	[CE]  orphaned  case	76	None	replace
339	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoding);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoding);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoding);    	non-compiled	[CE]  orphaned  case	76	None	replace
340	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  quote,  sb,  outputCharsetEncoding);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  quote,  sb,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  quote,  sb,  outputCharsetEncoding);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoding);    	non-compiled	[CE]  orphaned  case	76	None	replace
341	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  orphaned  case  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ",n ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ",n ");	  sb.append(   ",   ");    	non-compiled	[CE]  orphaned  case	29	None	replace
342	[BUG]  [BUGGY]  sb.append( ", ",  c);  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ", ",  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ", ",  c);	  sb.append(   ",   ");    	non-compiled	[CE]  not  a  statement	29	None	replace
343	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  4);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  4);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  4);	  appendHexJavaScriptRepresentation(sb,    c,    4);    	non-compiled	[CE]  not  a  statement	69	None	replace
344	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  5);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  5);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  5);	  appendHexJavaScriptRepresentation(sb,    c,    4);    	non-compiled	[CE]  not  a  statement	69	None	replace
345	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  4  +  quote);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  4  +  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  4  +  quote);	  appendHexJavaScriptRepresentation(sb,    c,    4);    	non-compiled	[CE]  not  a  statement	69	None	replace
346	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  0);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0,  0);	  appendHexJavaScriptRepresentation(sb,    c,    1,    0);    	non-compiled	[CE]  not  a  statement	68	None	replace
347	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  1,  1);	  appendHexJavaScriptRepresentation(sb,    c,    1,    0);    	non-compiled	[CE]  not  a  statement	68	None	replace
348	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  2,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  2,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  2,  0);	  appendHexJavaScriptRepresentation(sb,    c,    1,    0);    	non-compiled	[CE]  	68	None	replace
349	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  0,  0);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  0,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  1,  0,  0);	  appendHexJavaScriptRepresentation(sb,    c,    1,    0);    	non-compiled	[CE]  	68	None	replace
350	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  4,  0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  4,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  4,  0);	  appendHexJavaScriptRepresentation(sb,    c,    1,    0);    	non-compiled	[CE]  	68	None	replace
351	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  0,  c);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  1,  0,  c);	  appendHexJavaScriptRepresentation(sb,    c,    1,    0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
352	[BUG]  [BUGGY]  sb.append('[');  sb.append('[');  [CE]  invalid  method  declaration;  return  type  required  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[');  sb.append('[');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[');    sb.append('[');	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
353	[BUG]  [BUGGY]  sb.append('[');  sb.append(']');  [CE]  invalid  method  declaration;  return  type  required  [FE]      junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[');  sb.append(']');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[');    sb.append(']');	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
354	[BUG]  [BUGGY]  sb.append('[');  sb.append('[').append(c);  [CE]  invalid  method  declaration;  return  type  required  [FE]        junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[');  sb.append('[').append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[');    sb.append('[').append(c);	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
355	[BUG]  [BUGGY]  sb.append('[');  sb.append(c);  [CE]  invalid  method  declaration;  return  type  required  [FE]          junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[');  sb.append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[');    sb.append(c);	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
356	[BUG]  [BUGGY]  sb.append('[');  sb.append('[').append(quote);  [CE]  invalid  method  declaration;  return  type  required  [FE]            junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[');  sb.append('[').append(quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[');    sb.append('[').append(quote);	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
357	[BUG]  [BUGGY]  sb.append('[');  sb.append(',');  [CE]  invalid  method  declaration;  return  type  required  [FE]              junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[');  sb.append(',');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[');    sb.append(',');	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
358	[BUG]  [BUGGY]  sb.append('[');  sb.append('_');  [CE]  invalid  method  declaration;  return  type  required  [FE]                junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[');  sb.append('_');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[');    sb.append('_');	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
359	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  2,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  2,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  2,  1);	  AppendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
360	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  1,  c);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  1,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  1,  c);	  AppendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
361	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  context);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  context);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  orphaned  case	63	None	replace
362	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  context);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  context);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  orphaned  case	63	None	replace
363	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  context,  backslashEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  context,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  context,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  orphaned  case	63	None	replace
364	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  context);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  context);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  orphaned  case	63	None	replace
365	[BUG]  [BUGGY]  sb.append( "null ");  [CE]  orphaned  case  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "null ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "null ");	  sb.append(   "n   ");    	non-compiled	[CE]  orphaned  case	67	None	replace
366	[BUG]  [BUGGY]  sb.append( "   ");  [CE]  orphaned  case  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "   ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "   ");	  sb.append(   "n   ");    	non-compiled	[CE]  orphaned  case	67	None	replace
367	[BUG]  [BUGGY]  sb.append( "# ");  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "# ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "# ");	  sb.append(   "n   ");    	non-compiled	[CE]  orphaned  case	67	None	replace
368	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0,  2);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0,  2);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    2);    	non-compiled	[CE]  orphaned  case	103	None	replace
369	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quotes,  quote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quotes,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quotes,  quote);	  appendHexJavaScriptRepresentation(c,    sb,    quote);    	non-compiled	[CE]  orphaned  case	18	None	replace
370	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  quote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  orphaned  case	62	None	replace
371	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  quote);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  orphaned  case	62	None	replace
372	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(consumer,  sb,  c,  backslashEscape,  quote);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(consumer,  sb,  c,  backslashEscape,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(consumer,  sb,  c,  backslashEscape,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  orphaned  case	62	None	replace
373	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  doublequoteEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  doublequoteEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  orphaned  case	62	None	replace
374	[BUG]  [BUGGY]  sb.append('?',  c);  [CE]  orphaned  case  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('?',  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('?',  c);	  sb.append('?');    	non-compiled	[CE]  orphaned  case	85	None	replace
375	[BUG]  [BUGGY]  sb.append('?').append(c);  [CE]  orphaned  case  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('?').append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('?').append(c);	  sb.append('?');    	non-compiled	[CE]  orphaned  case	85	None	replace
376	[BUG]  [BUGGY]  sb.append('?'  +  c);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('?'  +  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('?'  +  c);	  sb.append('?');    	non-compiled	[CE]  orphaned  case	85	None	replace
377	[BUG]  [BUGGY]  sb.append('?').append(quote);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('?').append(quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('?').append(quote);	  sb.append('?');    	non-compiled	[CE]  orphaned  case	85	None	replace
378	[BUG]  [BUGGY]  sb.append(c  +  '?');  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c  +  '?');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c  +  '?');	  sb.append('?');    	non-compiled	[CE]  orphaned  case	85	None	replace
379	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape,  backslashEscape);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  orphaned  case	35	None	replace
380	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoding);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  outputCharsetEncoding);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  orphaned  case	35	None	replace
381	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  backslashEscape);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  orphaned  case	35	None	replace
382	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  orphaned  case	35	None	replace
383	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  2);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  2);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	40	None	replace
384	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  2);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  2);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	40	None	replace
385	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  2);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  2);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	40	None	replace
386	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  HEX_CHARS,  2);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  HEX_CHARS,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  HEX_CHARS,  2);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    2);    	non-compiled	[CE]  orphaned  case	42	None	replace
387	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS,  2);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS,  2);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    2);    	non-compiled	[CE]  orphaned  case	42	None	replace
388	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  2);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  2);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    2);    	non-compiled	[CE]  orphaned  case	42	None	replace
389	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  i,  2);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  i,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  i,  2);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    2);    	non-compiled	[CE]  orphaned  case	42	None	replace
390	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  2,  2);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  2,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  2,  2);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    2);    	non-compiled	[CE]  orphaned  case	42	None	replace
391	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  2);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  2);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    2);    	non-compiled	[CE]  orphaned  case	42	None	replace
392	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
393	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quotes,  c,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quotes,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quotes,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	17	None	replace
394	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  sb.toString());  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  sb.toString());  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  sb.toString());	  AppendHexJavaScriptRepresentation(c,    sb,    sb.toString());    	non-compiled	[CE]  orphaned  case	101	None	replace
395	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  sb.toString());  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote,  sb.toString());  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote,  sb.toString());	  AppendHexJavaScriptRepresentation(c,    sb,    sb.toString());    	non-compiled	[CE]  orphaned  case	101	None	replace
396	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c.toString());  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c.toString());  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c.toString());	  AppendHexJavaScriptRepresentation(c,    sb,    sb.toString());    	non-compiled	[CE]  orphaned  case	101	None	replace
397	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  quote.toString());  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  quote.toString());	  AppendHexJavaScriptRepresentation(c,    sb,    sb.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
398	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  quote,  sb.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  quote,  sb.toString());  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  quote,  sb.toString());	  AppendHexJavaScriptRepresentation(c,    sb,    sb.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
399	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(s,  c,  sb.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(s,  c,  sb.toString());  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(s,  c,  sb.toString());	  AppendHexJavaScriptRepresentation(c,    sb,    sb.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
400	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  2);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
401	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  2);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
402	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  outputCharsetEncoder,  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote,  c,  outputCharsetEncoder,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  quote,  c,  outputCharsetEncoder,  2);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
403	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  c);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  c);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
404	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  0,  c);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  0,  c);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
405	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  0,  c);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes,  0,  c);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
406	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  char  quote,  0,  c);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  char  quote,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  char  quote,  0,  c);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
407	[BUG]  [BUGGY]  sb.append( ";n ",  quote);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";n ",  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";n ",  quote);	          sb.append(   ";n   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
408	[BUG]  [BUGGY]  sb.append(c, ";n ");  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c, ";n ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c, ";n ");	          sb.append(   ";n   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
409	[BUG]  [BUGGY]  sb.append( ";n ",  c);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";n ",  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";n ",  c);	          sb.append(   ";n   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
410	[BUG]  [BUGGY]  sb.append( ";null ");  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";null ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";null ");	          sb.append(   ";n   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
411	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  2);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
412	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  2);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
413	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  forwardslashEscape,  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  forwardslashEscape,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  forwardslashEscape,  2);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
414	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  3  +  quote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  3  +  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  3  +  quote);	  appendHexJavaScriptRepresentation(sb,    c,    3);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
415	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  context);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  context);	  appendHexJavaScriptRepresentation(context,    sb,    c,    c);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
416	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  context);  [CE]  class,  interface,  or  enum  expected  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  context);	  appendHexJavaScriptRepresentation(context,    sb,    c,    c);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
417	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  STATEMENT);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  STATEMENT);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  STATEMENT);	  appendHexJavaScriptRepresentation(context,    sb,    c,    c);    	non-compiled	[CE]  	4	None	replace
418	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  context,  c);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  context,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  context,  c);	  appendHexJavaScriptRepresentation(context,    sb,    c,    c);    	non-compiled	[CE]  	4	None	replace
419	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  context);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  	60	None	replace
420	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  context);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  backslashEscape,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
421	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  context);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
422	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  context,  backslashEscape);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  context,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  context,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
423	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR,  context);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  HEAD_OF_EXPR,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
424	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  context);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
425	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS,  1);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  HEX_CHARS,  1);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
426	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  HEX_CHARS,  1);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  HEX_CHARS,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  HEX_CHARS,  1);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
427	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  1);  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  1);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
428	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  i,  1);  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  i,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  i,  1);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
429	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  1);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  1);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    1);    	non-compiled	[CE]  	55	None	replace
430	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quotes,  backslashEscape);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quotes,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quotes,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  	61	None	replace
431	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(consumer,  sb,  c,  backslashEscape);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(consumer,  sb,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(consumer,  sb,  c,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  	61	None	replace
432	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(consume,  sb,  c,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  	61	None	replace
433	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  	61	None	replace
434	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  quote,  backslashEscape);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(context,    sb,    c,    quote);    	non-compiled	[CE]  	90	None	replace
435	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c,  quote,  backslashEscape);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(context,  sb,  c,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(context,    sb,    c,    quote);    	non-compiled	[CE]  	90	None	replace
436	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  HEAD_OF_EXPR);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  HEAD_OF_EXPR);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  HEAD_OF_EXPR);	  appendHexJavaScriptRepresentation(context,    sb,    c,    quote);    	non-compiled	[CE]  	90	None	replace
437	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  quote,  1);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  quote,  1);	  appendHexJavaScriptRepresentation(context,    sb,    c,    quote);    	non-compiled	[CE]  	90	None	replace
438	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  quote);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  0,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  	50	None	replace
439	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  0,  quote);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  0,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  0,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  	50	None	replace
440	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  false);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  false);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  false);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  	50	None	replace
441	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(hexEscape,  sb,  c,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(hexEscape,  sb,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(hexEscape,  sb,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	17	None	replace
442	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(hexJavaScriptContext,  sb,  c,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(hexJavaScriptContext,  sb,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(hexJavaScriptContext,  sb,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	17	None	replace
443	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(msg,  sb,  c,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(msg,  sb,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(msg,  sb,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	17	None	replace
444	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(char,  c,  backslashEscape);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(char,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(char,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  orphaned  case	20	None	replace
445	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(char,  sb,  backslashEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(char,  sb,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(char,  sb,  backslashEscape);	  appendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  orphaned  case	20	None	replace
446	[BUG]  [BUGGY]  sb.append('[');  sb.append( "[');  [CE]  orphaned  case  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[');  sb.append( "[');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[');    sb.append( "[');	  	non-compiled	[CE]  orphaned  case	26	None	add
447	[BUG]  [BUGGY]  sb.append('/'  +  quote);  [CE]  orphaned  case  [FE]    ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/'  +  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/'  +  quote);	  sb.append('/');    	non-compiled	[CE]  orphaned  case	33	None	replace
448	[BUG]  [BUGGY]  sb.append('/').append(quote);  [CE]  orphaned  case  [FE]      ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/').append(quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/').append(quote);	  sb.append('/');    	non-compiled	[CE]  orphaned  case	33	None	replace
449	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  c);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  c);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c);    	non-compiled	[CE]  orphaned  case	48	None	replace
450	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  sb.length);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  sb.length);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0,  sb.length);	  appendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  orphaned  case	46	None	replace
451	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  1,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  1,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  1,  0);	  appendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  	46	None	replace
452	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  0,  1);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quotes,  0,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quotes,  0,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    1);    	non-compiled	[CE]  	58	None	replace
453	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  1);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    1);    	non-compiled	[CE]  	58	None	replace
454	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  doublequoteEscape);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  doublequoteEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  	74	None	replace
455	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  outputCharsetEncoder);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  	74	None	replace
456	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  singlequoteEscape);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  singlequoteEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  	74	None	replace
457	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  outputCharsetEncoder);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  	74	None	replace
458	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  c);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  c);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  	3	None	replace
459	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c.toString());  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c.toString());  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  c.toString());	  AppendHexJavaScriptRepresentation(c,    sb,    sb.toString());    	non-compiled	[CE]  	101	None	replace
460	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  sb.toString());  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  sb.toString());  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  sb.toString());	  AppendHexJavaScriptRepresentation(c,    sb,    sb.toString());    	non-compiled	[CE]  	101	None	replace
461	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  char.toString());  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  char.toString());  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  char.toString());	  AppendHexJavaScriptRepresentation(c,    sb,    sb.toString());    	non-compiled	[CE]  orphaned  case	101	None	replace
462	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  2);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  2);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	40	None	replace
463	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  0,  c.length);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  0,  c.length);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  0,  c.length);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c.length);    	non-compiled	[CE]  orphaned  case	47	None	replace
464	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  context);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quotes,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  orphaned  case	60	None	replace
465	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  quote,  context);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  quote,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  quote,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  not  a  statement	60	None	replace
466	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoding,  backslashEscape);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoding,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoding,  backslashEscape);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoding);    	non-compiled	[CE]  not  a  statement	76	None	replace
467	[BUG]  [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(c));  sb.append('/');  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(c));  sb.append('/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(c));  sb.append('/');	  	non-compiled	[CE]  not  a  statement	32	None	add
468	[BUG]  [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c));  sb.append('/');  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c));  sb.append('/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c));  sb.append('/');	  	non-compiled	[CE]  not  a  statement	32	None	add
469	[BUG]  [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c,  '/'));  sb.append('/');  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c,  '/'));  sb.append('/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c,  '/'));  sb.append('/');	  	non-compiled	[CE]  not  a  statement	32	None	add
470	[BUG]  [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encodeAsString(c));  sb.append('/');  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encodeAsString(c));  sb.append('/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encodeAsString(c));  sb.append('/');	  	non-compiled	[CE]  not  a  statement	32	None	add
471	[BUG]  [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(c));  sb.append( "/ ");  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(c));  sb.append( "/ ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(c));  sb.append( "/ ");	  	non-compiled	[CE]  not  a  statement	32	None	add
472	[BUG]  [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c));  sb.append( "/ ");  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c));  sb.append( "/ ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(c));  sb.append( "/ ");	  	non-compiled	[CE]  not  a  statement	32	None	add
473	[BUG]  [BUGGY]  sb.append(','  +  quote);  [CE]  orphaned  case  [FE]    junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(','  +  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(','  +  quote);	  sb.append(',');    	non-compiled	[CE]  orphaned  case	31	None	replace
474	[BUG]  [BUGGY]  sb.append('u000f');  [CE]  orphaned  case  [FE]      junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('u000f');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('u000f');	  sb.append(',');    	non-compiled	[CE]  orphaned  case	31	None	replace
475	[BUG]  [BUGGY]  sb.append(']');  [CE]  orphaned  case  [FE]        junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(']');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(']');	  sb.append(',');    	non-compiled	[CE]  orphaned  case	31	None	replace
476	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  c);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote,  c);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  orphaned  case	1	None	replace
477	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR);    	non-compiled	[CE]  orphaned  case	64	None	replace
478	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(buf,  c,  sb,  quote);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(buf,  c,  sb,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(buf,  c,  sb,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    buf,    quote);    	non-compiled	[CE]  orphaned  case	98	None	replace
479	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  3);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  3);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  3);	  appendHexJavaScriptRepresentation(sb,    c,    3);    	non-compiled	[CE]  orphaned  case	70	None	replace
480	[BUG]  [BUGGY]  sb.append(singlequoteEscape);  [CE]  orphaned  case  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(singlequoteEscape);	          sb.append(quote);    	non-compiled	[CE]  orphaned  case	82	None	replace
481	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    singlequoteEscape);    	non-compiled	[CE]  orphaned  case	73	None	replace
482	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  singlequoteEscape);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  singlequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    singlequoteEscape);    	non-compiled	[CE]  orphaned  case	73	None	replace
483	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    singlequoteEscape);    	non-compiled	[CE]  orphaned  case	73	None	replace
484	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(hexEscape,  sb,  c,  backslashEscape);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(hexEscape,  sb,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(hexEscape,  sb,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    backslashEscape);    	non-compiled	[CE]  orphaned  case	39	None	replace
485	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  buf,  backslashEscape);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  buf,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  buf,  backslashEscape);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    backslashEscape);    	non-compiled	[CE]  orphaned  case	39	None	replace
486	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  backslashEscape);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  orphaned  case	35	None	replace
487	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  multiquoteEscape,  backslashEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  multiquoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  multiquoteEscape,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  orphaned  case	35	None	replace
488	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  reversequoteEscape,  backslashEscape);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  reversequoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  reversequoteEscape,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  orphaned  case	35	None	replace
489	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  quote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	12	None	replace
490	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  doublequoteEscape);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder,  doublequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	12	None	replace
491	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  charBuffer,  quote);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  charBuffer,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  charBuffer,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  orphaned  case	97	None	replace
492	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  buf,  quote);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  buf,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  buf,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  orphaned  case	97	None	replace
493	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote,  c,  backslashEscape);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  quote,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    backslashEscape);    	non-compiled	[CE]  orphaned  case	38	None	replace
494	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  OUT_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  OUT_FOR_INIT_CLAUSE);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  OUT_FOR_INIT_CLAUSE);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
495	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  outputCharsetEncoder);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
496	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  char);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  char);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  char);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
497	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  charset);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  charset);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  charset);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	83	None	replace
498	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  0x7f);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  0x7f);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  0x7f);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  not  a  statement	83	None	replace
499	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoding);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  outputCharsetEncoding);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  not  a  statement	59	None	replace
500	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c,  outputCharsetEncoding);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c,  outputCharsetEncoding);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  not  a  statement	59	None	replace
501	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  c);  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  c);	  appendHexJavaScriptRepresentation(context,    sb,    c,    c);    	non-compiled	[CE]  not  a  statement	4	None	replace
502	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  sb);  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  sb);	  appendHexJavaScriptRepresentation(context,    sb,    c,    c);    	non-compiled	[CE]  not  a  statement	4	None	replace
503	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(lhsContext,  sb,  c,  c);  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(lhsContext,  sb,  c,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(lhsContext,  sb,  c,  c);	  appendHexJavaScriptRepresentation(context,    sb,    c,    c);    	non-compiled	[CE]  not  a  statement	4	None	replace
504	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(msg,  sb,  c,  c);  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(msg,  sb,  c,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(msg,  sb,  c,  c);	  appendHexJavaScriptRepresentation(context,    sb,    c,    c);    	non-compiled	[CE]  not  a  statement	4	None	replace
505	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  1);  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(consume,  sb,  c,  quote,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
506	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c,  quote,  1);  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(context,  sb,  c,  quote,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
507	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  quote,  1);  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  quote,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
508	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1,  1);  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
509	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  charQuote);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  charQuote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  charQuote);	  AppendHexJavaScriptRepresentation(c,    sb,    charQuote);    	non-compiled	[CE]  not  a  statement	102	None	replace
510	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(charQuote,  sb);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(charQuote,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(charQuote,  sb);	  AppendHexJavaScriptRepresentation(c,    sb,    charQuote);    	non-compiled	[CE]  not  a  statement	102	None	replace
511	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  256);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  256);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  256);	  appendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  not  a  statement	54	None	replace
512	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  i,  1);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  i,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  i,  1);	  appendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  not  a  statement	54	None	replace
513	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  4);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  4);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  4);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    2);    	non-compiled	[CE]  not  a  statement	42	None	replace
514	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  3);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  3);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  3);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    2);    	non-compiled	[CE]  orphaned  case	42	None	replace
515	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  1);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  1);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    1);    	non-compiled	[CE]  orphaned  case	56	None	replace
516	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  4);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  4);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  4);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    2);    	non-compiled	[CE]  orphaned  case	81	None	replace
517	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  orphaned  case	99	None	replace
518	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(this.quote,  c,  sb);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(this.quote,  c,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(this.quote,  c,  sb);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  orphaned  case	99	None	replace
519	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  orphaned  case	99	None	replace
520	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  sb);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  sb);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  sb);	  AppendHexJavaScriptRepresentation(c,    sb,    sb);    	non-compiled	[CE]  orphaned  case	100	None	replace
521	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape);    	non-compiled	[CE]  orphaned  case	61	None	replace
522	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	11	None	replace
523	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_COMMENT,  backslashEscape);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  IDE_COMMENT,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  IDE_COMMENT,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    quote);    	non-compiled	[CE]  orphaned  case	96	None	replace
524	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT,  quote);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    quote);    	non-compiled	[CE]  orphaned  case	96	None	replace
525	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(consume,  c,  sb,  quote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(consume,  c,  sb,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(consume,  c,  sb,  quote);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    quote);    	non-compiled	[CE]  orphaned  case	79	None	replace
526	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  doublequoteEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  doublequoteEscape);	  appendHexJavaScriptRepresentation(context,    sb,    c,    quote);    	non-compiled	[CE]  orphaned  case	90	None	replace
527	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(msg,  sb,  c,  consumer);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(msg,  sb,  c,  consumer);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(msg,  sb,  c,  consumer);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    c);    	non-compiled	[CE]  orphaned  case	66	None	replace
528	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  c);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  c);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    c);    	non-compiled	[CE]  orphaned  case	65	None	replace
529	[BUG]  [BUGGY]  sb.append(',');  sb.append(':');  [CE]  orphaned  case  [FE]    junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(':');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append(':');	  	non-compiled	[CE]  orphaned  case	30	None	add
530	[BUG]  [BUGGY]  sb.append(',');  sb.append( ",');  [CE]  orphaned  case  [FE]      junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append( ",');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append( ",');	  	non-compiled	[CE]  orphaned  case	30	None	add
531	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  0,  0);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  0,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  0,  0);	  appendHexJavaScriptRepresentation(sb,    c,    1,    0);    	non-compiled	[CE]  orphaned  case	68	None	replace
532	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  2);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  1,  2);	  appendHexJavaScriptRepresentation(sb,    c,    1,    0);    	non-compiled	[CE]  orphaned  case	68	None	replace
533	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  singlequoteEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    backslashEscape);    	non-compiled	[CE]  orphaned  case	75	None	replace
534	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  line,  outputCharsetEncoder,  backslashEscape);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  line,  outputCharsetEncoder,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  line,  outputCharsetEncoder,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    backslashEscape);    	non-compiled	[CE]  orphaned  case	75	None	replace
535	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  0);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  0);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	45	None	replace
536	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT,  0);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT,  0);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	45	None	replace
537	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  context);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  context);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  orphaned  case	63	None	replace
538	[BUG]  [BUGGY]  sb.append(c);  sb.append('n');  [CE]  orphaned  case  [FE]    ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  sb.append('n');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    sb.append('n');	  	non-compiled	[CE]  orphaned  case	21	None	add
539	[BUG]  [BUGGY]  sb.append(c);  sb.append('ufffd');  [CE]  orphaned  case  [FE]      ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  sb.append('ufffd');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    sb.append('ufffd');	  	non-compiled	[CE]  orphaned  case	21	None	add
540	[BUG]  [BUGGY]  sb.append(c);  sb.append( "n ");  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  sb.append( "n ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    sb.append( "n ");	  	non-compiled	[CE]  orphaned  case	21	None	add
541	[BUG]  [BUGGY]  sb.append(c);  sb.append( ";n ");  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  sb.append( ";n ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    sb.append( ";n ");	  	non-compiled	[CE]  orphaned  case	21	None	add
542	[BUG]  [BUGGY]  sb.append(c);  sb.append( ", ");  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  sb.append( ", ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    sb.append( ", ");	  	non-compiled	[CE]  orphaned  case	21	None	add
543	[BUG]  [BUGGY]  sb.append(c);  sb.append('/');  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  sb.append('/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    sb.append('/');	  	non-compiled	[CE]  orphaned  case	21	None	add
544	[BUG]  [BUGGY]  sb.append(c);  sb.append('0');  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  sb.append('0');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    sb.append('0');	  	non-compiled	[CE]  orphaned  case	21	None	add
545	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1,  1);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  1,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  orphaned  case	53	None	replace
546	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(context,    sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	16	None	replace
547	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(text,  sb,  c,  outputCharsetEncoder);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(text,  sb,  c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(text,  sb,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(context,    sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  	16	None	replace
548	[BUG]  [BUGGY]  sb.append('n');  sb.append('f');  [CE]  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  sb.append('f');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    sb.append('f');	  	non-compiled	[CE]  	23	None	add
549	[BUG]  [BUGGY]  sb.append('n');  sb.append('k');  [CE]  [FE]      junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  sb.append('k');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    sb.append('k');	  	non-compiled	[CE]  	23	None	add
550	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  c  quote);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  c  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  c  quote);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    c);    	non-compiled	[CE]  	5	None	replace
551	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  quote);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoder);    	non-compiled	[CE]  	15	None	replace
552	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  quote);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  quote);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  	62	None	replace
553	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  multiquoteEscape,  backslashEscape);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  multiquoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  multiquoteEscape,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    backslashEscape);    	non-compiled	[CE]  	37	None	replace
554	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  line,  backslashEscape);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  line,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  line,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    backslashEscape);    	non-compiled	[CE]  	37	None	replace
555	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  doublequoteEscape);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  doublequoteEscape);	  AppendHexJavaScriptRepresentation(c,    sb,    quote);    	non-compiled	[CE]  	7	None	replace
556	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  quote);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  c,  quote);	  AppendHexJavaScriptRepresentation(c,    sb,    c);    	non-compiled	[CE]  	9	None	replace
557	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  backslashEscape);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  c,  backslashEscape);	  AppendHexJavaScriptRepresentation(c,    sb,    c);    	non-compiled	[CE]  	9	None	replace
558	[BUG]  [BUGGY]  sb.append( ".;n ");  [CE]  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ".;n ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ".;n ");	          sb.append(   ";n   ");    	non-compiled	[CE]  	52	None	replace
559	[BUG]  [BUGGY]  sb.append( ";  char  ' "  +  quote);  [CE]  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";  char  ' "  +  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";  char  ' "  +  quote);	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  	91	None	replace
560	[BUG]  [BUGGY]  sb.append( ";  char  ' ").append(quote);  [CE]  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";  char  ' ").append(quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";  char  ' ").append(quote);	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  	91	None	replace
561	[BUG]  [BUGGY]  sb.append( ";  char  ' ").append(c);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";  char  ' ").append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";  char  ' ").append(c);	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  ')'  expected	91	None	replace
562	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  backslashEscape);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  ')'  expected	71	None	replace
563	[BUG]  [BUGGY]  sb.append(CaseConsumer.toUpperCase(c));  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(CaseConsumer.toUpperCase(c));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(CaseConsumer.toUpperCase(c));	  sb.append(Character.toUpperCase(c));    	non-compiled	[CE]  ')'  expected	92	None	replace
564	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  quote);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  quote);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  ')'  expected	10	None	replace
565	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quoted,  0);  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quoted,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  quoted,  0);	  appendHexJavaScriptRepresentation(sb,    c,    quoted,    0);    	non-compiled	[CE]  ')'  expected	51	None	replace
566	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  quote);  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  ')'  expected	50	None	replace
567	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  backslashEscape);  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  ')'  expected	50	None	replace
568	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  quote);  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  1,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  ')'  expected	50	None	replace
569	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  0,  quote);  [CE]  ')'  expected  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  0,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR,  0,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  ')'  expected	50	None	replace
570	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  HEX_CHARS_INIT_CLAUSE);  [CE]  ')'  expected  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  HEX_CHARS_INIT_CLAUSE);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0,  HEX_CHARS_INIT_CLAUSE);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  ')'  expected	50	None	replace
571	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape,  doublequoteEscape);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape,  doublequoteEscape);	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  ')'  expected	86	None	replace
572	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape,  singlequoteEscape);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape,  singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  backslashEscape,  singlequoteEscape);	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  ')'  expected	86	None	replace
573	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  this.backslashEscape);  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  this.backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  this.backslashEscape);	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  ')'  expected	86	None	replace
574	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  orphaned  case	95	None	replace
575	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEX_CHARS,  quote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEX_CHARS,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  HEX_CHARS,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  orphaned  case	95	None	replace
576	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  doublequote);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  doublequote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  doublequote);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  orphaned  case	95	None	replace
577	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    quote);    	non-compiled	[CE]  orphaned  case	78	None	replace
578	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  2);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backwardslashEscape,  2);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	43	None	replace
579	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  2);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  2);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	43	None	replace
580	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  quote,  2);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  quote,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(context,  sb,  quote,  2);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	43	None	replace
581	[BUG]  [BUGGY]  sb.append('['  +  quote);  [CE]  orphaned  case  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('['  +  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('['  +  quote);	  sb.append('[');    	non-compiled	[CE]  orphaned  case	27	None	replace
582	[BUG]  [BUGGY]  sb.append('[')+  quote;  [CE]  orphaned  case  [FE]      junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[')+  quote;  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[')+  quote;	  sb.append('[');    	non-compiled	[CE]  orphaned  case	27	None	replace
583	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  charset);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  charset);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  charset);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
584	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  outputCharsetEncoder);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
585	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  backslashEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  backslashEscape);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
586	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  encoding);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  encoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  encoding);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
587	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  escape);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  escape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  escape);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
588	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    quote);    	non-compiled	[CE]  orphaned  case	94	None	replace
589	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    2);    	non-compiled	[CE]  orphaned  case	44	None	replace
590	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  quote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  quote);	  appendHexJavaScriptRepresentation(c,    sb,    quote);    	non-compiled	[CE]  orphaned  case	18	None	replace
591	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  quote);	  appendHexJavaScriptRepresentation(c,    sb,    quote);    	non-compiled	[CE]  orphaned  case	18	None	replace
592	[BUG]  [BUGGY]  sb.append('?'  +  quote);  [CE]  orphaned  case  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('?'  +  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('?'  +  quote);	  sb.append('?');    	non-compiled	[CE]  orphaned  case	85	None	replace
593	[BUG]  [BUGGY]  sb.append( "?= ");  [CE]  orphaned  case  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "?= ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "?= ");	  sb.append('?');    	non-compiled	[CE]  orphaned  case	85	None	replace
594	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  0);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder,  0);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	49	None	replace
595	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  reversequoteEscape,  0);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  reversequoteEscape,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  reversequoteEscape,  0);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	49	None	replace
596	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  backslashEscape);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  outputCharsetEncoder,  backslashEscape);	  appendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	13	None	replace
597	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS,  c,  HEX_CHARS);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(HEX_CHARS,  c,  HEX_CHARS);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(HEX_CHARS,  c,  HEX_CHARS);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS);    	non-compiled	[CE]  orphaned  case	80	None	replace
598	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  0);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS);    	non-compiled	[CE]  orphaned  case	80	None	replace
599	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  i);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  i);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  i);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS);    	non-compiled	[CE]  orphaned  case	80	None	replace
600	[BUG]  [BUGGY]  sb.append( ": ");  [CE]  orphaned  case  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ": ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ": ");	  sb.append(   "n   ");    	non-compiled	[CE]  orphaned  case	67	None	replace
601	[BUG]  [BUGGY]  sb.append( "no-char ");  [CE]  orphaned  case  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "no-char ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "no-char ");	  sb.append(   "n   ");    	non-compiled	[CE]  orphaned  case	67	None	replace
602	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  quote);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  orphaned  case	36	None	replace
603	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  doublequoteEscape);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  quote,  doublequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  orphaned  case	36	None	replace
604	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  1L);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  1L);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  1L);	  AppendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  orphaned  case	89	None	replace
605	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  singlequoteEscape);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  singlequoteEscape);	  AppendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  orphaned  case	8	None	replace
606	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  orphaned  case	36	None	replace
607	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  orphaned  case	36	None	replace
608	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  charBuffer,  quote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  charBuffer,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  charBuffer,  quote);	  appendHexJavaScriptRepresentation(c,    sb,    quote);    	non-compiled	[CE]  orphaned  case	18	None	replace
609	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  charQuote);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  charQuote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  charQuote);	  appendHexJavaScriptRepresentation(c,    sb,    quote);    	non-compiled	[CE]  orphaned  case	18	None	replace
610	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  0);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  0);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	49	None	replace
611	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  100,  0);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  100,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  100,  0);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	49	None	replace
612	[BUG]  [BUGGY]  sb.append('n');  StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c));  sb.append('n');  [CE]  orphaned  case  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c));  sb.append('n');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c));  sb.append('n');	  	non-compiled	[CE]  orphaned  case	23	None	add
613	[BUG]  [BUGGY]  sb.append('n');  sb.append(c);  [CE]  orphaned  case  [FE]      junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  sb.append(c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    sb.append(c);	  	non-compiled	[CE]  orphaned  case	23	None	add
614	[BUG]  [BUGGY]  sb.append('n');  StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c),  Integer.toHexString(i));  [CE]  orphaned  case  [FE]        junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c),  Integer.toHexString(i));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c),  Integer.toHexString(i));	  	non-compiled	[CE]  orphaned  case	23	None	add
615	[BUG]  [BUGGY]  sb.append('n');  StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c),  Integer.toHexString(quote));  [CE]  orphaned  case  [FE]          junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c),  Integer.toHexString(quote));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c),  Integer.toHexString(quote));	  	non-compiled	[CE]  orphaned  case	23	None	add
616	[BUG]  [BUGGY]  sb.append('n');  StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c));  [CE]  orphaned  case  [FE]            junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c));	  	non-compiled	[CE]  orphaned  case	23	None	add
617	[BUG]  [BUGGY]  sb.append('n');  StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c));  sb.append( "n ");  [CE]  orphaned  case  [FE]              junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('n');  StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c));  sb.append( "n ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('n');    StringBuilder  sb  =  new  StringBuilder(Integer.toHexString(c));  sb.append( "n ");	  	non-compiled	[CE]  orphaned  case	23	None	add
618	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  c);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  c);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  orphaned  case	1	None	replace
619	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  char  quote,  backslashEscape,  c);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  char  quote,  backslashEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  char  quote,  backslashEscape,  c);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  orphaned  case	1	None	replace
620	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  c);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  c);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  orphaned  case	1	None	replace
621	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  'ufffd',  c);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  'ufffd',  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  'ufffd',  c);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  orphaned  case	1	None	replace
622	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charquote,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charquote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  charquote,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  orphaned  case	1	None	replace
623	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  2);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  2);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	40	None	replace
624	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  QUOTE,  2);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  QUOTE,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  QUOTE,  2);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	40	None	replace
625	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  outputCharsetEncoding);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  c,  outputCharsetEncoding);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoding);    	non-compiled	[CE]  orphaned  case	76	None	replace
626	[BUG]  [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  OUT_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(HexJavaScriptRepresentation(c,  OUT_FOR_INIT_CLAUSE);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(HexJavaScriptRepresentation(c,  OUT_FOR_INIT_CLAUSE);	  sb.append(HexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  orphaned  case	84	None	replace
627	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(char,  c,  sb,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(char,  c,  sb,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(char,  c,  sb,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	13	None	replace
628	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0,  quote);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  0,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  orphaned  case	50	None	replace
629	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  i,  0,  quote);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  i,  0,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  i,  0,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  orphaned  case	50	None	replace
630	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  'ufffd',  quote);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  'ufffd',  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  'ufffd',  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  orphaned  case	50	None	replace
631	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  'n',  quote);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  'n',  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  'n',  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    quote);    	non-compiled	[CE]  orphaned  case	50	None	replace
632	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    quote);    	non-compiled	[CE]  orphaned  case	78	None	replace
633	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  buf,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  buf,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  buf,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    quote);    	non-compiled	[CE]  orphaned  case	78	None	replace
634	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  c,  backslashEscape);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  orphaned  case	97	None	replace
635	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  backslashEscape);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  orphaned  case	97	None	replace
636	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  charBuffer,  c,  backslashEscape);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  charBuffer,  c,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  charBuffer,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  orphaned  case	97	None	replace
637	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  quote,  backslashEscape);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  quote,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  quote,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  orphaned  case	97	None	replace
638	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  c  +  1);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  c  +  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  charBuffer,  c  +  1);	  appendHexJavaScriptRepresentation(sb,    c,    charBuffer,    quote);    	non-compiled	[CE]  orphaned  case	97	None	replace
639	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  endpointCharsetEncoding,  outputCharsetEncoding);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  endpointCharsetEncoding,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  endpointCharsetEncoding,  outputCharsetEncoding);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  orphaned  case	59	None	replace
640	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoding);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoding);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quote,  outputCharsetEncoding);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoding);    	non-compiled	[CE]  orphaned  case	59	None	replace
641	[BUG]  [BUGGY]  sb.append( "a: ");  [CE]  orphaned  case  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "a: ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "a: ");	  sb.append(   ",   ");    	non-compiled	[CE]  orphaned  case	29	None	replace
642	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  quote,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  quote,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    quote,    c,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	14	None	replace
643	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequote);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    quote);    	non-compiled	[CE]  orphaned  case	79	None	replace
644	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  backslashEscape);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    quote);    	non-compiled	[CE]  orphaned  case	94	None	replace
645	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  1);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  1);	  appendHexJavaScriptRepresentation(sb,    c,    END_SCRIPT,    2);    	non-compiled	[CE]  orphaned  case	103	None	replace
646	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(sb,  c,  quote,  2);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(sb,  c,  quote,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(sb,  c,  quote,  2);	  appendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder,    2);    	non-compiled	[CE]  orphaned  case	81	None	replace
647	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  consumer);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  consumer);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  c,  consumer);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    c);    	non-compiled	[CE]  orphaned  case	66	None	replace
648	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  consumers);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  consumers);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  consumers);	  appendHexJavaScriptRepresentation(consume,    sb,    c,    c);    	non-compiled	[CE]  orphaned  case	66	None	replace
649	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  c,  0,  c.length);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  c,  0,  c.length);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  c,  0,  c.length);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c.length);    	non-compiled	[CE]  orphaned  case	47	None	replace
650	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  0,  c.length);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  0,  c.length);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  0,  c.length);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c.length);    	non-compiled	[CE]  orphaned  case	47	None	replace
651	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  this.backslashEscape);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  this.backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  buf,  this.backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    buf,    quote);    	non-compiled	[CE]  orphaned  case	98	None	replace
652	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0x80,  0);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0x80,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0x80,  0);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	45	None	replace
653	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  cc);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  cc);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0,  cc);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	45	None	replace
654	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0xFFFF,  quote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0xFFFF,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0xFFFF,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    0);    	non-compiled	[CE]  orphaned  case	45	None	replace
655	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  1,  0);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  1,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  1,  0);	  appendHexJavaScriptRepresentation(sb,    c,    1,    0);    	non-compiled	[CE]  orphaned  case	68	None	replace
656	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  charquote,  outputCharsetEncoder);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  charquote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  charquote,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(c,    sb,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	10	None	replace
657	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    IDE_SCRIPT,    quote);    	non-compiled	[CE]  orphaned  case	96	None	replace
658	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  charset.toString());  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  charset.toString());  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  charset.toString());	  AppendHexJavaScriptRepresentation(c,    sb,    sb.toString());    	non-compiled	[CE]  orphaned  case	101	None	replace
659	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  1);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  1);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  orphaned  case	53	None	replace
660	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  0);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  c,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  c,  0);	  appendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  orphaned  case	46	None	replace
661	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  i,  0);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  i,  0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  i,  0);	  appendHexJavaScriptRepresentation(c,    sb,    0);    	non-compiled	[CE]  orphaned  case	46	None	replace
662	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  doublequoteEscape,  backslashEscape);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  doublequoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  doublequoteEscape,  backslashEscape);	  AppendHexJavaScriptRepresentation(c,    sb,    backslashEscape);    	non-compiled	[CE]  orphaned  case	8	None	replace
663	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  1);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  END_SCRIPT,  quote,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  orphaned  case	57	None	replace
664	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  1);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  1);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    1);    	non-compiled	[CE]  orphaned  case	57	None	replace
665	[BUG]  [BUGGY]  sb.append(',');  sb.append(c,');  [CE]  orphaned  case  [FE]    junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(',');  sb.append(c,');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(',');    sb.append(c,');	  	non-compiled	[CE]  orphaned  case	30	None	add
666	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  OutputCharsetEncoder);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  OutputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  OutputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    outputCharsetEncoder);    	non-compiled	[CE]  orphaned  case	71	None	replace
667	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  dualquoteEscape);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  dualquoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  dualquoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    backslashEscape);    	non-compiled	[CE]  orphaned  case	37	None	replace
668	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  HEX_CHARS,  1);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  HEX_CHARS,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  HEX_CHARS,  1);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    1);    	non-compiled	[CE]  orphaned  case	55	None	replace
669	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  2);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  2);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	43	None	replace
670	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  2);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  buf,  2);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	43	None	replace
671	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT,  2);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  DEFAULT_SCRIPT,  2);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    2);    	non-compiled	[CE]  orphaned  case	43	None	replace
672	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS);    	non-compiled	[CE]  	80	None	replace
673	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  HEX_CHARS);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  HEX_CHARS);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  HEX_CHARS);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS);    	non-compiled	[CE]  	80	None	replace
674	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.charAt(c));  [CE]  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(SinglequoteEscape.charAt(c));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(SinglequoteEscape.charAt(c));	          sb.append(quote);    	non-compiled	[CE]  	82	None	replace
675	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  buf);	  AppendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  	6	None	replace
676	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  backslashEscape);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  	95	None	replace
677	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  doublequoteEscape);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  doublequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEX_CHARS,  doublequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    HEX_CHARS,    quote);    	non-compiled	[CE]  	95	None	replace
678	[BUG]  [BUGGY]  sb.append( ";negative ");  [CE]  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";negative ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";negative ");	          sb.append(   ";n   ");    	non-compiled	[CE]  	52	None	replace
679	[BUG]  [BUGGY]  sb.append( ";no ");  [CE]  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";no ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";no ");	          sb.append(   ";n   ");    	non-compiled	[CE]  	52	None	replace
680	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  c);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  c);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    c);    	non-compiled	[CE]  	65	None	replace
681	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  c);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  c);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    c);    	non-compiled	[CE]  	65	None	replace
682	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  c);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  c);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  	3	None	replace
683	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  c);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  buf,  c);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  	3	None	replace
684	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  reversequoteEscape,  c);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  reversequoteEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  reversequoteEscape,  c);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  	3	None	replace
685	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  c);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape,  c);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    c);    	non-compiled	[CE]  	3	None	replace
686	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(context,  c,  sb,  backslashEscape);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(context,  c,  sb,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(context,  c,  sb,  backslashEscape);	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  	86	None	replace
687	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  quote;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(context,  sb,  c,  quote;  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(context,  sb,  c,  quote;	  appendHexJavaScriptRepresentation(context,    sb,    c,    backslashEscape);    	non-compiled	[CE]  	86	None	replace
688	[BUG]  [BUGGY]  sb.append(   ",   ");  sb.append(c,   ");  [CE]  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(   ",   ");  sb.append(c,   ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(   ",   ");    sb.append(c,   ");	  	non-compiled	[CE]  	28	None	add
689	[BUG]  [BUGGY]  sb.append( "[u000f] ");  [CE]  [FE]    junit.framework.ComparisonFailure:  null  expected:<var  x=   "[\u000f]   ">  but  was:<var  x=   "[    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "[u000f] ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "[u000f] ");	  sb.append(',');    	non-compiled	[CE]  	31	None	replace
690	[BUG]  [BUGGY]  sb.append( ":: ");  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ":: ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ":: ");	  sb.append(   "n   ");    	non-compiled	[CE]  not  a  statement	67	None	replace
691	[BUG]  [BUGGY]  sb.append( "msg.backslash.escape ");  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "msg.backslash.escape ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "msg.backslash.escape ");	  sb.append(   "n   ");    	non-compiled	[CE]  not  a  statement	67	None	replace
692	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quoteEscape,  this.quote);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.quoteEscape,  this.quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.quoteEscape,  this.quote);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  not  a  statement	99	None	replace
693	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  this.quote);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  this.quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  this.quote);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  not  a  statement	99	None	replace
694	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.comment);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.comment);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.comment);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  not  a  statement	99	None	replace
695	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  this.quote);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  this.quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  this.quote);	  AppendHexJavaScriptRepresentation(sb,    c,    this.quote);    	non-compiled	[CE]  not  a  statement	99	None	replace
696	[BUG]  [BUGGY]  sb.append('/');  sb.append(Character.toLowerCase(c));  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  sb.append(Character.toLowerCase(c));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    sb.append(Character.toLowerCase(c));	  	non-compiled	[CE]  not  a  statement	32	None	add
697	[BUG]  [BUGGY]  sb.append('/');  sb.append(Character.toUpperCase(c));  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  sb.append(Character.toUpperCase(c));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    sb.append(Character.toUpperCase(c));	  	non-compiled	[CE]  not  a  statement	32	None	add
698	[BUG]  [BUGGY]  sb.append('/');  sb.append(c).append('/');  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  sb.append(c).append('/');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    sb.append(c).append('/');	  	non-compiled	[CE]  not  a  statement	32	None	add
699	[BUG]  [BUGGY]  sb.append('/');  sb.append(Character.toLowerCase('/'));  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  sb.append(Character.toLowerCase('/'));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    sb.append(Character.toLowerCase('/'));	  	non-compiled	[CE]  not  a  statement	32	None	add
700	[BUG]  [BUGGY]  sb.append('/');  sb.append(Character.toLowerCase(c).charAt(0);  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('/');  sb.append(Character.toLowerCase(c).charAt(0);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('/');    sb.append(Character.toLowerCase(c).charAt(0);	  	non-compiled	[CE]  not  a  statement	32	None	add
701	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  charQuote);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  charQuote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(context,  sb,  charQuote);	  AppendHexJavaScriptRepresentation(c,    sb,    charQuote);    	non-compiled	[CE]  not  a  statement	102	None	replace
702	[BUG]  [BUGGY]  sb.append('[').append(quote).append(']');  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[').append(quote).append(']');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[').append(quote).append(']');	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
703	[BUG]  [BUGGY]  sb.append('[').append(quote).append( "] ");  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  null  expected:<({   "a   ":4    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append('[').append(quote).append( "] ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append('[').append(quote).append( "] ");	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
704	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  c,  backslashEscape,  context);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  c,  backslashEscape,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  c,  backslashEscape,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  not  a  statement	60	None	replace
705	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  buf,  context);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  buf,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  buf,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  not  a  statement	60	None	replace
706	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  context);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quote,  context);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  not  a  statement	60	None	replace
707	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  context);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this.backslashEscape,  context);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  not  a  statement	63	None	replace
708	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  context);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  buf,  context);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  buf,  context);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    context);    	non-compiled	[CE]  not  a  statement	63	None	replace
709	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  dualquoteEscape,  backslashEscape);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  dualquoteEscape,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  dualquoteEscape,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c,    quote,    backslashEscape);    	non-compiled	[CE]  not  a  statement	34	None	replace
710	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  256);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  256);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  256);	  AppendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  not  a  statement	89	None	replace
711	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  inputCharsetEncoder);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  inputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  inputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    outputCharsetEncoder);    	non-compiled	[CE]  not  a  statement	12	None	replace
712	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c,  quote,  outputCharsetEncoder);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(context,  sb,  c,  quote,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(context,  sb,  c,  quote,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    quote,    outputCharsetEncoder);    	non-compiled	[CE]  not  a  statement	15	None	replace
713	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this,  backslashEscape);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  this,  backslashEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  this,  backslashEscape);	  AppendHexJavaScriptRepresentation(sb,    c,    backwardslashEscape);    	non-compiled	[CE]  not  a  statement	72	None	replace
714	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  buf,  2);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  buf,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  buf,  2);	  appendHexJavaScriptRepresentation(sb,    c,    quotes,    2);    	non-compiled	[CE]  	44	None	replace
715	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  sb,  1);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  sb,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  sb,  1);	  appendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  	54	None	replace
716	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  1);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  c,  1);	  appendHexJavaScriptRepresentation(c,    sb,    1);    	non-compiled	[CE]  	54	None	replace
717	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  escape);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  escape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  escape);	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  	83	None	replace
718	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  'n');  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  'n');  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.appendHexJavaScriptRepresentation(c,  'n');	  sb.appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  	83	None	replace
719	[BUG]  [BUGGY]  sb.append(AsciiCharacter.toLowerCase(c));  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(AsciiCharacter.toLowerCase(c));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(AsciiCharacter.toLowerCase(c));	  sb.append(Character.toLowerCase(c));    	non-compiled	[CE]  	93	None	replace
720	[BUG]  [BUGGY]  sb.append(Integer.toHexString(c));  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(Integer.toHexString(c));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(Integer.toHexString(c));	  sb.append(Character.toLowerCase(c));    	non-compiled	[CE]  	93	None	replace
721	[BUG]  [BUGGY]  sb.append(c, ";  char  ' ");  [CE]  [FE]        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c, ";  char  ' ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c, ";  char  ' ");	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  	91	None	replace
722	[BUG]  [BUGGY]  sb.append( ";  character  ' ");  [CE]  [FE]          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";  character  ' ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";  character  ' ");	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  	91	None	replace
723	[BUG]  [BUGGY]  sb.append( ";  quote  ' ");  [CE]  orphaned  default  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( ";  quote  ' ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( ";  quote  ' ");	          sb.append(   ";    char    '   ");    	non-compiled	[CE]  orphaned  default	91	None	replace
724	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  HEAD_OF_EXPR);  [CE]  orphaned  default  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  HEAD_OF_EXPR);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  HEAD_OF_EXPR);	  AppendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR);    	non-compiled	[CE]  orphaned  default	64	None	replace
725	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  QUOTE_FIELD_EXPR);  [CE]  orphaned  default  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  QUOTE_FIELD_EXPR);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  QUOTE_FIELD_EXPR);	  AppendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR);    	non-compiled	[CE]  orphaned  default	64	None	replace
726	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  2);  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  2);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  c,  2);	  appendHexJavaScriptRepresentation(c,    sb,    2);    	non-compiled	[CE]  orphaned  default	41	None	replace
727	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  c);  [CE]  orphaned  default  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  c,  c);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  c,  c);	  appendHexJavaScriptRepresentation(context,    sb,    c,    c);    	non-compiled	[CE]  orphaned  default	4	None	replace
728	[BUG]  [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(Character.toLowerCase(c));  }  [CE]  orphaned  default  [FE]    ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(Character.toLowerCase(c));  }  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(Character.toLowerCase(c));  }	  	non-compiled	[CE]  orphaned  default	21	None	add
729	[BUG]  [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append('n');  }  else  {  sb.append(c);  }  [CE]  orphaned  default  [FE]      ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append('n');  }  else  {  sb.append(c);  }  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    if(c  >  0x1f  &&  c  <=  0x7f)  {  sb.append('n');  }  else  {  sb.append(c);  }	  	non-compiled	[CE]  orphaned  default	21	None	add
730	[BUG]  [BUGGY]  sb.append(c);  sb.append(Character.toLowerCase(c));  [CE]  orphaned  default  [FE]        ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append(c);  sb.append(Character.toLowerCase(c));  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append(c);    sb.append(Character.toLowerCase(c));	  	non-compiled	[CE]  orphaned  default	21	None	add
731	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  QUOTE,  quote);  [CE]  orphaned  default  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  QUOTE,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  QUOTE,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    HEAD_OF_EXPR,    quote);    	non-compiled	[CE]  orphaned  default	77	None	replace
732	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  1);  [CE]  orphaned  default  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  1);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(c,  sb,  backslashEscape,  1);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    1);    	non-compiled	[CE]  orphaned  default	56	None	replace
733	[BUG]  [BUGGY]  sb.append( "u00 ");  [CE]  orphaned  default  [FE]    ComparisonFailure    [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  sb.append( "u00 ");  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	sb.append( "u00 ");	  sb.append(c);    	non-compiled	[CE]  orphaned  default	22	None	replace
734	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  c,  quote);  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  0,  c,  quote);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  0,  c,  quote);	  appendHexJavaScriptRepresentation(sb,    c,    0,    c);    	non-compiled	[CE]  orphaned  default	48	None	replace
735	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape,  singlequoteEscape);  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape,  singlequoteEscape);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  doublequoteEscape,  singlequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    singlequoteEscape);    	non-compiled	[CE]  orphaned  default	73	None	replace
736	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0x80);  [CE]  orphaned  default  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0x80);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0x80);	  appendHexJavaScriptRepresentation(sb,    c,    quoted,    0);    	non-compiled	[CE]  orphaned  default	51	None	replace
737	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0xFFFF);  [CE]  orphaned  default  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote,  0xFFFF);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote,  0xFFFF);	  appendHexJavaScriptRepresentation(sb,    c,    quoted,    0);    	non-compiled	[CE]  orphaned  default	51	None	replace
738	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  outputCharsetEncoder);  [CE]  orphaned  default  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  doublequoteEscape,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  orphaned  default	62	None	replace
739	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    if  (c  >  0x1f  &&  c  <=  0x7f)  {  sb.append(c);  }  else  {          [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  outputCharsetEncoder);  [BUGGY]      }  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  backslashEscape,  singlequoteEscape,  outputCharsetEncoder);	  AppendHexJavaScriptRepresentation(sb,    c,    backslashEscape,    quote);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
