bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <  1;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  <  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  <  1;	  int    singleq    =    0,    doubleq    >    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
2	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  ==  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  ==  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  ==  1;	  int    singleq    =    0,    doubleq    >    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
3	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  >=  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  >=  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  >=  1;	  int    singleq    =    0,    doubleq    >    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
4	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  <  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  <  1);	  int    singleq    =    0,    doubleq    >    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
5	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  {  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  {  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  {  1;	  int    singleq    =    0,    doubleq    >    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
6	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.substring(0,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.substring(0,  outputCharsetEncoder.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.substring(0,  outputCharsetEncoder.length());	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
7	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  2);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  2);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  2);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
8	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  s.length());	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
9	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  4);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  4);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
10	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  3);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  3);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
11	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  >>  0;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  >>  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  >>  0;	  int    singleq    =    0,    doubleq    >=    0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  consumer);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  consumer);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  consumer);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
13	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  context);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  context);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
14	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  true);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  true);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  true);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
15	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  quote);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  quote);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  quote);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
16	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  singlequote);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  singlequote);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  singlequote);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
17	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  this);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  this);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  this);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
18	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  false);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  false);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  false);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
19	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  ==  0;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  ==  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  ==  0;	  int    singleq    =    0,    doubleq    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.length()  +  1;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.length()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.length()  +  1;	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
21	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
22	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  &  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  &  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  &  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
23	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
24	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  |  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  |  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  |  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
25	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  i);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.length());	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.charAt(i));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.charAt(i));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.charAt(i));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.charAt(0));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.doubleValue();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  s.doubleValue();	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.doubleValue();	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.doubleValue();	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.doubleValue()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.doubleValue()  +  1;	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0L  *  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0L  *  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0L  *  outputCharsetEncoder.doubleValue();	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length());	  String    singleq    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
37	[BUG]  [BUGGY]  String  singleq  =  s,  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s,  s.substring(0,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s,  s.substring(0,  s.length());	  String    singleq    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
38	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length();	  String    singleq    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
39	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()).trim();  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()).trim();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()).trim();	  String    singleq    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
40	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  +  3);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  +  3);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  +  3);	  String    singleq    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
41	[BUG]  [BUGGY]  int  singleq  =  s.lastIndexOf(''',  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  s.lastIndexOf(''',  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  s.lastIndexOf(''',  1);	  int    singleq    =    s.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
42	[BUG]  [BUGGY]  int  singleq  =  s.indexOf(''',  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  s.indexOf(''',  outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  s.indexOf(''',  outputCharsetEncoder);	  int    singleq    =    s.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
43	[BUG]  [BUGGY]  int  singleq  =  s.lastIndexOf(''',  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  s.lastIndexOf(''',  outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  s.lastIndexOf(''',  outputCharsetEncoder);	  int    singleq    =    s.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
44	[BUG]  [BUGGY]  doubleq  =  s.lastIndexOf(''');  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  s.lastIndexOf(''');  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  s.lastIndexOf(''');	  int    singleq    =    s.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
45	[BUG]  [BUGGY]  int  singleq  =  s.lastIndexOf(''',  doubleq);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  s.lastIndexOf(''',  doubleq);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  s.lastIndexOf(''',  doubleq);	  int    singleq    =    s.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
46	[BUG]  [BUGGY]  int  singleq  =  s.lastIndexOf(''',  3);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  s.lastIndexOf(''',  3);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  s.lastIndexOf(''',  3);	  int    singleq    =    s.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
47	[BUG]  [BUGGY]  int  singleq  =  s.lastIndexOf(''',  2);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  s.lastIndexOf(''',  2);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  s.lastIndexOf(''',  2);	  int    singleq    =    s.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
48	[BUG]  [BUGGY]  int  singleq  =  1,  doubleq  =  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  1,  doubleq  =  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  1,  doubleq  =  1;	  int    singleq    =    1,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
49	[BUG]  [BUGGY]  doubleq  =  1,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  1,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  1,  doubleq  =  0;	  int    singleq    =    1,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
50	[BUG]  [BUGGY]  char  singleq  =  1,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  1,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  1,  doubleq  =  0;	  int    singleq    =    1,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
51	[BUG]  [BUGGY]  int  singleq  =  1,  doubleq  =  2;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  1,  doubleq  =  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  1,  doubleq  =  2;	  int    singleq    =    1,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
52	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length());	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
53	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(s.length()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(s.length()));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
54	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length()));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
55	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.length()  -  1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
56	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(s.length()  -  1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(s.length()  -  1));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
57	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.lastIndexOf(''',  s.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.lastIndexOf(''',  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.lastIndexOf(''',  s.length());	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
58	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  context.getCurrentContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  context.getCurrentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
59	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.getCurrentContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
60	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createContext(s,  outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createContext(s,  outputCharsetEncoder);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
61	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext(outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.getCurrentContext(outputCharsetEncoder);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
62	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createContext(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
63	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
64	[BUG]  [BUGGY]  String  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(0);	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
65	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0  +  s.charAt(0);	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
66	[BUG]  [BUGGY]  Char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(0);	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
67	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <=  2;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  <=  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  <=  2;	  int    singleq    =    0,    doubleq    <=    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
68	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <=  3;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  <=  3;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  <=  3;	  int    singleq    =    0,    doubleq    <=    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
69	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <=  4;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  <=  4;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  <=  4;	  int    singleq    =    0,    doubleq    <=    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
70	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  1);	  String    singleq    =    s.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
71	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  +  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  +  1);	  String    singleq    =    s.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
72	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  2);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  2);	  String    singleq    =    s.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
73	[BUG]  [BUGGY]  String  singleq  =  outputCharsetEncoder.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  outputCharsetEncoder.substring(0,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  outputCharsetEncoder.substring(0,  s.length());	  String    singleq    =    s.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
74	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  4);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  4);	  String    singleq    =    s.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
75	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
76	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length());	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
77	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
78	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(outputCharsetEncoder.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(outputCharsetEncoder.length());	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
79	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
80	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(outputCharsetEncoder.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(outputCharsetEncoder.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(outputCharsetEncoder.length()  -  1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
81	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  s.doubleValue();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
82	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.doubleValue();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
83	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.intValue();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.intValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.intValue();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
84	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.doubleValue();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
85	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
86	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  0);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
87	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  128);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  128);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  128);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
88	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  2);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  2);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
89	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(s,  0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(s,  0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(s,  0);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
90	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  16);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  16);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  16);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
91	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  /  2;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  /  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  /  2;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
92	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  *  4;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  *  4;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  *  4;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
93	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.length()  /  2;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.length()  /  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.length()  /  2;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
94	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  s.charAt(0);	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
95	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
96	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(0);	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
97	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(0);	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
98	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(i);	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
99	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
100	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
101	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s  +  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s  +  1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
102	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s)+  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s)+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s)+  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
103	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.indexOf(''',  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.indexOf(''',  outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.indexOf(''',  outputCharsetEncoder);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
104	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
105	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  -  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  -  1;	  int    singleq    =    0,    doubleq    =    0,    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
106	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  +  1;	  int    singleq    =    0,    doubleq    =    0,    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
107	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  -  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  -  2;	  int    singleq    =    0,    doubleq    =    0,    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
108	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  *  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length()  *  2;	  int    singleq    =    0,    doubleq    =    0,    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
109	[BUG]  [BUGGY]  doubleq  =  0,  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0,    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
110	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0,  s.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0,  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0,  s.length();	  int    singleq    =    0,    doubleq    =    0,    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
111	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  +  s.charAt(0);	  int    singleq    =    0,    s    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
112	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);	  int    singleq    =    0,    s    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
113	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  1  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  1  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  1  +  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    s    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
114	[BUG]  [BUGGY]  char  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    s    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
115	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.length();	  int    singleq    =    0,    s    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
116	[BUG]  [BUGGY]  int  singleq  =  0,  len  =  0  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  len  =  0  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  len  =  0  +  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    s    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
117	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  2  *  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  2  *  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  2  *  outputCharsetEncoder.charAt(0);	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
118	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  2  *  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  2  *  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  2  *  s.charAt(0);	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
119	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  2  *(outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  2  *(outputCharsetEncoder.charAt(0)));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  2  *(outputCharsetEncoder.charAt(0)));	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
120	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  2  *(outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  2  *(outputCharsetEncoder.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  2  *(outputCharsetEncoder.charAt(0));	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
121	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  i  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  i  +  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  i  +  1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
122	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  i);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
123	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.charAt(i));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.charAt(i));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.charAt(i));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
124	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(s,  i);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(s,  i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(s,  i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
125	[BUG]  [BUGGY]  doubleq  =  0,  s  =  0L;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  s  =  0L;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  s  =  0L;	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
126	[BUG]  [BUGGY]  Doubleq  =  0,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Doubleq  =  0,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Doubleq  =  0,  doubleq  =  0;	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
127	[BUG]  [BUGGY]  doubleq  =  0,  singleq  =  0L;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  singleq  =  0L;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  singleq  =  0L;	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
128	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.charAt(0);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
129	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(s.length()  -  1);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
130	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.charAt(1);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
131	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
132	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getCurrentContext()  +  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getCurrentContext()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputCharsetEncoder.getCurrentContext()  +  1;	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
133	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getContext();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputCharsetEncoder.getContext();	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
134	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.toString();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.toString();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputCharsetEncoder.toString();	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
135	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.nextContext();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.nextContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputCharsetEncoder.nextContext();	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
136	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputEncoder.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputEncoder.getCurrentContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputEncoder.getCurrentContext();	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
137	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getCurrentStructure();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getCurrentStructure();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputCharsetEncoder.getCurrentStructure();	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
138	[BUG]  [BUGGY]  String  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length();	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
139	[BUG]  [BUGGY]  Char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length();	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
140	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  s.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0  +  s.length();	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
141	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.length();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  s.length();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
142	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.length();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
143	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  *  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  *  2;	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
144	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder.charAt(0)!=  ''';  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder.charAt(0)!=  ''';  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder.charAt(0)!=  ''';	  doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
145	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder.charAt(0)  ==  ''';  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder.charAt(0)  ==  ''';  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder.charAt(0)  ==  ''';	  doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
146	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  context);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  context);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
147	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  consumer);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  consumer);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  consumer);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
148	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  quote);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  quote);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
149	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  this);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  this);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  this);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
150	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  singlequote);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  singlequote);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  singlequote);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
151	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  true);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  true);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  true);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
152	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  0);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  0);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
153	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(s.length()  -  1);	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
154	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
155	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  |  s.charAt(0);	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
156	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  &  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  &  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  &  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
157	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  |  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  |  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  |  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
158	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.length());	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
159	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
160	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
161	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  s.charAt(s.length()  -  1));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
162	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.length();	  int    singleq    =    0,    doubleq    =    0    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
163	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.length()  *  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.length()  *  2;	  int    singleq    =    0,    doubleq    =    0    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
164	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  s.length();	  int    singleq    =    0,    doubleq    =    0    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
165	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''')+  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''')+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''')+  1;	  int    singleq    =    0,    doubleq    =    0    +    s.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
166	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.indexOf('''));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.indexOf('''));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.indexOf('''));	  int    singleq    =    0,    doubleq    =    0    +    s.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
167	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.lastIndexOf(''');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.lastIndexOf(''');  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.lastIndexOf(''');	  int    singleq    =    0,    doubleq    =    0    +    s.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
168	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(i);	  int    singleq    =    0,    doubleq    =    0    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
169	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  +  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  +  1);	  String    singleq    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
170	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length())+  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length())+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length())+  1;	  String    singleq    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
171	[BUG]  [BUGGY]  char  singleq  =  s.substring(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  s.substring(0,  s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  s.substring(0,  s.length()  -  1);	  String    singleq    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
172	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  *  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  *  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  *  1);	  String    singleq    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
173	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  false);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder,  false);	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
174	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  true);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder,  true);	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
175	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  doublequote);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  doublequote);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder,  doublequote);	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
176	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  quote);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  quote);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder,  quote);	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
177	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  doubleq);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  doubleq);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder,  doubleq);	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
178	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.NaN);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.NaN);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.NaN);	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
179	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.doubleValue();	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
180	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.doubleValue();	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
181	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length()  -  1);	  String    singleq    =    s.substring(0,    s.length()    -    1,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
182	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length()  +  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length()  +  1);	  String    singleq    =    s.substring(0,    s.length()    -    1,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
183	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  +  1,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  +  1,  outputCharsetEncoder.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  +  1,  outputCharsetEncoder.length());	  String    singleq    =    s.substring(0,    s.length()    -    1,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
184	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length()  -  2);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length()  -  2);	  String    singleq    =    s.substring(0,    s.length()    -    1,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
185	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length())+  1;  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length())+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.length())+  1;	  String    singleq    =    s.substring(0,    s.length()    -    1,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
186	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  s.charAt(0);	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
187	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(s.length()  -  1);	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
188	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
189	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0L  *  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0L  *  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0L  *  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
190	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
191	[BUG]  [BUGGY]  String  singleq  =  0,  doubleq  =  0L;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  0,  doubleq  =  0L;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  0,  doubleq  =  0L;	  char    singleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
192	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0;	  char    singleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
193	[BUG]  [BUGGY]  Char  singleq  =  0,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Char  singleq  =  0,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Char  singleq  =  0,  doubleq  =  0;	  char    singleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
194	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.length()  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.length()  -  1;	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
195	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
196	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
197	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.intValue();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.intValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.intValue();	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.intValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
198	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.intValue();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.intValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.intValue();	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.intValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
199	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.substring(0,  outputCharsetEncoder.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.substring(0,  outputCharsetEncoder.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.substring(0,  outputCharsetEncoder.length()  -  1);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
200	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  s.length()  -  1);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
201	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
202	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
203	[BUG]  [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s.substring(0,  s.length()));	  String    singleq    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
204	[BUG]  [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()  1));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()  1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s.substring(0,  s.length()  1));	  String    singleq    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
205	[BUG]  [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()  +  1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s.substring(0,  s.length()  +  1));	  String    singleq    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
206	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder.substring(0,  s.length()  -  1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder.substring(0,  s.length()  -  1));	  String    singleq    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
207	[BUG]  [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()),  outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s.substring(0,  s.length()),  outputCharsetEncoder);	  String    singleq    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
208	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  s.substring(0,  s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  s.substring(0,  s.length()));	  String    singleq    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
209	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  16  *  s.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  16  *  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  16  *  s.length();	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
210	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  12;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  12;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  12;	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
211	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  19;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  19;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  19;	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
212	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  16  -  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  16  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  16  -  1;	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
213	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  <  0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  <  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  <  0;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
214	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  <=  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  <=  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  <=  1;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
215	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  >=  0;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  >=  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  >=  0;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
216	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  {  0;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  {  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  {  0;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
217	[BUG]  [BUGGY]  doubleq  =  0,  doubleq!=  0;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq!=  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq!=  0;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
218	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1L;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1L;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  1L;	  doubleq    =    0,    doubleq    =    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
219	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  1  +  s.charAt(0);	  doubleq    =    0,    doubleq    =    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
220	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1  +  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  1  +  s.length();	  doubleq    =    0,    doubleq    =    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
221	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
222	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  s.length()  +  1;	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
223	[BUG]  [BUGGY]  doubleq  =  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  s.length();	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
224	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  *  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  s.length()  *  2;	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
225	[BUG]  [BUGGY]  int  singleq  =  0,  s.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s.length();	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
226	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  +  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  s.length()  +  2;	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
227	[BUG]  [BUGGY]  Context  cc  =  Context.createChildContext(s,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildContext(s,  outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildContext(s,  outputCharsetEncoder);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
228	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(outputCharsetEncoder);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
229	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(null,  s);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
230	[BUG]  [BUGGY]  Context  cc  =  Context.createChildArrayContext(s);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildArrayContext(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildArrayContext(s);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
231	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(jsString,  s);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(jsString,  s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(jsString,  s);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
232	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
233	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  s.charAt(i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
234	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
235	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
236	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  s.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  100  +  s.length();	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
237	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  *  s.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  *  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  100  *  s.length();	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
238	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  100  +  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
239	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  -  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  100  -  1;	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
240	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(i)+  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(i)+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(i)+  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''')+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
241	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''')+  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''')+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''')+  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''')+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
242	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')+  2;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')+  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')+  2;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''')+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
243	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')/  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')/  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')/  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''')+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
244	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  0)+  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  0)+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  0)+  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''')+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
245	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')+  1;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')+  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''')+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
246	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(0));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
247	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(0));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
248	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(1));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.charAt(1));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
249	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.indexOf(''',  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.indexOf(''',  outputCharsetEncoder.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.indexOf(''',  outputCharsetEncoder.charAt(0));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
250	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.indexOf(''');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.indexOf(''');  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.indexOf(''');	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
251	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  0);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
252	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
253	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.lastIndexOf(''');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.lastIndexOf(''');  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.lastIndexOf(''');	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
254	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s.charAt(0));	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
255	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s.length());	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
256	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s.charAt(i));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s.charAt(i));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  s.charAt(i));	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
257	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length()  +  1;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length()  +  1;	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
258	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
259	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0L  *  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0L  *  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0L  *  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
260	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length()  +  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length()  +  2;	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
261	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  s.charAt(1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  s.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0  +  s.charAt(1);	  int    singleq    =    0,    doubleq    =    0    +    s.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
262	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  s.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  s.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0  +  s.doubleValue();	  int    singleq    =    0,    doubleq    =    0    +    s.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
263	[BUG]  [BUGGY]  String  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.doubleValue();	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
264	[BUG]  [BUGGY]  Char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.doubleValue();	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
265	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  doublequote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  doublequote);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  doublequote);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
266	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(1,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(1,  outputCharsetEncoder.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(1,  outputCharsetEncoder.length());	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
267	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  0);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
268	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  10);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  10);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  10);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
269	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  i);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''',  i);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
270	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''')+  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''')+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.indexOf(''')+  1;	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
271	[BUG]  [BUGGY]  int  singleq  =  s.indexOf(''');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  s.indexOf(''');  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  s.indexOf(''');	  int    singleq    =    s.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
272	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  /  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  /  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  /  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
273	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.charAt(1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.charAt(1);	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
274	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(1);	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
275	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(outputCharsetEncoder.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(outputCharsetEncoder.length()));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
276	[BUG]  [BUGGY]  doubleq  =  0  +  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0  +  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0  +  outputCharsetEncoder.doubleValue();	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
277	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  getCurrentContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  getCurrentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
278	[BUG]  [BUGGY]  Context  cc  =  Context.current();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.current();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.current();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
279	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  -  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.length()  -  2;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
280	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.charAt(1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.charAt(1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.charAt(1));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
281	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
282	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  4;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  4;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  4;	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
283	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  3;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  3;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  3;	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
284	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.charAt(1);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
285	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  /  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  /  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  /  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
286	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  %  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  %  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  %  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
287	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  -  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
288	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  /  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  /  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  /  outputCharsetEncoder.doubleValue();	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
289	[BUG]  [BUGGY]  doubleq  =  0  *  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0  *  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0  *  outputCharsetEncoder.doubleValue();	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
290	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder.substring(0,  s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder.substring(0,  s.length()));	  String    singleq    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
291	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  ==  2;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  ==  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  ==  2;	  int    singleq    =    0,    doubleq    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
292	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(outputCharsetEncoder,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(outputCharsetEncoder,  s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(outputCharsetEncoder,  s);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
293	[BUG]  [BUGGY]  Context  cc  =  Context.createChildStringContext(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildStringContext(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildStringContext(s);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
294	[BUG]  [BUGGY]  doubleq  =  0  +  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0  +  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0  +  outputCharsetEncoder.length();	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
295	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.POSITIVE_INFINITY);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.POSITIVE_INFINITY);	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
296	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.NEGATIVE_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.NEGATIVE_INIT_CLAUSE);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.NEGATIVE_INIT_CLAUSE);	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
297	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  doubleQueue);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  doubleQueue);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder,  doubleQueue);	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
298	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getCurrentSegment();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getCurrentSegment();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputCharsetEncoder.getCurrentSegment();	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
299	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getSingleContinueContext();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getSingleContinueContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputCharsetEncoder.getSingleContinueContext();	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
300	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getCurrentSegmentContext();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getCurrentSegmentContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputCharsetEncoder.getCurrentSegmentContext();	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
301	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  i)+  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  i)+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  i)+  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''')+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
302	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.charAt(s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.charAt(s.length()  -  1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s.charAt(s.length()  -  1));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
303	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(2);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(2);	  int    singleq    =    0,    doubleq    =    0    +    s.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
304	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  false);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  false);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
305	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  doublequote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  doublequote);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  doublequote);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
306	[BUG]  [BUGGY]  String  singleq  =  outputCharsetEncoder.substring(0,  s.length()  -  1,  s.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  outputCharsetEncoder.substring(0,  s.length()  -  1,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  outputCharsetEncoder.substring(0,  s.length()  -  1,  s.length());	  String    singleq    =    s.substring(0,    s.length()    -    1,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
307	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  i)-  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  i)-  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  i)-  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
308	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(s.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.charAt(s.length());	  int    singleq    =    0,    s    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
309	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  100  +  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
310	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  *  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  *  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  100  *  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
311	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length());	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
312	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length())+  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length())+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length())+  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
313	[BUG]  [BUGGY]  doubleq  =  1,  doubleq  =  0  +  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  1,  doubleq  =  0  +  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  1,  doubleq  =  0  +  outputCharsetEncoder.doubleValue();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
314	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputEncoder.doubleValue();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
315	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	char  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0,    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
316	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0L  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0L  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0L  +  outputCharsetEncoder.charAt(0);	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
317	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder.isSingleQuotedString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder.isSingleQuotedString();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder.isSingleQuotedString();	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
318	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder!=  null;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder!=  null;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  ||  outputCharsetEncoder!=  null;	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
319	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  1  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);	  doubleq    =    0,    doubleq    =    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
320	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s)-  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s)-  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s)-  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
321	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
322	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s).length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s).length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''',  s).length();	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
323	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length(1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.length(1);	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
324	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(i);	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
325	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()));	  String    singleq    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
326	[BUG]  [BUGGY]  String  singleq  =  s.substring0(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring0(0,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring0(0,  s.length());	  String    singleq    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
327	[BUG]  [BUGGY]  String  singularq  =  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singularq  =  s.substring(0,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singularq  =  s.substring(0,  s.length());	  String    singleq    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
328	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(1);	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
329	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(0,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(0,  outputCharsetEncoder.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(0,  outputCharsetEncoder.length());	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
330	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''');  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''');	  doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
331	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')-  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')-  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.indexOf(''')-  1;	  doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
332	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0,  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0,  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0,  outputCharsetEncoder.charAt(0);	  doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
333	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(outputCharsetEncoder.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(outputCharsetEncoder.length());	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
334	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  17;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  17;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  17;	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
335	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  16  +  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  16  +  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  16  +  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
336	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  16  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  16  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  16  +  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
337	[BUG]  [BUGGY]  int  singleq  =  2,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  2,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  2,  doubleq  =  0;	  int    singleq    =    1,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
338	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.longValue();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.longValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.longValue();	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.intValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
339	[BUG]  [BUGGY]  int  singleq  =  0,  singleq  ==  0;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  singleq  ==  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  singleq  ==  0;	  int    singleq    =    0,    doubleq!=    0;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
340	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  >>  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  >>  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  >>  1;	  int    singleq    =    0,    doubleq!=    0;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
341	[BUG]  [BUGGY]  int  singleq  =  s.lastIndexOf(''',  16);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  s.lastIndexOf(''',  16);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  s.lastIndexOf(''',  16);	  int    singleq    =    s.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
342	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  s.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  |  s.length();	  int    singleq    =    0,    doubleq    =    0    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
343	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  -  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  -  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  -  s.charAt(0);	  int    singleq    =    0,    doubleq    =    0    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
344	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.indexOf(''',  i);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.indexOf(''',  i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  +  outputCharsetEncoder.indexOf(''',  i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
345	[BUG]  [BUGGY]  int  singleq  =  0,  i  =  0  +  outputCharsetEncoder.indexOf(''',  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  i  =  0  +  outputCharsetEncoder.indexOf(''',  outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  i  =  0  +  outputCharsetEncoder.indexOf(''',  outputCharsetEncoder);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
346	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  i);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
347	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  10;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  10;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  10;	  doubleq    =    0,    doubleq    =    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
348	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  16;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  16;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  16;	  doubleq    =    0,    doubleq    =    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
349	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  s);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
350	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  charQuote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  charQuote);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildObjectContext(s,  outputCharsetEncoder,  charQuote);	  Context    cc    =    Context.createChildObjectContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
351	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.indexOf('''));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.indexOf('''));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.lastIndexOf(''',  s.indexOf('''));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.lastIndexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
352	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
353	[BUG]  [BUGGY]  doubleq  =  1,  doubleq  =  0  +  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  1,  doubleq  =  0  +  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  1,  doubleq  =  0  +  outputCharsetEncoder.length();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
354	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0,  outputCharsetEncoder.length();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
355	[BUG]  [BUGGY]  Charset  singleq  =  0,  doubleq  =  0  +  s.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Charset  singleq  =  0,  doubleq  =  0  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Charset  singleq  =  0,  doubleq  =  0  +  s.length();	  char    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
356	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.charAt(0));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
357	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  s.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  s.charAt(0));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
358	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.charAt(0)));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.charAt(0)));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
359	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  s.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  s.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  |  s.doubleValue();	  int    singleq    =    0,    doubleq    =    0    +    s.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
360	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.charAt(1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
361	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.indexOf(''');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.indexOf(''');  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.indexOf(''');	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
362	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.indexOf(''');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.indexOf(''');  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  *  outputCharsetEncoder.indexOf(''');	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
363	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  20;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  20;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  20;	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
364	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
365	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.charAt(i);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
366	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  |  outputCharsetEncoder.charAt(0);	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
367	[BUG]  [BUGGY]  doubleq  =  1,  doubleq  =  0  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  1,  doubleq  =  0  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  1,  doubleq  =  0  +  outputCharsetEncoder.charAt(0);	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
368	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
369	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0x00  *  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0x00  *  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0x00  *  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
370	[BUG]  [BUGGY]  Context  cc  =  Context.createChildOrientationContext(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createChildOrientationContext(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createChildOrientationContext(s);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
371	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.POSITIVE_INIT_CLAUSE);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.POSITIVE_INIT_CLAUSE);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder,  Double.POSITIVE_INIT_CLAUSE);	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
372	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  jsString(s,  outputCharsetEncoder.toUpperCase());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  jsString(s,  outputCharsetEncoder.toUpperCase());	  String    singleq    =    jsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
373	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  1;	  doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
374	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.substring(0,  outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.substring(0,  outputCharsetEncoder.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.substring(0,  outputCharsetEncoder.length()));	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.substring(0,    outputCharsetEncoder.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
375	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  -  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  s.length()  -  1;	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
376	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.indexOf('')+  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.indexOf('')+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  s.indexOf('')+  1;	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
377	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  *  10  +  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  *  10  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  s.length()  *  10  +  s.length();	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
378	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  1);	  String    singleq    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
379	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  s.charAt(1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  |  s.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  |  s.charAt(1);	  int    singleq    =    0,    doubleq    =    0    +    s.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
380	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  -  s.charAt(1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  -  s.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  -  s.charAt(1);	  int    singleq    =    0,    doubleq    =    0    +    s.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
381	[BUG]  [BUGGY]  String  singleq  =  s.substring(1,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(1,  outputCharsetEncoder.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(1,  outputCharsetEncoder.length());	  String    singleq    =    s.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
382	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  3);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  outputCharsetEncoder.length()  -  3);	  String    singleq    =    s.substring(0,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
383	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.charAt(1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  s.charAt(1);	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
384	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0x00  *  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0x00  *  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0x00  *  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
385	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.charAt(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.charAt(0,  s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  s.charAt(0,  s.length()  -  1);	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
386	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  s.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  -  1,  s.length());	  String    singleq    =    s.substring(0,    s.length()    -    1,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
387	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	String  singleq  =  s.substring(0,  s.length()  -  1,  outputCharsetEncoder.charAt(0));	  String    singleq    =    s.substring(0,    s.length()    -    1,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
388	[BUG]  [BUGGY]  int  singleq  =  0,  singleq  <=  0;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  singleq  <=  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  singleq  <=  0;	  int    singleq    =    0,    doubleq    <    0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
389	[BUG]  [BUGGY]  int  singleq  =  0,  s.length  <  0;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s.length  <  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s.length  <  0;	  int    singleq    =    0,    doubleq    <    0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
390	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  0);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
391	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.indexOf(''',  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.indexOf(''',  0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  *  outputCharsetEncoder.indexOf(''',  0);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
392	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length()));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
393	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  s);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
394	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  outputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  outputCharsetEncoder);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
395	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  inputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  inputCharsetEncoder);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.createCurrentContext(s,  outputCharsetEncoder,  inputCharsetEncoder);	  Context    cc    =    Context.createCurrentContext(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
396	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0,  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0,    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
397	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1,  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1,  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1,  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0,    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
398	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0,  singleq  =  0;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0,  singleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0,  singleq  =  0;	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
399	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0,  doubleq  =  0;	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
400	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0x7F;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0x7F;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0x7F;	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
401	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
402	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0x7F  |  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0x7F  |  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0x7F  |  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
403	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0x20  |  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0x20  |  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0x20  |  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    0    |    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
404	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  /  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  /  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  /  outputCharsetEncoder.doubleValue();	  int    singleq    =    0,    doubleq    =    0    *    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
405	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1)+  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1)+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1)+  1;	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''')+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
406	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0  +  s.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0  +  s.length();	  int    singleq    =    0,    s    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
407	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0x7F  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s  =  0x7F  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s  =  0x7F  +  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    s    =    0    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
408	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getInputContext();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.getInputContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputCharsetEncoder.getInputContext();	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
409	[BUG]  [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.encode(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  case  ''':  s  =  outputCharsetEncoder.encode(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  case  ''':  s  =  outputCharsetEncoder.encode(s);	  Context    case    ''':    s    =    outputCharsetEncoder.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
410	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(s.length());	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
411	[BUG]  [BUGGY]  int  singleq  =  0,  sq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  sq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  sq  =  0  +  outputCharsetEncoder.charAt(s.length()  -  1);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.charAt(s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
412	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.computeValue(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.computeValue(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.computeValue(s);	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.intValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
413	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.longValue();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.longValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.longValue();	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.intValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
414	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
415	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	Context  cc  =  Context.currentTimeMillis();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
416	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  *  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  *  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  100  *  s.charAt(0);	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
417	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  100  +  1;	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
418	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  inputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  inputCharsetEncoder.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  inputCharsetEncoder.length();	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
419	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length());	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
420	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length());	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
421	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  outputCharsetEncoder.indexOf(''',  outputCharsetEncoder.indexOf(''',  s.length()));	  int    singleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.indexOf(''',    s.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
422	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  100;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  100;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  100;	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
423	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  >  0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  >  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  >  0;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
424	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  s.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.indexOf(''',  s.length());	  int    singleq    =    0,    doubleq    =    0    +    s.indexOf(''');    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
425	[BUG]  [BUGGY]  int  singleq  =  0,  s.length()  {  0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  s.length()  {  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  s.length()  {  0;	  int    singleq    =    0,    doubleq    {    0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
426	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.doubleValue();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.doubleValue();	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
427	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.toUpperCase();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	doubleq  =  0,  doubleq  =  0  +  outputCharsetEncoder.toUpperCase();	  doubleq    =    0,    doubleq    =    0    +    outputCharsetEncoder.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
428	[BUG]  [BUGGY]  int  singleq  =  0,  singleq  >  0;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  singleq  >  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  singleq  >  0;	  int    singleq    =    0,    doubleq    >=    0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
429	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  1  -  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
430	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	int  singleq  =  0,  doubleq  =  2  +  outputCharsetEncoder.charAt(0);	  int    singleq    =    0,    doubleq    =    1    +    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
