bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(c);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append(c);  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append(c);	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2	[BUG]  [BUGGY]  sb.append('n');  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append('n');  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append('n');	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
3	[BUG]  [BUGGY]  sb.append('ufffd');  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append('ufffd');  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append('ufffd');	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
4	[BUG]  [BUGGY]  sb.append( ", ");  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append( ", ");  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append( ", ");	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
5	[BUG]  [BUGGY]  sb.append( "n ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append( "n ");  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append( "n ");	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
6	[BUG]  [BUGGY]  sb.append(',');  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append(',');  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append(',');	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
7	[BUG]  [BUGGY]  sb.append( ";n ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append( ";n ");  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append( ";n ");	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]    [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	  	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
9	[BUG]  [BUGGY]  sb.append(doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append(doublequoteEscape);  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append(doublequoteEscape);	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
10	[BUG]  [BUGGY]  sb.append(singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append(singlequoteEscape);  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append(singlequoteEscape);	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
11	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append(Character.toLowerCase(c));  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append(Character.toLowerCase(c));	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
12	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c));  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append(Character.toUpperCase(c));  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append(Character.toUpperCase(c));	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
13	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  [BUGGY]  sb.append(Character.toLowerCase(c),  quote);  [BUGGY]  return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	sb.append(Character.toLowerCase(c),  quote);	sb.append(quote);  	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
