bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  For(int  i  =  0;  i  <  s.length();  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	For(int  i  =  0;  i  <  s.length();  i++)  {	  for(int    i    =    0;    i    <    s.length()    *    2;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.length(0);  i++)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0;  i  <  s.length(0);  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0;  i  <  s.length(0);  i++)  {	  for(int    i    =    0;    i    <    s.charAt(0);    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.length(1);  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0;  i  <  s.length(1);  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0;  i  <  s.length(1);  i++)  {	  for(int    i    =    0;    i    <    s.charAt(0);    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.charAt(0);  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  1;  i  <  s.charAt(0);  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  1;  i  <  s.charAt(0);  i++)  {	  for(int    i    =    0;    i    <    s.charAt(0);    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.length(2);  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0;  i  <  s.length(2);  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0;  i  <  s.length(2);  i++)  {	  for(int    i    =    0;    i    <    s.charAt(0);    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  len;  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0,  len  =  s.length();  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    s.length()    -    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size()  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0;  i  <  s.size()  +  1;  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0;  i  <  s.size()  +  1;  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size()  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0;  i  <  s.size()  -  1;  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0;  i  <  s.size()  -  1;  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  1;  i  <  s.size();  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  1;  i  <  s.size();  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  len;  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0,  len  =  s.size();  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size();  i  +=  2)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0;  i  <  s.size();  i  +=  2)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0;  i  <  s.size();  i  +=  2)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.length()  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  1;  i  <  s.length()  +  1;  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  1;  i  <  s.length()  +  1;  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  2;  i  <  s.length();  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  2;  i  <  s.length();  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.length()  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  1;  i  <  s.length()  -  1;  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  1;  i  <  s.length()  -  1;  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.length()  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  1;  i  <  s.length()  +  2;  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  1;  i  <  s.length()  +  2;  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  String  quote  =  jsString(s,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  String  quote  =  jsString(s,  outputCharsetEncoder);  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	String  quote  =  jsString(s,  outputCharsetEncoder);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  char  quote  =  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  char  quote  =  s.charAt(i);  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	char  quote  =  s.charAt(i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  Context  cc  =  Context.getCurrentContext();  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	Context  cc  =  Context.getCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  CharsetEncoder  consumer  =  outputCharsetEncoder.getContext();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  CharsetEncoder  consumer  =  outputCharsetEncoder.getContext();  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	CharsetEncoder  consumer  =  outputCharsetEncoder.getContext();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  s  =  s.trim();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  s  =  s.trim();  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	s  =  s.trim();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  String  quote  =  s.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  String  quote  =  s.substring(0,  i);  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	String  quote  =  s.substring(0,  i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  String  quote  =  s.substring(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  String  quote  =  s.substring(0,  s.length()  -  1);  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	String  quote  =  s.substring(0,  s.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  s.length();  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0,  len  =  s.length();  i  <  s.length();  i++)  {	  for(int    i    =    0;    i    <    s.length()    +    2;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  FOR(int  i  =  0;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  FOR(int  i  =  0;  i  <  s.length();  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	FOR(int  i  =  0;  i  <  s.length();  i++)  {	  for(int    i    =    0;    i    <    s.length()    +    2;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  3;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  3;  i  <  s.length();  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  3;  i  <  s.length();  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  outputCharsetEncoder.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0;  i  <  outputCharsetEncoder.length();  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0;  i  <  outputCharsetEncoder.length();  i++)  {	  for(int    i    =    0;    i    <    s.length()    *    2;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0;  i  <  s.length;  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0;  i  <  s.length;  i++)  {	  for(int    i    =    0;    i    <    s.charAt(0);    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  int  singleq  =  s.indexOf(''');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  int  singleq  =  s.indexOf(''');  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	int  singleq  =  s.indexOf(''');	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  int  singleq  =  s.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  int  singleq  =  s.length();  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	int  singleq  =  s.length();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  s  =  outputCharsetEncoder.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  s  =  outputCharsetEncoder.toString();  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	s  =  outputCharsetEncoder.toString();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  str.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0;  i  <  str.length();  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0;  i  <  str.length();  i++)  {	  for(int    i    =    0;    i    <    s.length()    -    2;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  it  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  for(int  i  =  0;  it  <  s.length();  i++)  {  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	for(int  i  =  0;  it  <  s.length();  i++)  {	  for(int    i    =    0;    i    <    s.length()    +    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  char  quote  =  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  char  quote  =  s.charAt(0);  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	char  quote  =  s.charAt(0);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    static  String  jsString(String  s,  CharsetEncoder  outputCharsetEncoder)  {  int  singleq  =  0,  doubleq  =  0;      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s);  [BUGGY]    switch  (s.charAt(i))  {  case  '   "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  char  quote;  if  (singleq  <  doubleq)  {  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(s);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
