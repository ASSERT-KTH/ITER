bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length())));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length())));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  1));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0)));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.charAt(0));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  1));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  2));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  2));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  2));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  -  1));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  -  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  +  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  +  1);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.length());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  +  2);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  +  2);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  2);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  2);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.length());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.length());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  String  quote  =  s.substring(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  String  quote  =  s.substring(0,  s.length()  -  1);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	String  quote  =  s.substring(0,  s.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  sb.append( "n ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  sb.append( "n ");  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	sb.append( "n ");	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  String  quote  =  outputCharsetEncoder.toString();  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	String  quote  =  outputCharsetEncoder.toString();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  String  quote  =  s.substring(0,  s.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  String  quote  =  s.substring(0,  s.length()  -  2);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	String  quote  =  s.substring(0,  s.length()  -  2);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  String  quote  =  outputCharsetEncoder.charAt(0);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	String  quote  =  outputCharsetEncoder.charAt(0);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  String  quote  =  outputCharsetEncoder.charAt(i);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	String  quote  =  outputCharsetEncoder.charAt(i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0)));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0)));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length())));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length())));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  1));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
38	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT,  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT,  quote);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT,  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT  +  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT  +  quote);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT  +  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toString());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
44	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  4);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  4);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  4);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  3);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  3);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  3);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
48	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.length());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.length());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1;  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1;	  StringBuilder    sb    =    new    StringBuilder(s.length();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2;  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2;	  StringBuilder    sb    =    new    StringBuilder(s.length();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  quote);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  quote);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  outputCharsetEncoder));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  quote));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  quote));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  -  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  -  1);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  -  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
58	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuffer  sb  =  new  StringBuffer();  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuffer  sb  =  new  StringBuffer();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
59	[BUG]  [BUGGY]  char  quote  =  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  char  quote  =  outputCharsetEncoder.charAt(0);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	char  quote  =  outputCharsetEncoder.charAt(0);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
60	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
61	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
63	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
64	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
65	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2;  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  2;	  StringBuilder    sb    =    new    StringBuilder(s.length();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(strquoteEscape));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(strquoteEscape));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(strquoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
67	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
68	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(strEscape));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(strEscape));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(strEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
69	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.length()));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.length()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
73	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
74	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
75	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
76	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
78	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.length()));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.length()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
79	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.length()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
80	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
81	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeStandardEscape());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeStandardEscape());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeStandardEscape());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
82	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.startStandardEscape());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.startStandardEscape());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.startStandardEscape());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
83	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT,  outputCharsetEncoder);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT,  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(128);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(128);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(128);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
85	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s);  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(s);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
87	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length())));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length())));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
88	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
89	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
90	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(standardEscape.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(standardEscape.encode(outputCharsetEncoder));  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(standardEscape.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
91	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
92	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  out.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  out.length());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  out.length());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
93	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.computeValue());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.computeValue());  [BUGGY]    sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.computeValue());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
