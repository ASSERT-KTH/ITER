bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c!=  '0'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  if(c!=  '0'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	if(c!=  '0'  ||  c  ==  'n'  ||  c  ==  't')  {	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
2	[BUG]  [BUGGY]  if(c!=  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  if(c!=  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	if(c!=  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
3	[BUG]  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  't')  {	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
4	[BUG]  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
5	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
6	[BUG]  [BUGGY]  if(c!=  '0'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  if(c!=  '0'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	if(c!=  '0'  ||  c  ==  'n'  ||  c  ==  'r')  {	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]    [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	  	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
8	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(c);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(c);  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(c);	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
9	[BUG]  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r')  {	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
10	[BUG]  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'n')  {	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
11	[BUG]  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
12	[BUG]  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	if(c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
13	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]  case  '\0':  sb.append( "\\0 ");  break;  case  '\n':  sb.append( "\\n ");  break;  case  '\r':  sb.append( "\\r ");  break;  case  '\t':  sb.append( "\\t ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\ "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  if  (i  >=  2  &&  ((s.charAt(i  -  1)  ==  '-'  &&  s.charAt(i  -  2)  ==  '-')  ||  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	switch  (c)  {  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
