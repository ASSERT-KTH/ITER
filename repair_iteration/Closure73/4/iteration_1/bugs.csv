bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c);  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	appendHexJavaScriptRepresentation(sb,  c);	}  	non-compiled	[CE]  	7	None	replace
2	[BUG]  [BUGGY]  sb.append(c);  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  sb.append(c);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	sb.append(c);	}  	non-compiled	[CE]  	7	None	replace
3	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb);  [CE]  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	appendHexJavaScriptRepresentation(c,  sb);	}  	non-compiled	[CE]  	7	None	replace
4	[BUG]  [BUGGY]  appendBooleanRepresentation(sb,  c);  [CE]  [FE]          ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  appendBooleanRepresentation(sb,  c);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	appendBooleanRepresentation(sb,  c);	}  	non-compiled	[CE]  	7	None	replace
5	[BUG]  [BUGGY]  System.err.println( "JavaScriptRepresentation  error: "  +  c);  [CE]  [FE]            ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  System.err.println( "JavaScriptRepresentation  error: "  +  c);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	System.err.println( "JavaScriptRepresentation  error: "  +  c);	}  	non-compiled	[CE]  	7	None	replace
6	[BUG]  [BUGGY]  System.err.println( "JavaScriptRepresentation  ' "  +  c  + "'  is  not  supported. ");  [CE]  [FE]              ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  System.err.println( "JavaScriptRepresentation  ' "  +  c  + "'  is  not  supported. ");  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	System.err.println( "JavaScriptRepresentation  ' "  +  c  + "'  is  not  supported. ");	}  	non-compiled	[CE]  	7	None	replace
7	[BUG]  [BUGGY]  System.err.println( "JavaScriptRepresentation  Exception: "  +  c);  [CE]  [FE]                ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  System.err.println( "JavaScriptRepresentation  Exception: "  +  c);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	System.err.println( "JavaScriptRepresentation  Exception: "  +  c);	}  	non-compiled	[CE]  	7	None	replace
8	[BUG]  [BUGGY]    [CE]  [FE]                  ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]    [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	  	}  	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  sb.append('n');  }  else  {  sb.append('n');  }  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  sb.append('n');  }  else  {  sb.append('n');  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  sb.append('n');  }  else  {  sb.append('n');  }	}  	non-compiled	[CE]  	7	None	replace
10	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  sb.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  sb.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  sb.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  	7	None	replace
11	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  sb.append('n');  }  [CE]  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  sb.append('n');  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  sb.append('n');  }	}  	non-compiled	[CE]  	7	None	replace
12	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  sb,  c);  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  sb,  c);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  sb,  c);	}  	non-compiled	[CE]  	7	None	replace
13	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  c);  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  c);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  c);	}  	non-compiled	[CE]  	7	None	replace
14	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  c,  consumer);  [CE]  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  c,  consumer);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  c,  consumer);	}  	non-compiled	[CE]  	7	None	replace
15	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  rhsContext.appendHexJavaScriptRepresentation(c,  sb);  [CE]  [FE]          ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  rhsContext.appendHexJavaScriptRepresentation(c,  sb);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	Context  rhsContext  =  Context.getCurrentContext();  rhsContext.appendHexJavaScriptRepresentation(c,  sb);	}  	non-compiled	[CE]  	7	None	replace
16	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  rhsContext.appendHexJavaScriptRepresentation(rhsContext,  c);  [CE]  [FE]            ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  rhsContext.appendHexJavaScriptRepresentation(rhsContext,  c);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	Context  rhsContext  =  Context.getCurrentContext();  rhsContext.appendHexJavaScriptRepresentation(rhsContext,  c);	}  	non-compiled	[CE]  	7	None	replace
17	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  c,  sb);  [CE]  [FE]              ComparisonFailure  [CONTEXT]  private  static  void  appendHexJavaScriptRepresentation(  StringBuilder  sb,  char  c)  {  try  {  appendHexJavaScriptRepresentation(c,  sb);  }  catch  (IOException  ex)  {  throw  new  RuntimeException(ex);  }  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  c,  sb);  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  appendHexJavaScriptRepresentation  [RETURN_TYPE]  void  StringBuilder  sb  char  c  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	Context  rhsContext  =  Context.getCurrentContext();  appendHexJavaScriptRepresentation(rhsContext,  c,  sb);	}  	non-compiled	[CE]  	7	None	replace
