bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append( "n ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  sb.append( "n ");  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "n ");	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  int  i  =  s.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  int  i  =  s.length();  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  s.length();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length()  +  2);  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuffer  sb  =  new  StringBuffer(s.length()  +  2);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  sb.append( "t ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  sb.append( "t ");  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "t ");	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length()  +  1);  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuffer  sb  =  new  StringBuffer(s.length()  +  1);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.length()  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  1;  i  <  s.length()  +  2;  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1;  i  <  s.length()  +  2;  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  2;  i  <  s.length();  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  2;  i  <  s.length();  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  len;  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.length();  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.length()  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  1;  i  <  s.length()  +  1;  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1;  i  <  s.length()  +  1;  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.length()  +  4;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  1;  i  <  s.length()  +  4;  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1;  i  <  s.length()  +  4;  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  For(int  i  =  0;  i  <  s.length();  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	For(int  i  =  0;  i  <  s.length();  i++)  {	  for(int    i    =    0;    i    <    s.length()    *    2;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0,  s.length();  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  0,  s.length();  i  <  s.length();  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  s.length();  i  <  s.length();  i++)  {	  for(int    i    =    0;    i    <    s.length()    +    3;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  SHORT_SIZE;  i++)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  0;  i  <  SHORT_SIZE;  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  SHORT_SIZE;  i++)  {	  for(int    i    =    0;    i    <    s.length()    +    2;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size()  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  0;  i  <  s.size()  +  1;  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.size()  +  1;  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size()  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  0;  i  <  s.size()  +  2;  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.size()  +  2;  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  1;  i  <  s.size();  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1;  i  <  s.size();  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  len;  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.size();  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size();  i  +=  2)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  0;  i  <  s.size();  i  +=  2)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.size();  i  +=  2)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  3;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  3;  i  <  s.length();  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  3;  i  <  s.length();  i++)  {	  for(int    i    =    1;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  strEscape.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  0;  i  <  strEscape.size();  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  strEscape.size();  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  strEscape.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  0;  i  <  strEscape.length();  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  strEscape.length();  i++)  {	  for(int    i    =    0;    i    <    s.length()    +    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  int  i  =  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  int  i  =  outputCharsetEncoder.length();  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  outputCharsetEncoder.length();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  sb.append('n');  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  sb.append('n');  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append('n');	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  sb.append( "u ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  sb.append( "u ");  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "u ");	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  String  c  =  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  String  c  =  s.charAt(i);  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	String  c  =  s.charAt(i);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  FOR(int  i  =  0;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  FOR(int  i  =  0;  i  <  s.length();  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	FOR(int  i  =  0;  i  <  s.length();  i++)  {	  for(int    i    =    0;    i    <    s.length()    +    2;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s);  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(s);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size()  *  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  0;  i  <  s.size()  *  2;  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.size()  *  2;  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  s.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);    [BUGGY]  for(int  i  =  2;  i  <  s.size();  i++)  {  [BUGGY]    char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(   "\\0   ");  break;  case  '\n':  sb.append(   "\\n   ");  break;  case  '\r':  sb.append(   "\\r   ");  break;  case  '\t':  sb.append(   "\\t   ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\   "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  2;  i  <  s.size();  i++)  {	  for(int    i    =    0;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
