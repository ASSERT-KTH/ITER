bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.backslashEscape.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  this.backslashEscape.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  this.backslashEscape.size();  i++)  {	  for(int    i    =    0;    i    <    strEscape.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.strEscape.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  this.strEscape.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  this.strEscape.size();  i++)  {	  for(int    i    =    0;    i    <    strEscape.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  strEscape.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  1;  i  <  strEscape.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1;  i  <  strEscape.size();  i++)  {	  for(int    i    =    0;    i    <    strEscape.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  HEX_CHARS.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  HEX_CHARS.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  HEX_CHARS.size();  i++)  {	  for(int    i    =    0;    i    <    strEscape.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  4;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  4;  i  <  s.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  4;  i  <  s.length();  i++)  {	  for(int    i    =    3;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  s.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  For(int  i  =  0;  i  <  s.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	For(int  i  =  0;  i  <  s.size();  i++)  {	  for(int    i    =    0;    i    <    s.size()    +    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size();  i  +=  1)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  s.size();  i  +=  1)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.size();  i  +=  1)  {	  for(int    i    =    0;    i    <    s.size();    i    +=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.length();  i  +=  2)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  s.length();  i  +=  2)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.length();  i  +=  2)  {	  for(int    i    =    0;    i    <    s.size();    i    +=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size();  i  -=  2)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  s.size();  i  -=  2)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.size();  i  -=  2)  {	  for(int    i    =    0;    i    <    s.size();    i    +=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size()  +  2;  i  +=  2)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  s.size()  +  2;  i  +=  2)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.size()  +  2;  i  +=  2)  {	  for(int    i    =    0;    i    <    s.size();    i    +=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.size();  i  +=  2)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  1;  i  <  s.size();  i  +=  2)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1;  i  <  s.size();  i  +=  2)  {	  for(int    i    =    0;    i    <    s.size();    i    +=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
12	[BUG]  [BUGGY]  sb.append( "n ".charAt(i));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( "n ".charAt(i));  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "n ".charAt(i));	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( ",n ");  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( ",n ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  sb.append( "n ".trim());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( "n ".trim());  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "n ".trim());	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  sb.append( "t ".charAt(i));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( "t ".charAt(i));  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "t ".charAt(i));	  sb.append(   "t   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  sb.append('t');  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append('t');  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append('t');	  sb.append(   "t   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  sb.append( "t ".getBytes());  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( "t ".getBytes());  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "t ".getBytes());	  sb.append(   "t   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  sb.append( "t');  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( "t');  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "t');	  sb.append(   "t   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0,  is.length();  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  is.length();  i  <  s.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  is.length();  i  <  s.length();  i++)  {	  for(int    i    =    0,    s.length();    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  s.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.length();  i  <  s.length();  i++)  {	  for(int    i    =    0,    s.length();    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0,  s.length();  i  <  s.length()  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  s.length();  i  <  s.length()  +  1;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  s.length();  i  <  s.length()  +  1;  i++)  {	  for(int    i    =    0,    s.length();    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0,  s.length();  i  <  s.length()  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  s.length();  i  <  s.length()  +  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  s.length();  i  <  s.length()  +  2;  i++)  {	  for(int    i    =    0,    s.length();    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0,  hashCode;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  hashCode;  i  <  s.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  hashCode;  i  <  s.length();  i++)  {	  for(int    i    =    0,    s.length();    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
24	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()).append('n');  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()).append('n');  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()).append('n');	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length();  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length();	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()).append( "n ");  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()).append( "n ");  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()).append( "n ");	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  sb.append( "u00 ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( "u00 ");  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "u00 ");	  sb.append(   "u   ");    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
29	[BUG]  [BUGGY]  sb.append( "u000 ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( "u000 ");  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "u000 ");	  sb.append(   "u   ");    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
30	[BUG]  [BUGGY]  sb.append( "u0 ");  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( "u0 ");  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "u0 ");	  sb.append(   "u   ");    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
31	[BUG]  [BUGGY]  sb.append( "u00e8 ");  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( "u00e8 ");  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "u00e8 ");	  sb.append(   "u   ");    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
32	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  s.length()  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  For(int  i  =  0;  i  <  s.length()  +  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	For(int  i  =  0;  i  <  s.length()  +  2;  i++)  {	  For(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  s.length()  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  For(int  i  =  0;  i  <  s.length()  +  1;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	For(int  i  =  0;  i  <  s.length()  +  1;  i++)  {	  For(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  For(int  i  =  1;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  For(int  i  =  1;  i  <  s.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	For(int  i  =  1;  i  <  s.length();  i++)  {	  For(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
35	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  s.length()  +  4;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  For(int  i  =  0;  i  <  s.length()  +  4;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	For(int  i  =  0;  i  <  s.length()  +  4;  i++)  {	  For(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  s.length()  +  3;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  For(int  i  =  0;  i  <  s.length()  +  3;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	For(int  i  =  0;  i  <  s.length()  +  3;  i++)  {	  For(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  s.length()  -  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  For(int  i  =  0;  i  <  s.length()  -  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	For(int  i  =  0;  i  <  s.length()  -  2;  i++)  {	  For(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  s.length()  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  For(int  i  =  0;  i  <  s.length()  -  1;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	For(int  i  =  0;  i  <  s.length()  -  1;  i++)  {	  For(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()));  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()));  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()));  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.toString(s.length()));  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.toString(s.length()));  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.toString(s.length()));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length());  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuffer  sb  =  new  StringBuffer(s.length());	  StringBuffer    sb    =    new    StringBuffer(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuffer(s.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuffer(s.length());  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuffer(s.length());	  StringBuffer    sb    =    new    StringBuffer(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length();  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuffer  sb  =  new  StringBuffer(s.length();	  StringBuffer    sb    =    new    StringBuffer(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(Short.length());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(Short.length());  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuffer  sb  =  new  StringBuffer(Short.length());	  StringBuffer    sb    =    new    StringBuffer(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.getSize();  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  s.getSize();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.getSize();  i++)  {	  for(int    i    =    0;    i    <    s.size()    +    2;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  len  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  len  +  1;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.length();  i  <  len  +  1;  i++)  {	  for(int    i    =    0,    len    =    s.length();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length()  +  1;  i  <  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.length()  +  1;  i  <  len;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.length()  +  1;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    s.length();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length()  +  2;  i  <  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.length()  +  2;  i  <  len;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.length()  +  2;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    s.length();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  len  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  len  +  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.length();  i  <  len  +  2;  i++)  {	  for(int    i    =    0,    len    =    s.length();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.length();  i  <  2;  i++)  {	  for(int    i    =    0,    len    =    s.length();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  >=  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  >=  len;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.length();  i  >=  len;  i++)  {	  for(int    i    =    0,    len    =    s.length();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  int  i  =  outputCharsetEncoder.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  outputCharsetEncoder.length()  +  1;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  outputCharsetEncoder.length()  +  1;	  int    i    =    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
55	[BUG]  [BUGGY]  int  i  =  this.outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  this.outputCharsetEncoder.length();  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  this.outputCharsetEncoder.length();	  int    i    =    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
56	[BUG]  [BUGGY]  int  i  =  outputCharsetEncoder.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  outputCharsetEncoder.length()  +  2;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  outputCharsetEncoder.length()  +  2;	  int    i    =    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
57	[BUG]  [BUGGY]  int  i  =  this.backslashEscape.length();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  this.backslashEscape.length();  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  this.backslashEscape.length();	  int    i    =    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
58	[BUG]  [BUGGY]  char  i  =  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  char  i  =  outputCharsetEncoder.length();  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	char  i  =  outputCharsetEncoder.length();	  int    i    =    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
59	[BUG]  [BUGGY]  int  i  =  inputCharsetEncoder.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  inputCharsetEncoder.length()  +  1;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  inputCharsetEncoder.length()  +  1;	  int    i    =    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  s.size()  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  1;  i  <  s.size()  +  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1;  i  <  s.size()  +  2;  i++)  {	  for(int    i    =    1;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  3;  i  <  s.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  3;  i  <  s.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  3;  i  <  s.size();  i++)  {	  for(int    i    =    1;    i    <    s.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  HEX_CHARS.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  HEX_CHARS.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  HEX_CHARS.length();  i++)  {	  for(int    i    =    0;    i    <    strEscape.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.backslashEscape.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  this.backslashEscape.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  this.backslashEscape.length();  i++)  {	  for(int    i    =    0;    i    <    strEscape.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  strEscape.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  1;  i  <  strEscape.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1;  i  <  strEscape.length();  i++)  {	  for(int    i    =    0;    i    <    strEscape.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  char.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  char.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  char.length();  i++)  {	  for(int    i    =    0;    i    <    strEscape.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  strEscape.length()  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  strEscape.length()  +  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  strEscape.length()  +  2;  i++)  {	  for(int    i    =    0;    i    <    strEscape.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  strEscape.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  2;  i  <  strEscape.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  2;  i  <  strEscape.length();  i++)  {	  for(int    i    =    0;    i    <    strEscape.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
68	[BUG]  [BUGGY]  FOR(int  i  =  0;  i  <  s.length()  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  FOR(int  i  =  0;  i  <  s.length()  +  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	FOR(int  i  =  0;  i  <  s.length()  +  2;  i++)  {	  FOR(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
69	[BUG]  [BUGGY]  FOR(int  i  =  0;  i  <  s.length()  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  FOR(int  i  =  0;  i  <  s.length()  +  1;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	FOR(int  i  =  0;  i  <  s.length()  +  1;  i++)  {	  FOR(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
70	[BUG]  [BUGGY]  FOR(int  i  =  1;  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  FOR(int  i  =  1;  i  <  s.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	FOR(int  i  =  1;  i  <  s.length();  i++)  {	  FOR(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  len  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  len  +  1;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.size();  i  <  len  +  1;  i++)  {	  for(int    i    =    0,    len    =    s.size();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  len  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  len  +  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.size();  i  <  len  +  2;  i++)  {	  for(int    i    =    0,    len    =    s.size();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.size()  +  1;  i  <  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.size()  +  1;  i  <  len;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.size()  +  1;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    s.size();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.size()  +  2;  i  <  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.size()  +  2;  i  <  len;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.size()  +  2;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    s.size();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.size();  i  <  2;  i++)  {	  for(int    i    =    0,    len    =    s.size();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  char  c  =  s.charAt(i);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	char  c  =  s.charAt(i);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  char  c  =  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  char  c  =  s.charAt(0);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	char  c  =  s.charAt(0);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
78	[BUG]  [BUGGY]  String  c  =  s.charAt(i  +  1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  String  c  =  s.charAt(i  +  1);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	String  c  =  s.charAt(i  +  1);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
79	[BUG]  [BUGGY]  char  c  =  s.charAt(i  +  1);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  char  c  =  s.charAt(i  +  1);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	char  c  =  s.charAt(i  +  1);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
80	[BUG]  [BUGGY]  String  c  =  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  String  c  =  s.charAt(0);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	String  c  =  s.charAt(0);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
81	[BUG]  [BUGGY]  String  c  =  s.charAt(i  +  2);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  String  c  =  s.charAt(i  +  2);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	String  c  =  s.charAt(i  +  2);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  s.length()  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  2;  i  <  s.length()  +  1;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  2;  i  <  s.length()  +  1;  i++)  {	  for(int    i    =    2;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  HEX_CHARS.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  HEX_CHARS.length;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  HEX_CHARS.length;  i++)  {	  for(int    i    =    0;    i    <    SHORT_SIZE;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  SHORT_SIZE;  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  1;  i  <  SHORT_SIZE;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1;  i  <  SHORT_SIZE;  i++)  {	  for(int    i    =    0;    i    <    SHORT_SIZE;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  length;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  length;  i++)  {	  for(int    i    =    0;    i    <    SHORT_SIZE;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  2;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  2;  i++)  {	  for(int    i    =    0;    i    <    SHORT_SIZE;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  4;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  4;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  4;  i++)  {	  for(int    i    =    0;    i    <    SHORT_SIZE;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  1;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  1;  i++)  {	  for(int    i    =    0;    i    <    SHORT_SIZE;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
89	[BUG]  [BUGGY]  int  i  =  s.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  s.length()  +  1;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  s.length()  +  1;	  int    i    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
90	[BUG]  [BUGGY]  int  i  =  s.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  s.length()  +  2;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  s.length()  +  2;	  int    i    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
91	[BUG]  [BUGGY]  char  i  =  s.length();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  char  i  =  s.length();  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	char  i  =  s.length();	  int    i    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
92	[BUG]  [BUGGY]  int  i  =  s.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  s.length()  *  2;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  s.length()  *  2;	  int    i    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
93	[BUG]  [BUGGY]  int  i  =  s.length()  +  3;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  s.length()  +  3;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  s.length()  +  3;	  int    i    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
94	[BUG]  [BUGGY]  int  i  =  s.length()  +  4;  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  s.length()  +  4;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  s.length()  +  4;	  int    i    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
95	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(sb);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(sb);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(sb);	  CharsetEncoder    cc    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
96	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  quote);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  quote);	  CharsetEncoder    cc    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
97	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  i);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  i);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  i);	  CharsetEncoder    cc    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
98	[BUG]  [BUGGY]  CharsetEncoder  cc  =  s.encode(outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  CharsetEncoder  cc  =  s.encode(outputCharsetEncoder);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  s.encode(outputCharsetEncoder);	  CharsetEncoder    cc    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
99	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  0);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  0);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  0);	  CharsetEncoder    cc    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
100	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(sb,  i);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(sb,  i);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(sb,  i);	  CharsetEncoder    cc    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
101	[BUG]  [BUGGY]  sb.append('#');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append('#');  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append('#');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
102	[BUG]  [BUGGY]  sb.append('[');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append('[');  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append('[');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
103	[BUG]  [BUGGY]  sb.append('N');  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append('N');  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append('N');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
104	[BUG]  [BUGGY]  sb.append('0');  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append('0');  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append('0');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
105	[BUG]  [BUGGY]  sb.append( ".n ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( ".n ");  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( ".n ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
106	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  backslashEscape);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  backslashEscape);	  CharsetEncoder    cc    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
107	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  false);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(s,  false);	  CharsetEncoder    cc    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
108	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(sb,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.encode(sb,  outputCharsetEncoder);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.encode(sb,  outputCharsetEncoder);	  CharsetEncoder    cc    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  backslashEscape.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  backslashEscape.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  backslashEscape.length();  i++)  {	  for(int    i    =    0;    i    <    strEscape.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.outputCharsetEncoder.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  this.outputCharsetEncoder.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  this.outputCharsetEncoder.length();  i++)  {	  for(int    i    =    0;    i    <    strEscape.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
111	[BUG]  [BUGGY]  FOR(int  i  =  0;  i  <  s.length()  +  4;  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  FOR(int  i  =  0;  i  <  s.length()  +  4;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	FOR(int  i  =  0;  i  <  s.length()  +  4;  i++)  {	  FOR(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
112	[BUG]  [BUGGY]  FOR(int  i  =  0;  i  <  s.length()  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  FOR(int  i  =  0;  i  <  s.length()  -  1;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	FOR(int  i  =  0;  i  <  s.length()  -  1;  i++)  {	  FOR(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  6;  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  6;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  6;  i++)  {	  for(int    i    =    0;    i    <    SHORT_SIZE;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  3;  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  3;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  3;  i++)  {	  for(int    i    =    0;    i    <    SHORT_SIZE;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.outputCharsetEncoder.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  this.outputCharsetEncoder.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  this.outputCharsetEncoder.size();  i++)  {	  for(int    i    =    0;    i    <    strEscape.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  outputCharsetEncoder.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  outputCharsetEncoder.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  outputCharsetEncoder.size();  i++)  {	  for(int    i    =    0;    i    <    strEscape.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
117	[BUG]  [BUGGY]  sb.append('n'  +  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append('n'  +  quote);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append('n'  +  quote);	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
118	[BUG]  [BUGGY]  sb.append(']');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append(']');  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append(']');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
119	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(S.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(S.length());  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuffer  sb  =  new  StringBuffer(S.length());	  StringBuffer    sb    =    new    StringBuffer(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0,  length();  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  length();  i  <  s.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  length();  i  <  s.length();  i++)  {	  for(int    i    =    0,    s.length();    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
121	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length()  *  1);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length()  *  1);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuffer  sb  =  new  StringBuffer(s.length()  *  1);	  StringBuffer    sb    =    new    StringBuffer(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
122	[BUG]  [BUGGY]  sb  =  new  StringBuffer(s.length());  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb  =  new  StringBuffer(s.length());  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb  =  new  StringBuffer(s.length());	  StringBuffer    sb    =    new    StringBuffer(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
123	[BUG]  [BUGGY]  int  i  =  outputCharsetEncoder.length()  +  4;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  outputCharsetEncoder.length()  +  4;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  outputCharsetEncoder.length()  +  4;	  int    i    =    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
124	[BUG]  [BUGGY]  int  i  =  outputCharsetEncoder.length()  +  3;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  outputCharsetEncoder.length()  +  3;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  outputCharsetEncoder.length()  +  3;	  int    i    =    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
125	[BUG]  [BUGGY]  int  i  =  outputCharsetEncoder.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  outputCharsetEncoder.length()  *  2;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  outputCharsetEncoder.length()  *  2;	  int    i    =    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
126	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encodeAsString(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encodeAsString(outputCharsetEncoder));  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encodeAsString(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
127	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder));  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
128	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoding.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoding.encode(outputCharsetEncoder));  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoding.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  >=  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  >=  len;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.size();  i  >=  len;  i++)  {	  for(int    i    =    0,    len    =    s.size();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
130	[BUG]  [BUGGY]  sb.append( ".t ");  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( ".t ");  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( ".t ");	  sb.append(   "t   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
131	[BUG]  [BUGGY]  sb.append( ",t ");  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( ",t ");  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( ",t ");	  sb.append(   "t   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.size();  i  +=  2  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  s.size();  i  +=  2  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.size();  i  +=  2  {	  for(int    i    =    0;    i    <    s.size();    i    +=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0,  sep  =  s.length();  i  <  sep.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  sep  =  s.length();  i  <  sep.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  sep  =  s.length();  i  <  sep.length();  i++)  {	  for(int    i    =    0,    s.length();    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0,  isEnabled(Feature.QUOTE_FIELD_NAMES));  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  isEnabled(Feature.QUOTE_FIELD_NAMES));  i  <  s.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  isEnabled(Feature.QUOTE_FIELD_NAMES));  i  <  s.length();  i++)  {	  for(int    i    =    0,    s.length();    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0,  isEnabled(Feature.QUOTE_FIELD_NAMES);  i  <  s.length();  i++)  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  isEnabled(Feature.QUOTE_FIELD_NAMES);  i  <  s.length();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  isEnabled(Feature.QUOTE_FIELD_NAMES);  i  <  s.length();  i++)  {	  for(int    i    =    0,    s.length();    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
136	[BUG]  [BUGGY]  sb.append(':');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append(':');  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append(':');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
137	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i);	  CharsetEncoder    cc    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
138	[BUG]  [BUGGY]  FOR(int  i  =  0;  i  <  s.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  FOR(int  i  =  0;  i  <  s.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	FOR(int  i  =  0;  i  <  s.size();  i++)  {	  FOR(int    i    =    0;    i    <    s.length();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
139	[BUG]  [BUGGY]  int  i  =  s.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  s.length()  -  1;  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  s.length()  -  1;	  int    i    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
140	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
141	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  len;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.length();  i  <  len;  ++i)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.length();  i  <  len;  ++i)  {	  for(int    i    =    0,    len    =    s.length();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  1,  len  =  s.length();  i  <  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  1,  len  =  s.length();  i  <  len;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1,  len  =  s.length();  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    s.length();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.singlequoteEscape.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  this.singlequoteEscape.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  this.singlequoteEscape.size();  i++)  {	  for(int    i    =    0;    i    <    strEscape.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
144	[BUG]  [BUGGY]  sb.append( "n ".charAt(0));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  sb.append( "n ".charAt(0));  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	sb.append( "n ".charAt(0));	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
145	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s,  s.length());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s,  s.length());  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuffer  sb  =  new  StringBuffer(s,  s.length());	  StringBuffer    sb    =    new    StringBuffer(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
146	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length()  *  2);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(s.length()  *  2);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	StringBuffer  sb  =  new  StringBuffer(s.length()  *  2);	  StringBuffer    sb    =    new    StringBuffer(s.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
147	[BUG]  [BUGGY]  int  i  =  strEscape.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  int  i  =  strEscape.length();  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	int  i  =  strEscape.length();	  int    i    =    outputCharsetEncoder.length();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
148	[BUG]  [BUGGY]  char  c  =  s.charAt(i++);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  char  c  =  s.charAt(i++);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	char  c  =  s.charAt(i++);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
149	[BUG]  [BUGGY]  char  c  =  s.charAt(i  +  2);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  char  c  =  s.charAt(i  +  2);  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	char  c  =  s.charAt(i  +  2);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
150	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  len;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0,  len  =  s.size();  i  <  len;  ++i)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0,  len  =  s.size();  i  <  len;  ++i)  {	  for(int    i    =    0,    len    =    s.size();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
151	[BUG]  [BUGGY]  for(int  i  =  1,  len  =  s.size();  i  <  len;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  1,  len  =  s.size();  i  <  len;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  1,  len  =  s.size();  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    s.size();    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
152	[BUG]  [BUGGY]  for(int  i  =  0;  it  <  s.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  it  <  s.size();  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  it  <  s.size();  i++)  {	  for(int    i    =    0;    i    <    s.size()    +    2;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  HEX_CHARS;  i++)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  HEX_CHARS;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  HEX_CHARS;  i++)  {	  for(int    i    =    0;    i    <    SHORT_SIZE;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  s.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  sb.append(quote);      [BUGGY]  for(int  i  =  0;  i  <  s.length;  i++)  {  [BUGGY]      char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  case  '\'':  sb.append(singlequoteEscape);  break;  case  '>':  //  Break  -->  into  --\>  or  ]]>  into  ]]\>  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	for(int  i  =  0;  i  <  s.length;  i++)  {	  for(int    i    =    0;    i    <    SHORT_SIZE;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
