bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  12);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  12);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  12);	  ZipLong    sig    =    new    ZipLong(lfh,    16);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
2	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(lfh,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(lfh,  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(lfh,  bytesReadFromStream);	  byte[]    buf    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
3	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(lfh,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(lfh,  offset);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(lfh,  offset);	  byte[]    buf    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
4	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(lfh,  off);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(lfh,  off);	  byte[]    buf    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
5	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(lfh,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(lfh,  false);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(lfh,  false);	  byte[]    buf    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
6	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0,  lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0,  lfh.length);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  0,  lfh.length);	  ZipLong    sig    =    new    ZipLong(lfh,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
7	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0L);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0L);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  0L);	  ZipLong    sig    =    new    ZipLong(lfh,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
8	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  0,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  0,  lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  0,  lfh);	  ZipLong    sig    =    new    ZipLong(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
9	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh,  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  lfh,  bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
10	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  off);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  off);	  ZipLong    sig    =    new    ZipLong(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
11	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh,  off);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  lfh,  off);	  ZipLong    sig    =    new    ZipLong(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
12	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh,  0);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  lfh,  0);	  ZipLong    sig    =    new    ZipLong(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
13	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  current);	  ZipLong    sig    =    new    ZipLong(this.inputStream,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
14	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.current);	  ZipLong    sig    =    new    ZipLong(this.inputStream,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
15	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.versionMadeBy);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.versionMadeBy);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.versionMadeBy);	  ZipLong    sig    =    new    ZipLong(this.inputStream,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
16	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.versionMadeBy,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.versionMadeBy,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.versionMadeBy,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.versionMadeBy);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
17	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.version,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.version,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.version,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.versionMadeBy);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
18	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current,  this.versionMadeBy);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current,  this.versionMadeBy);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current,  this.versionMadeBy);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.versionMadeBy);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
19	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.versionMadeBy,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.versionMadeBy,  current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.versionMadeBy,  current);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.versionMadeBy);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
20	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.versionFile,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.versionFile,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.versionFile,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.versionMadeBy);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
21	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  3);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  3);	  ZipLong    sig    =    new    ZipLong(lfh,    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
22	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextZipEntry(current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getNextZipEntry(current);	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
23	[BUG]  [BUGGY]  Inflater  inf  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextFileEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getNextFileEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
24	[BUG]  [BUGGY]  Inflater  inf  =  getNewZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNewZipEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getNewZipEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
25	[BUG]  [BUGGY]  Inflater  inf  =  getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getNextEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
26	[BUG]  [BUGGY]  Inflater  inf  =  getFullZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getFullZipEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getFullZipEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
27	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length,  1);	  ZipLong    sig    =    new    ZipLong(lfh.length,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
28	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length(),  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length(),  true);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length(),  true);	  ZipLong    sig    =    new    ZipLong(lfh.length,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
29	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  2);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length,  2);	  ZipLong    sig    =    new    ZipLong(lfh.length,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
30	[BUG]  [BUGGY]  Inflater  inf  =  getInputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInputFile();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInputFile();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
31	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFileInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputFileInput();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputFileInput();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
32	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile().getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputFile().getInputStream();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputFile().getInputStream();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
33	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile().getParent();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputFile().getParent();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputFile().getParent();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
34	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile().getCharset();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputFile().getCharset();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputFile().getCharset();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
35	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile().getChars(0,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputFile().getChars(0,  0);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputFile().getChars(0,  0);	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
36	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.fileNameLen,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.fileNameLen,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.fileNameLen,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
37	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.fileNameLen);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.fileNameLen);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
38	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.fileName,  lfh,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.fileName,  lfh,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.fileName,  lfh,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
39	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current,  this.fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current,  this.fileNameLen);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current,  this.fileNameLen);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
40	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.fileNameLen,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.fileNameLen,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.fileNameLen,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
41	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.fileNameLen  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.fileNameLen  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.fileNameLen  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
42	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this);	  ZipLong    sig    =    new    ZipLong(lfh,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
43	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  null,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  null,  current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  null,  current);	  ZipLong    sig    =    new    ZipLong(lfh,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
44	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  false);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  false,  false);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
45	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  false);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  true,  false);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
46	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  true);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  true,  true);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
47	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  null);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  true,  null);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
48	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  true,  1);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
49	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  2);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  *  2);	  ZipLong    sig    =    new    ZipLong(lfh    *    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
50	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  4);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  *  4);	  ZipLong    sig    =    new    ZipLong(lfh    *    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
51	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  *  1);	  ZipLong    sig    =    new    ZipLong(lfh    *    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
52	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  3);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  *  3);	  ZipLong    sig    =    new    ZipLong(lfh    *    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
53	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  /  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  /  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  /  1);	  ZipLong    sig    =    new    ZipLong(lfh    *    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
54	[BUG]  [BUGGY]  ZipLong  sig  =  current.getZipLong(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  current.getZipLong(0);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  current.getZipLong(0);	  ZipLong    sig    =    current.getZipLong();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
55	[BUG]  [BUGGY]  ZipLong  sig  =  current.getZipLong(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  current.getZipLong(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  current.getZipLong(lfh);	  ZipLong    sig    =    current.getZipLong();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
56	[BUG]  [BUGGY]  ZipLong  sig  =  current.getZipLong()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  current.getZipLong()  +  1;  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  current.getZipLong()  +  1;	  ZipLong    sig    =    current.getZipLong();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
57	[BUG]  [BUGGY]  ZipLong  sig  =  current.getZipLongBytes();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  current.getZipLongBytes();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  current.getZipLongBytes();	  ZipLong    sig    =    current.getZipLong();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
58	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  1,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  1,  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  1,  1);	  ZipLong    sig    =    new    ZipLong(lfh,    1L);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
59	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  2L);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  2L);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  2L);	  ZipLong    sig    =    new    ZipLong(lfh,    1L);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
60	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  10L);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  10L);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  10L);	  ZipLong    sig    =    new    ZipLong(lfh,    1L);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
61	[BUG]  [BUGGY]  Inflater  inf  =  this.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  this.getInflater();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  this.getInflater();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
62	[BUG]  [BUGGY]  Inflater  inf  =  getInflater(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInflater(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInflater(lfh);	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
63	[BUG]  [BUGGY]  Inflater  inf  =  getInflater().getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInflater().getInputStream();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInflater().getInputStream();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
64	[BUG]  [BUGGY]  Inflater  inf  =  getInflater().inflate(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInflater().inflate(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInflater().inflate(lfh);	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
65	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current.length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current.length  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current.length  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    current.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
66	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh.length);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  lfh.length);	  ZipLong    sig    =    new    ZipLong(lfh,    current.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
67	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current.length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current.length  -  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current.length  -  1);	  ZipLong    sig    =    new    ZipLong(lfh,    current.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
68	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current.length,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current.length,  lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current.length,  lfh);	  ZipLong    sig    =    new    ZipLong(lfh,    current.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
69	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current.length  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current.length  +  2);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current.length  +  2);	  ZipLong    sig    =    new    ZipLong(lfh,    current.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
70	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  lfh);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
71	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
72	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
73	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh_LEN);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh_LEN);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
74	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  LFH_LEN);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  LFH_LEN);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
75	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(lfh,    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
76	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  lengthOfLastRead  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  lengthOfLastRead  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  lengthOfLastRead  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
77	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  lengthOfLastRead,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  lengthOfLastRead,  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  lengthOfLastRead,  bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(lfh,    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
78	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readBytesOfEntry);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readBytesOfEntry);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readBytesOfEntry);	  ZipLong    sig    =    new    ZipLong(lfh,    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
79	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.encoding,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.encoding,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.encoding,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
80	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.encoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.encoding);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.encoding);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
81	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.encoding,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.encoding,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.encoding,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
82	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.in,  lfh,  this.encoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.in,  lfh,  this.encoding);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.in,  lfh,  this.encoding);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
83	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.encoding,  this.fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.encoding,  this.fileNameLen);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.encoding,  this.fileNameLen);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
84	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.encoding,  this.in);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.encoding,  this.in);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.encoding,  this.in);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
85	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
86	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.readFully);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.readFully);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.readFully);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
87	[BUG]  [BUGGY]  Inflater  sig  =  getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextZipEntry(current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextZipEntry(current);	  Inflater    sig    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
88	[BUG]  [BUGGY]  Inflater  sig  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextFileEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextFileEntry();	  Inflater    sig    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
89	[BUG]  [BUGGY]  Inflater  sig  =  getNextZipEntryInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextZipEntryInputStream();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextZipEntryInputStream();	  Inflater    sig    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
90	[BUG]  [BUGGY]  Inflater  sig  =  getNextZipEntry().getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextZipEntry().getValue();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextZipEntry().getValue();	  Inflater    sig    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
91	[BUG]  [BUGGY]  Inflater  sig  =  getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getZipEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getZipEntry();	  Inflater    sig    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
92	[BUG]  [BUGGY]  Inflater  inf  =  getOutputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputStream();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputStream();	  Inflater    inf    =    getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
93	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream(Long.parseLong(lfh));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInputStream(Long.parseLong(lfh));  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInputStream(Long.parseLong(lfh));	  Inflater    inf    =    getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
94	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream().readFully();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInputStream().readFully();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInputStream().readFully();	  Inflater    inf    =    getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
95	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream(Long.MAX_VALUE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInputStream(Long.MAX_VALUE);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInputStream(Long.MAX_VALUE);	  Inflater    inf    =    getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
96	[BUG]  [BUGGY]  Inflater  inf  =  this.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  this.getInputStream();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  this.getInputStream();	  Inflater    inf    =    getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
97	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream().readFully(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInputStream().readFully(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInputStream().readFully(lfh);	  Inflater    inf    =    getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
98	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  lfh  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    current    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
99	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current  +  2);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current  +  2);	  ZipLong    sig    =    new    ZipLong(lfh,    current    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
100	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current  *  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current  *  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current  *  1);	  ZipLong    sig    =    new    ZipLong(lfh,    current    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
101	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current  +  3);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current  +  3);	  ZipLong    sig    =    new    ZipLong(lfh,    current    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
102	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  false,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  false,  0);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length,  false,  0);	  ZipLong    sig    =    new    ZipLong(lfh.length,    false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
103	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  -  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  -  2);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  -  2);	  ZipLong    sig    =    new    ZipLong(lfh.length    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
104	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  -  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  -  4);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  -  4);	  ZipLong    sig    =    new    ZipLong(lfh.length    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
105	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  1);	  ZipLong    sig    =    new    ZipLong(lfh.length    *    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
106	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  4);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  *  4);	  ZipLong    sig    =    new    ZipLong(lfh.length    *    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
107	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  0);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  true,  0);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
108	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  false,  1);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
109	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  0,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  0,  0);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  false,  0,  0);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
110	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0,  0);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  0,  0);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
111	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  2);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  false,  2);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
112	[BUG]  [BUGGY]  Inflater  sig  =  getCurrentEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getCurrentEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getCurrentEntry();	  Inflater    sig    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
113	[BUG]  [BUGGY]  Inflater  sig  =  getNextEntry().getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextEntry().getValue();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextEntry().getValue();	  Inflater    sig    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
114	[BUG]  [BUGGY]  Inflater  sig  =  getZipLongEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getZipLongEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getZipLongEntry();	  Inflater    sig    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
115	[BUG]  [BUGGY]  Inflater  sig  =  getNextEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextEntry(current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextEntry(current);	  Inflater    sig    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
116	[BUG]  [BUGGY]  Inflater  sig  =  getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getInputStream();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getInputStream();	  Inflater    sig    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
117	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  2);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  2);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
118	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  10);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  10);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  10);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
119	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  0,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  0,  0);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  0,  0);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
120	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  100);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  100);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  100);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
121	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  +  3);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  +  3);	  ZipLong    sig    =    new    ZipLong(lfh    +    3);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
122	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.current,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.current,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.current,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
123	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.current);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
124	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.current  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.current  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.current  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
125	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  offset  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  offset  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  offset  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
126	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readBytesOfEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readBytesOfEntry());  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readBytesOfEntry());	  ZipLong    sig    =    new    ZipLong(lfh,    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
127	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  SHORT  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  SHORT  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  SHORT  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
128	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0,  SHORT);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  0,  SHORT);	  ZipLong    sig    =    new    ZipLong(lfh,    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
129	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  length);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  length);	  ZipLong    sig    =    new    ZipLong(lfh,    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
130	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  2);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  2);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
131	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  3);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  3);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
132	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  1,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  1,  current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  1,  current);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
133	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.outputPurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.outputPurposeFlag);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  this.outputPurposeFlag);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
134	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.outputBuffer,  this.outputPurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.outputBuffer,  this.outputPurposeFlag);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.outputBuffer,  this.outputPurposeFlag);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
135	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.current,  this.outputPurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.current,  this.outputPurposeFlag);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.current,  this.outputPurposeFlag);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
136	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputBuffer,  this.outputPurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputBuffer,  this.outputPurposeFlag);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputBuffer,  this.outputPurposeFlag);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
137	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.off);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.off);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
138	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  current);	  ZipLong    sig    =    new    ZipLong(lfh,    readFully(lfh));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
139	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh)+  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh)+  1);	  ZipLong    sig    =    new    ZipLong(lfh,    readFully(lfh));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
140	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  1);	  ZipLong    sig    =    new    ZipLong(lfh,    readFully(lfh));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
141	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(current));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(current));  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readFully(current));	  ZipLong    sig    =    new    ZipLong(lfh,    readFully(lfh));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
142	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  true);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  true);	  ZipLong    sig    =    new    ZipLong(lfh,    readFully(lfh));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
143	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  fileNameLen  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  fileNameLen  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  fileNameLen  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
144	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  fileNameLen,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  fileNameLen,  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  fileNameLen,  bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(lfh,    fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
145	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(true);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(true);	  byte[]    buf    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
146	[BUG]  [BUGGY]  byte[]  buf  =  current.readBytes();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readBytes();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readBytes();	  byte[]    buf    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
147	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(e);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(e);	  byte[]    buf    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
148	[BUG]  [BUGGY]  byte[]  buf  =  current.getBytesRead();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.getBytesRead();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.getBytesRead();	  byte[]    buf    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
149	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(buffered);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(buffered);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(buffered);	  byte[]    buf    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
150	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  current);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
151	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  readBytesOfEntry);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  readBytesOfEntry);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  readBytesOfEntry);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
152	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh,  bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
153	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  SHORT);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  SHORT);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
154	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  WORD);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  WORD);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
155	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current,  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current,  bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
156	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  offset);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  offset);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
157	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.getInputFile();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.getInputFile();	  Inflater    inf    =    current.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
158	[BUG]  [BUGGY]  Inflater  inf  =  current.read();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.read();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.read();	  Inflater    inf    =    current.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
159	[BUG]  [BUGGY]  Inflater  inf  =  current.getOutput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.getOutput();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.getOutput();	  Inflater    inf    =    current.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
160	[BUG]  [BUGGY]  Inflater  inf  =  current.readFully();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.readFully();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.readFully();	  Inflater    inf    =    current.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
161	[BUG]  [BUGGY]  Inflater  inf  =  current.readIn();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.readIn();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.readIn();	  Inflater    inf    =    current.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
162	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.getInputStream(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.getInputStream(lfh);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
163	[BUG]  [BUGGY]  Inflater  inf  =  current.getOutputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.getOutputStream();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.getOutputStream();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
164	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(Long.parseLong(lfh));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.getInputStream(Long.parseLong(lfh));  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.getInputStream(Long.parseLong(lfh));	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
165	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(),  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.getInputStream(),  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.getInputStream(),  bytesReadFromStream);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
166	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(Long.MAX_VALUE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.getInputStream(Long.MAX_VALUE);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.getInputStream(Long.MAX_VALUE);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
167	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  16);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  16);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  *  16);	  ZipLong    sig    =    new    ZipLong(lfh    +    16);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
168	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  10);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  10);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  +  10);	  ZipLong    sig    =    new    ZipLong(lfh    +    16);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
169	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[lengthOfLastRead++];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[lengthOfLastRead++];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[lengthOfLastRead++];	  byte[]    buf    =    new    byte[LengthOfLastRead++];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
170	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[BytesReadFromStream++];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[BytesReadFromStream++];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[BytesReadFromStream++];	  byte[]    buf    =    new    byte[LengthOfLastRead++];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
171	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[readBytesOfEntry++];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[readBytesOfEntry++];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[readBytesOfEntry++];	  byte[]    buf    =    new    byte[LengthOfLastRead++];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
172	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[readBytesOfLastRead++];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[readBytesOfLastRead++];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[readBytesOfLastRead++];	  byte[]    buf    =    new    byte[LengthOfLastRead++];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
173	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[lengthOfLastRead];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[lengthOfLastRead];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[lengthOfLastRead];	  byte[]    buf    =    new    byte[LengthOfLastRead];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
174	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[LengthOfLastRead  +  1];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[LengthOfLastRead  +  1];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[LengthOfLastRead  +  1];	  byte[]    buf    =    new    byte[LengthOfLastRead];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
175	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[readBytesOfEntry];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[readBytesOfEntry];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[readBytesOfEntry];	  byte[]    buf    =    new    byte[LengthOfLastRead];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
176	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[BytesReadFromStream];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[BytesReadFromStream];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[BytesReadFromStream];	  byte[]    buf    =    new    byte[LengthOfLastRead];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
177	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[BytesReadFromStream.length];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[BytesReadFromStream.length];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[BytesReadFromStream.length];	  byte[]    buf    =    new    byte[LengthOfLastRead];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
178	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh  +  1);	  ZipLong    sig    =    new    ZipLong(current,    Lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
179	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  Lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  Lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  Lfh);	  ZipLong    sig    =    new    ZipLong(current,    Lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
180	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current.length,  Lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current.length,  Lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current.length,  Lfh);	  ZipLong    sig    =    new    ZipLong(current,    Lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
181	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  Lfh_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  Lfh_LEN);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  Lfh_LEN);	  ZipLong    sig    =    new    ZipLong(current,    Lfh_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
182	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  lfh);	  ZipLong    sig    =    new    ZipLong(current,    Lfh_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
183	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(current,    Lfh_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
184	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN  +  1);	  ZipLong    sig    =    new    ZipLong(current,    Lfh_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
185	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current.length,  Lfh_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current.length,  Lfh_LEN);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current.length,  Lfh_LEN);	  ZipLong    sig    =    new    ZipLong(current,    Lfh_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
186	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length());  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length());	  ZipLong    sig    =    new    ZipLong(lfh.length    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
187	[BUG]  [BUGGY]  Inflater  sig  =  current.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  current.getEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  current.getEntry();	  Inflater    sig    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
188	[BUG]  [BUGGY]  Inflater  sig  =  current.getOutputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  current.getOutputStream();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  current.getOutputStream();	  Inflater    sig    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
189	[BUG]  [BUGGY]  Inflater  sig  =  current.getInputStream(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  current.getInputStream(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  current.getInputStream(lfh);	  Inflater    sig    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
190	[BUG]  [BUGGY]  Inflater  sig  =  current.getErrorStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  current.getErrorStream();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  current.getErrorStream();	  Inflater    sig    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
191	[BUG]  [BUGGY]  Inflater  sig  =  current.getEntry(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  current.getEntry(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  current.getEntry(lfh);	  Inflater    sig    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
192	[BUG]  [BUGGY]  Inflater  sig  =  current.getEntryInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  current.getEntryInputStream();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  current.getEntryInputStream();	  Inflater    sig    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
193	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getInflater(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inflater  =  getInflater(lfh);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
194	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater().inflate(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getInflater().inflate(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inflater  =  getInflater().inflate(lfh);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
195	[BUG]  [BUGGY]  Inflater  inflater  =  getOutflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getOutflater();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inflater  =  getOutflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
196	[BUG]  [BUGGY]  Inflater  inflater  =  this.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  this.getInflater();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inflater  =  this.getInflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
197	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getInflater(current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inflater  =  getInflater(current);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
198	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD,  current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD,  current);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
199	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD,  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD,  bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
200	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
201	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD,  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD,  1);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
202	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  Lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  Lfh.length);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  Lfh.length);	  ZipLong    sig    =    new    ZipLong(current,    Lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
203	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.MAX_VALUE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.MAX_VALUE);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh.MAX_VALUE);	  ZipLong    sig    =    new    ZipLong(current,    Lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
204	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  Lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  Lfh.length);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length,  Lfh.length);	  ZipLong    sig    =    new    ZipLong(current,    Lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
205	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  32  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    32);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
206	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  64);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  64);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  64);	  ZipLong    sig    =    new    ZipLong(lfh,    32);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
207	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  32  *  DateTimeConstants.MILLIS_PER_SECOND);	  ZipLong    sig    =    new    ZipLong(lfh,    32);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
208	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  32  *  DateTimeConstants.MILLIS_PER_MINUTE);	  ZipLong    sig    =    new    ZipLong(lfh,    32);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
209	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  Off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  Off);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  Off);	  ZipLong    sig    =    new    ZipLong(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
210	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(off,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(off,  WORD);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(off,  WORD);	  ZipLong    sig    =    new    ZipLong(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
211	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  4);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  4);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
212	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  3);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  3);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
213	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.fileName,  this.inputStream,  this.encoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.fileName,  this.inputStream,  this.encoding);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.fileName,  this.inputStream,  this.encoding);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
214	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(zipEncoding,  this.inputStream,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(zipEncoding,  this.inputStream,  lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(zipEncoding,  this.inputStream,  lfh);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
215	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.encoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.encoding);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.encoding);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
216	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  8);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  8);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  *  8);	  ZipLong    sig    =    new    ZipLong(lfh    *    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
217	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  32);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  32);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  *  32);	  ZipLong    sig    =    new    ZipLong(lfh    *    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
218	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  LH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  LH_LEN);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  LH_LEN);	  ZipLong    sig    =    new    ZipLong(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
219	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  1);	  ZipLong    sig    =    new    ZipLong(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
220	[BUG]  [BUGGY]  Inflater  inf  =  current.readFully(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  current.readFully(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.readFully(lfh);	  Inflater    inf    =    current.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
221	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length(),  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length(),  false);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length(),  false);	  ZipLong    sig    =    new    ZipLong(lfh.length,    false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
222	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  null);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length,  null);	  ZipLong    sig    =    new    ZipLong(lfh.length,    false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
223	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  offset  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  offset  +  WORD);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  offset  +  WORD);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
224	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD-1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD-1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD-1);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
225	[BUG]  [BUGGY]  Inflater  sig  =  current.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  current.getValue();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  current.getValue();	  Inflater    sig    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
226	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32L);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32L);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  32L);	  ZipLong    sig    =    new    ZipLong(lfh,    32);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
227	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32)+  1;  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  32)+  1;	  ZipLong    sig    =    new    ZipLong(lfh,    32);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
228	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  true,  hasDataDescriptor);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  true,  hasDataDescriptor);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
229	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.readFully,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.readFully,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.readFully,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
230	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.inputStream,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
231	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
232	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  8);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  8);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  8);	  ZipLong    sig    =    new    ZipLong(lfh,    10);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
233	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  offset  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  offset  +  2);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  offset  +  2);	  ZipLong    sig    =    new    ZipLong(lfh,    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
234	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  -  1  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  -  1  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  -  1  +  1);	  ZipLong    sig    =    new    ZipLong(lfh.length    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
235	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  /  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  /  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  /  1);	  ZipLong    sig    =    new    ZipLong(lfh.length    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
236	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.current,  this.inputStream,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.current,  this.inputStream,  lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.current,  this.inputStream,  lfh);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
237	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.fileName,  this.inputStream,  this.current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.fileName,  this.inputStream,  this.current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.fileName,  this.inputStream,  this.current);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
238	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[readBytesOfLastRead];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[readBytesOfLastRead];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[readBytesOfLastRead];	  byte[]    buf    =    new    byte[LengthOfLastRead];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
239	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[readFullyLen];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[readFullyLen];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[readFullyLen];	  byte[]    buf    =    new    byte[LengthOfLastRead];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
240	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[readBytesOfInputStream];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[readBytesOfInputStream];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[readBytesOfInputStream];	  byte[]    buf    =    new    byte[LengthOfLastRead];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
241	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  100);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  100);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  100);	  ZipLong    sig    =    new    ZipLong(lfh,    1L);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
242	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0,  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  0,  1);	  ZipLong    sig    =    new    ZipLong(lfh,    1L);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
243	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(false);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(false);	  byte[]    buf    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
244	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  length  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  length  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
245	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  32);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  32);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  +  32);	  ZipLong    sig    =    new    ZipLong(lfh    +    16);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
246	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  8);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  8);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  +  8);	  ZipLong    sig    =    new    ZipLong(lfh    +    16);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
247	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh.MAX_VALUE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh.MAX_VALUE);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh.MAX_VALUE);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
248	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh.DEFAULT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh.DEFAULT);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh.DEFAULT);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
249	[BUG]  [BUGGY]  Inflater  sig  =  getNextDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextDirectory();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextDirectory();	  Inflater    sig    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
250	[BUG]  [BUGGY]  Inflater  sig  =  getNextFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextFile();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextFile();	  Inflater    sig    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
251	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.fileNameLen,  this.outputPurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.fileNameLen,  this.outputPurposeFlag);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.fileNameLen,  this.outputPurposeFlag);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
252	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.outputPurposeFlag,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.outputPurposeFlag,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.outputPurposeFlag,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
253	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.currentPurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.currentPurposeFlag);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.currentPurposeFlag);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
254	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.sourcePurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.sourcePurposeFlag);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.sourcePurposeFlag);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
255	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  0,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  0,  true);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length,  0,  true);	  ZipLong    sig    =    new    ZipLong(lfh.length,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
256	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  DEFAULT_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  DEFAULT_SIZE);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  DEFAULT_SIZE);	  ZipLong    sig    =    new    ZipLong(lfh,    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
257	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[BytesReadLength++];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[BytesReadLength++];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[BytesReadLength++];	  byte[]    buf    =    new    byte[LengthOfLastRead++];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
258	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  0,  Lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  0,  Lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  0,  Lfh);	  ZipLong    sig    =    new    ZipLong(current,    Lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
259	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.DEFAULT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.DEFAULT);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh.DEFAULT);	  ZipLong    sig    =    new    ZipLong(current,    Lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
260	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  -1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  false,  -1);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
261	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lengthOfLastRead,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lengthOfLastRead,  lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lengthOfLastRead,  lfh);	  ZipLong    sig    =    new    ZipLong(lfh,    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
262	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current.length,  lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current.length,  lfh.length);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current.length,  lfh.length);	  ZipLong    sig    =    new    ZipLong(lfh,    current.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
263	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0,  null);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  0,  null);	  ZipLong    sig    =    new    ZipLong(lfh,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
264	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length)+  1;  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length)+  1;	  ZipLong    sig    =    new    ZipLong(lfh.length    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
265	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.versionMadeBy,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.versionMadeBy,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.versionMadeBy,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.versionMadeBy);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
266	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.versionMadeBy,  this.fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.versionMadeBy,  this.fileNameLen);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.versionMadeBy,  this.fileNameLen);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.versionMadeBy);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
267	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.versionMadeBy);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.versionMadeBy);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.versionMadeBy);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.versionMadeBy);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
268	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.version,  this.inputStream,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.version,  this.inputStream,  lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.version,  this.inputStream,  lfh);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.versionMadeBy);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
269	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getInflater(false);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inflater  =  getInflater(false);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
270	[BUG]  [BUGGY]  Inflater  inflater  =  createInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  createInflater();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inflater  =  createInflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
271	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile().readFully(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputFile().readFully(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputFile().readFully(lfh);	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
272	[BUG]  [BUGGY]  Inflater  inf  =  getOutputPurposeFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputPurposeFile();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputPurposeFile();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
273	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile().length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputFile().length;  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputFile().length;	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
274	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  inf);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  inf);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
275	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  this.fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  this.fileNameLen);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  this.fileNameLen);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
276	[BUG]  [BUGGY]  Inflater  sig  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextArchiveEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextArchiveEntry();	  Inflater    sig    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
277	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream(in);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInputStream(in);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInputStream(in);	  Inflater    inf    =    getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
278	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInputStream(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInputStream(lfh);	  Inflater    inf    =    getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
279	[BUG]  [BUGGY]  Inflater  inf  =  readFully(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  readFully(lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  readFully(lfh);	  Inflater    inf    =    getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
280	[BUG]  [BUGGY]  Inflater  inf  =  getNextDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextDirectory();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getNextDirectory();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
281	[BUG]  [BUGGY]  Inflater  inf  =  getNextLongEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextLongEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getNextLongEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
282	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  3);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  *  3);	  ZipLong    sig    =    new    ZipLong(lfh.length    *    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
283	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  4);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  4);	  ZipLong    sig    =    new    ZipLong(lfh.length    *    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
284	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  3);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  3);	  ZipLong    sig    =    new    ZipLong(lfh.length    *    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
285	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  10);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  10);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  *  2  +  10);	  ZipLong    sig    =    new    ZipLong(lfh.length    *    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
286	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(lfh,  readBytesOfEntry);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(lfh,  readBytesOfEntry);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(lfh,  readBytesOfEntry);	  byte[]    buf    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
287	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(lfh,  out);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(lfh,  out);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(lfh,  out);	  byte[]    buf    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
288	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(lfh,  inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(lfh,  inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(lfh,  inputStream);	  byte[]    buf    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
289	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(lfh)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(lfh)+  1;  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(lfh)+  1;	  byte[]    buf    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
290	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  this);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  this);	  ZipLong    sig    =    new    ZipLong(lfh,    readFully(lfh));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
291	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  inf);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  inf);	  ZipLong    sig    =    new    ZipLong(lfh,    readFully(lfh));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
292	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  0,  Lfh_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  0,  Lfh_LEN);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  0,  Lfh_LEN);	  ZipLong    sig    =    new    ZipLong(current,    Lfh_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
293	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  0);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  0);	  ZipLong    sig    =    new    ZipLong(current,    Lfh_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
294	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh  +  1);	  ZipLong    sig    =    new    ZipLong(this.inputStream,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
295	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  zipEncoding);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh),  zipEncoding);	  ZipLong    sig    =    new    ZipLong(lfh,    readFully(lfh));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
296	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(inf,  readFully(lfh));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(inf,  readFully(lfh));  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(inf,  readFully(lfh));	  ZipLong    sig    =    new    ZipLong(lfh,    readFully(lfh));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
297	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  bytesReadFromStream,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  bytesReadFromStream,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  bytesReadFromStream,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
298	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  this.generalPurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  this.generalPurposeFlag);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  this.generalPurposeFlag);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
299	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  this.extraLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  this.extraLen);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream,  this.extraLen);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
300	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(bytesReadFromStream,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(bytesReadFromStream,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(bytesReadFromStream,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    bytesReadFromStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
301	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  inf);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  inf);	  ZipLong    sig    =    new    ZipLong(lfh,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
302	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  inf);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  inf);	  ZipLong    sig    =    new    ZipLong(current,    Lfh_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
303	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  current);	  ZipLong    sig    =    new    ZipLong(current,    Lfh_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
304	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  lfh.length);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN,  lfh.length);	  ZipLong    sig    =    new    ZipLong(current,    Lfh_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
305	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  0,  Lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  0,  Lfh.length);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  0,  Lfh.length);	  ZipLong    sig    =    new    ZipLong(current,    Lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
306	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.length  +  1);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh.length  +  1);	  ZipLong    sig    =    new    ZipLong(current,    Lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
307	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.LP);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.LP);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh.LP);	  ZipLong    sig    =    new    ZipLong(current,    Lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
308	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  SHORT);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  SHORT);	  ZipLong    sig    =    new    ZipLong(current,    Lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
309	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.intValue());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.intValue());  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh.intValue());	  ZipLong    sig    =    new    ZipLong(current,    Lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
310	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.current,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(this.current,  this.inputStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.current,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
311	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.lfh);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.lfh);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
312	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.current);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  this.current);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
313	[BUG]  [BUGGY]  Inflater  inf  =  currentEntry.getInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  currentEntry.getInput();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  currentEntry.getInput();	  Inflater    inf    =    current.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
314	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  10);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  10);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  *  10);	  ZipLong    sig    =    new    ZipLong(lfh    *    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
315	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.fileNameLen);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.fileNameLen);	  ZipLong    sig    =    new    ZipLong(lfh,    fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
316	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.offset);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.offset);	  ZipLong    sig    =    new    ZipLong(lfh,    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
317	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(inflater);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(inflater);	  byte[]    buf    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
318	[BUG]  [BUGGY]  byte[]  buf  =  current.getBytes();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.getBytes();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.getBytes();	  byte[]    buf    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
319	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[bufferLengthOfLastRead];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[bufferLengthOfLastRead];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[bufferLengthOfLastRead];	  byte[]    buf    =    new    byte[LengthOfLastRead];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
320	[BUG]  [BUGGY]  Inflater  sig  =  getNextZipEntryLong();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextZipEntryLong();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextZipEntryLong();	  Inflater    sig    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
321	[BUG]  [BUGGY]  Inflater  sig  =  current.getZipLong();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  current.getZipLong();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  current.getZipLong();	  Inflater    sig    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
322	[BUG]  [BUGGY]  Inflater  sig  =  current.readFully();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  current.readFully();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  current.readFully();	  Inflater    sig    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
323	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  LFH_LEN);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  LFH_LEN);	  ZipLong    sig    =    new    ZipLong(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
324	[BUG]  [BUGGY]  Inflater  inf  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextArchiveEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getNextArchiveEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
325	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntryFactory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextZipEntryFactory();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getNextZipEntryFactory();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
326	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntryLong();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextZipEntryLong();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getNextZipEntryLong();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
327	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.extraLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.extraLen);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.extraLen);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
328	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.lastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.lastRead);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.lastRead);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
329	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(inf,  this.inputStream,  this.fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(inf,  this.inputStream,  this.fileNameLen);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(inf,  this.inputStream,  this.fileNameLen);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
330	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  null,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  null,  0);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  null,  0);	  ZipLong    sig    =    new    ZipLong(lfh,    false,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
331	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[lfh.length++];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[lfh.length++];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[lfh.length++];	  byte[]    buf    =    new    byte[LengthOfLastRead++];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
332	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[length++];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  new  byte[length++];  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[length++];	  byte[]    buf    =    new    byte[LengthOfLastRead++];    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
333	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.generalPurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.generalPurposeFlag);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.generalPurposeFlag);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
334	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputPurposeFlag,  this.useUnicodeExtraFields);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputPurposeFlag,  this.useUnicodeExtraFields);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputPurposeFlag,  this.useUnicodeExtraFields);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
335	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputPurposeFlag,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputPurposeFlag,  bytesReadFromStream);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputPurposeFlag,  bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
336	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputBuffer);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputBuffer);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputBuffer);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.outputPurposeFlag);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
337	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.lengthOfLastRead);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.lengthOfLastRead);	  ZipLong    sig    =    new    ZipLong(lfh,    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
338	[BUG]  [BUGGY]  Inflater  sig  =  getNextZipLongEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  sig  =  getNextZipLongEntry();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextZipLongEntry();	  Inflater    sig    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
339	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFileExterns();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputFileExterns();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputFileExterns();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
340	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  WORD);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  WORD);	  ZipLong    sig    =    new    ZipLong(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
341	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(zipEncoding,  this.inputStream,  this.encoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(zipEncoding,  this.inputStream,  this.encoding);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(zipEncoding,  this.inputStream,  this.encoding);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
342	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(crc,  this.inputStream,  this.encoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(crc,  this.inputStream,  this.encoding);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(crc,  this.inputStream,  this.encoding);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
343	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.zipEncoding,  this.encoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.zipEncoding,  this.encoding);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.zipEncoding,  this.encoding);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    this.encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
344	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getInflater(source);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inflater  =  getInflater(source);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
345	[BUG]  [BUGGY]  ZipLong  sig  =  current.getZipLongShort();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  current.getZipLongShort();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  current.getZipLongShort();	  ZipLong    sig    =    current.getZipLong();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
346	[BUG]  [BUGGY]  ZipLong  sig  =  currentEntry.getZipLong();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  currentEntry.getZipLong();  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  currentEntry.getZipLong();	  ZipLong    sig    =    current.getZipLong();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
347	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current  +  WORD);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current  +  WORD);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
348	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  SHORT);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  SHORT);	  ZipLong    sig    =    new    ZipLong(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
349	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(lfh,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  byte[]  buf  =  current.readFully(lfh,  true);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(lfh,  true);	  byte[]    buf    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
350	[BUG]  [BUGGY]  Inflater  inf  =  getInflater(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInflater(source);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInflater(source);	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
351	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh.length);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  this.inputStream,  Lfh.length);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
352	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  3L);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }      [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  3L);  [BUGGY]      if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  3L);	  ZipLong    sig    =    new    ZipLong(lfh,    1L);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
