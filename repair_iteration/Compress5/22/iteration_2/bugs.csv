bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  lfh);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  lfh);	  ZipLong    sig    =    new    ZipLong(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
2	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current.length);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current.length);	  ZipLong    sig    =    new    ZipLong(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
3	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  current  +  1);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  current  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
4	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  fileNameLen);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  fileNameLen);	  ZipLong    sig    =    new    ZipLong(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
5	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  null);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  null);	  ZipLong    sig    =    new    ZipLong(lfh,    false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
6	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  false);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length,  false);	  ZipLong    sig    =    new    ZipLong(lfh,    false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
7	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  true);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  false,  true);	  ZipLong    sig    =    new    ZipLong(lfh,    false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
8	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  +  1);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  +  1);	  ZipLong    sig    =    new    ZipLong(lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
9	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  +  2);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  +  2);	  ZipLong    sig    =    new    ZipLong(lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
10	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  *  2);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  *  2);	  ZipLong    sig    =    new    ZipLong(lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
11	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  -  1);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  -  1);	  ZipLong    sig    =    new    ZipLong(lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
12	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  WORD);	  ZipLong    sig    =    new    ZipLong(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
13	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  lengthOfLastRead);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  lengthOfLastRead);	  ZipLong    sig    =    new    ZipLong(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
14	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  offset);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  offset);	  ZipLong    sig    =    new    ZipLong(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
15	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  off  +  1);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  off  +  1);	  ZipLong    sig    =    new    ZipLong(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
16	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  SHORT);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  SHORT);	  ZipLong    sig    =    new    ZipLong(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
17	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  0);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  0);	  ZipLong    sig    =    new    ZipLong(lfh,    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
18	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  2);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  2);	  ZipLong    sig    =    new    ZipLong(lfh,    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
19	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  16);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  16);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  16);	  ZipLong    sig    =    new    ZipLong(lfh,    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
20	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  10);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  10);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  10);	  ZipLong    sig    =    new    ZipLong(lfh,    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
21	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  32);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  32);	  ZipLong    sig    =    new    ZipLong(lfh,    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
22	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  1L);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  1L);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  1L);	  ZipLong    sig    =    new    ZipLong(lfh,    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
23	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  *  1);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  *  1);	  ZipLong    sig    =    new    ZipLong(lfh    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
24	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  2);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  +  2);	  ZipLong    sig    =    new    ZipLong(lfh    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
25	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  3);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  +  3);	  ZipLong    sig    =    new    ZipLong(lfh    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
26	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  current);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  current);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
27	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  bytesReadFromStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
28	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  1);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  1);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
29	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(this.inputStream,  lfh);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
30	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  0);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  0);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
31	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.fileNameLen);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.fileNameLen);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
32	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length,  true);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length,  true);	  ZipLong    sig    =    new    ZipLong(lfh,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
33	[BUG]  [BUGGY]  Inflater  inf  =  getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  Inflater  inf  =  getInflater();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInflater();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
34	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  Inflater  inf  =  getInputStream();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getInputStream();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
35	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  Inflater  inf  =  current.getInputStream();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.getInputStream();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
36	[BUG]  [BUGGY]  Inflater  sig  =  getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  Inflater  sig  =  getNextEntry();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextEntry();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
37	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  Inflater  inf  =  getOutputFile();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getOutputFile();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
38	[BUG]  [BUGGY]  Inflater  sig  =  current.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  Inflater  sig  =  current.getInputStream();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  current.getInputStream();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
39	[BUG]  [BUGGY]  Inflater  inf  =  current.getInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  Inflater  inf  =  current.getInput();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  current.getInput();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
40	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  +  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh.length  +  4);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh.length  +  4);	  ZipLong    sig    =    new    ZipLong(lfh.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
41	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  4);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  +  4);	  ZipLong    sig    =    new    ZipLong(lfh    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
42	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  16);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh  +  16);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh  +  16);	  ZipLong    sig    =    new    ZipLong(lfh    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
43	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh_LEN);	  ZipLong    sig    =    new    ZipLong(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
44	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.versionMadeBy);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.versionMadeBy);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.versionMadeBy);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
45	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.inputStream);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.inputStream);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
46	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  4);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  4);	  ZipLong    sig    =    new    ZipLong(lfh,    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
47	[BUG]  [BUGGY]  Inflater  sig  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  Inflater  sig  =  getNextZipEntry();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  sig  =  getNextZipEntry();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
48	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  Inflater  inf  =  getNextZipEntry();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inf  =  getNextZipEntry();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
49	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  Inflater  inflater  =  getInflater();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	Inflater  inflater  =  getInflater();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
50	[BUG]  [BUGGY]  ZipLong  sig  =  current.getZipLong();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  current.getZipLong();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  current.getZipLong();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
51	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[LengthOfLastRead];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  byte[]  buf  =  new  byte[LengthOfLastRead];  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[LengthOfLastRead];	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
52	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  false,  0);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  false,  0);	  ZipLong    sig    =    new    ZipLong(lfh,    false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
53	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  WORD);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  WORD);	  ZipLong    sig    =    new    ZipLong(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
54	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh));  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  readFully(lfh));	  ZipLong    sig    =    new    ZipLong(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
55	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.current);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.current);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
56	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.encoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.encoding);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.encoding);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
57	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputPurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputPurposeFlag);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(lfh,  this.inputStream,  this.outputPurposeFlag);	  ZipLong    sig    =    new    ZipLong(lfh,    this.inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
58	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh);	  ZipLong    sig    =    new    ZipLong(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
59	[BUG]  [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  ZipLong  sig  =  new  ZipLong(current,  Lfh.length);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	ZipLong  sig  =  new  ZipLong(current,  Lfh.length);	  ZipLong    sig    =    new    ZipLong(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
60	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  byte[]  buf  =  current.readFully();  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
61	[BUG]  [BUGGY]  byte[]  buf  =  current.readFully(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  byte[]  buf  =  current.readFully(lfh);  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  current.readFully(lfh);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
62	[BUG]  [BUGGY]  byte[]  buf  =  new  byte[LengthOfLastRead++];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }    [BUGGY]  byte[]  buf  =  new  byte[LengthOfLastRead++];  [BUGGY]    if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	120	120	1	replace	byte[]  buf  =  new  byte[LengthOfLastRead++];	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
