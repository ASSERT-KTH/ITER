bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK,  off);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SHIFT)|    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
2	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off);	  current.setPlatform((    versionMadeBy    ==    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
3	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  <  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  <  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  <  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    ==    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
4	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    ==    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
5	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);	  current.setPlatform((    versionMadeBy    ==    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
6	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  File.separatorChar);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  File.separatorChar);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  File.separatorChar);	  current.setPlatform((    versionMadeBy    ==    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
7	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
8	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SIG)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
9	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SIG)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
10	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK,  off);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SIG)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
11	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy!=  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy!=  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy!=  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SIG)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
12	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK,  off);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SIG)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
13	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK,  off);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SIG)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
14	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
15	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(versionMadeBy);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  lfhLen  =  ZipShort.getValue(versionMadeBy);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  lfhLen  =  ZipShort.getValue(versionMadeBy);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
16	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(versionMadeBy);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(versionMadeBy);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(versionMadeBy);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
17	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
18	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
19	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(versionMadeBy,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(versionMadeBy,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(versionMadeBy,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
20	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(versionMadeBy);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  lfh  =  ZipShort.getValue(versionMadeBy);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  lfh  =  ZipShort.getValue(versionMadeBy);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
21	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  [Delete]  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  [Delete]  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  [Delete]  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    >    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
22	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  1);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
23	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  WORD);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  WORD);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
24	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  1);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
25	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  WORD);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +  WORD);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
26	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
27	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  2);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  2);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
28	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  <  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  <  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  <  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
29	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  +  1);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
30	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
31	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
32	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy!=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy!=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy!=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
33	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  2);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  2);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
34	[BUG]  [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  (versionMadeBy  ==  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  (versionMadeBy  ==  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  (versionMadeBy  ==  ZipFile.NIBLET_MASK);	  current.setPlatform((    VersionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
35	[BUG]  [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  (versionMadeBy!=  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  (versionMadeBy!=  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  (versionMadeBy!=  ZipFile.NIBLET_MASK);	  current.setPlatform((    VersionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
36	[BUG]  [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  versionMadeBy);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  versionMadeBy);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  versionMadeBy);	  current.setPlatform((    VersionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
37	[BUG]  [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  (versionMadeBy  >=  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  (versionMadeBy  >=  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  (versionMadeBy  >=  ZipFile.NIBLET_MASK);	  current.setPlatform((    VersionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
38	[BUG]  [BUGGY]  int  bytesReadFromStream  =  ZipShort.getValue(versionMadeBy);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  bytesReadFromStream  =  ZipShort.getValue(versionMadeBy);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  bytesReadFromStream  =  ZipShort.getValue(versionMadeBy);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
39	[BUG]  [BUGGY]  int  fileNameLen  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  fileNameLen  =  ZipShort.getValue(lfh,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  fileNameLen  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
40	[BUG]  [BUGGY]  int  bytesReadFromStream  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  bytesReadFromStream  =  ZipShort.getValue(lfh,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  bytesReadFromStream  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
41	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  0);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  0);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
42	[BUG]  [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  versionMadeBy);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  versionMadeBy);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  versionMadeBy);	  current.setPlatform((    VersionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
43	[BUG]  [BUGGY]  current.setPlatform((  VersionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  VersionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  VersionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK);	  current.setPlatform((    VersionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
44	[BUG]  [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  1);	  current.setPlatform((    VersionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
45	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  0);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  0);	  current.setPlatform((    versionMadeBy!=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
46	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  2);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK  -  2);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
47	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)|    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
48	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK  +  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)|  ZipFile.NIBLET_MASK  +  1);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)|    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
49	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  lfh);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  lfh);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
50	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  <  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  <  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  <  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
51	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK  -  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK  -  1);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SIG)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
52	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK  +  1);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  ZipFile.NIBLET_MASK  +  1);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SIG)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
53	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_LEN)&  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_LEN)&  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_LEN)&  ZipFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    ==    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
54	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZIPFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZIPFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  ==  ZipFile.BYTE_SHIFT)&  ZIPFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    ==    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
55	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SIG)|  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SIG)|  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SIG)|  ZipFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)|    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
56	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(versionMadeBy);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(versionMadeBy);  current.setLength(lengthOfLastRead);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(versionMadeBy);  current.setLength(lengthOfLastRead);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
57	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >=  0)  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >=  0)  {  return  current;  }  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >=  0)  {  return  current;  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
58	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)|  ZipFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)|  ZipFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)|  ZipFile.NIBLET_MASK);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SHIFT)|    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
59	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >=  ZipFile.BYTE_SHIFT)&  ZipFile.NIBLET_MASK,  off  +);	  current.setPlatform((    versionMadeBy    >=    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
60	[BUG]  [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  0xff);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  0xff);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  versionMadeBy  >>  ZipFile.BYTE_SIG)&  0xff);	  current.setPlatform((    versionMadeBy    >>    ZipFile.BYTE_SIG)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
61	[BUG]  [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZIPFile.NIBLET_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZIPFile.NIBLET_MASK);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  ZIPFile.NIBLET_MASK);	  current.setPlatform((    VersionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
62	[BUG]  [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;    [BUGGY]  current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  0);  [BUGGY]    &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	134	135	1	replace	current.setPlatform((  VersionMadeBy  >>  ZipFile.BYTE_SHIFT)&  0);	  current.setPlatform((    VersionMadeBy    >>    ZipFile.BYTE_SHIFT)&    ZipFile.NIBLET_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
