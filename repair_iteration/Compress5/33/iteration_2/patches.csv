bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashDefined  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashDefined  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashDefined  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;	  hasDataDescriptor    =    (hashDefined    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
2	[BUG]  [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
3	[BUG]  [BUGGY]  hasDataDescriptor  =(hasEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hasEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hasEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
4	[BUG]  [BUGGY]  hasDataDescriptor  =(int)ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(int)ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(int)ZipArchiveOutputStream.EFS_DEFAULT)!=  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
5	[BUG]  [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
6	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
7	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead  +  1);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead  +  1);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
8	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(entryEncoding)  {  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
9	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
10	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead  -  1);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead  -  1);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
11	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
12	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECEMBER    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
13	[BUG]  [BUGGY]  hasDataDescriptor  &=  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  &=  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  &=  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECEMBER    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
14	[BUG]  [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECEMBER    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
15	[BUG]  [BUGGY]  hasDataDescriptor?  ZipArchiveOutputStream.EFS_DECEMBER  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor?  ZipArchiveOutputStream.EFS_DECEMBER  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor?  ZipArchiveOutputStream.EFS_DECEMBER  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECEMBER    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
16	[BUG]  [BUGGY]  hasDataDescriptor  |=  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  |=  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  |=  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECEMBER    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
17	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag  +  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag  +  1;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECEMBER    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
18	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
19	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
20	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
21	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
22	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
23	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
24	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setLength(lengthOfLastRead);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
25	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
26	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
27	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
28	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
29	[BUG]  [BUGGY]  hasDataDescriptor  =  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  hasDataDescriptor    =    (zipEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
30	[BUG]  [BUGGY]  hasDataDescriptor  =  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  hasDataDescriptor    =    (zipEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
31	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;	  hasDataDescriptor    =    (zipEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
32	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;	  hasDataDescriptor    =    (hashFlag    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
33	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
34	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  1;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
35	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  2;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  2;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
36	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)  >>  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
37	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)+  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)+  1;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
38	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)  >=  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
39	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  File.separator)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  File.separator)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  File.separator)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    File.separator)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
40	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  File.separator)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  File.separator)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  File.separator)!=  0;	  hasDataDescriptor    =    (hasEFS    &    File.separator)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
41	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  File.separator)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  File.separator)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  File.separator)  >=  0;	  hasDataDescriptor    =    (hasEFS    &    File.separator)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
42	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  File.separator)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  File.separator)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  File.separator)  >>  0;	  hasDataDescriptor    =    (hasEFS    &    File.separator)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
43	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
44	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
45	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
46	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)+  1;	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
47	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
48	[BUG]  [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
49	[BUG]  [BUGGY]  hasDataDescriptor  =(hasEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hasEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hasEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
50	[BUG]  [BUGGY]  hasDataDescriptor  =(int)ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(int)ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(int)ZipArchiveOutputStream.EFS_DECEMBER)!=  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
51	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
52	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  >=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
53	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
54	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  >>  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
55	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  >=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
56	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    8)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
57	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_8)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_8)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_8)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    8)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
58	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
59	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  1;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
60	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)  >>  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
61	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  2;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  2;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
62	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)  >=  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
63	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)+  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)+  1;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
64	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
65	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
66	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  1;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
67	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
68	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  2;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  2;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
69	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)+  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)+  1;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
70	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_8)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_8)!=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
71	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_8)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_8)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_8)!=  1;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
72	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
73	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)  >=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
74	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
75	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
76	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
77	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  1;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
78	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  2;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  2;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
79	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)+  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)+  1;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
80	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DECLARATION)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
81	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DECLARATION)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
82	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
83	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  1;	  hasDataDescriptor    =    (entryEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
84	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashEFS  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashEFS  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashEFS  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  hasDataDescriptor    =    (hashEFS    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
85	[BUG]  [BUGGY]  hasDataDescriptor  =  (current  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;	  hasDataDescriptor    =    (current    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
86	[BUG]  [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
87	[BUG]  [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
88	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  ==  0;	  hasDataDescriptor    =    (current.getMethod(ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
89	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION,  entryEncoding)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION,  entryEncoding)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION,  entryEncoding)!=  0;	  hasDataDescriptor    =    (current.getMethod(ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
90	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >=  0;	  hasDataDescriptor    =    (current.getMethod(ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
91	[BUG]  [BUGGY]  hasDataDescriptor  =  entryEncoding.getMethod(ZipArchiveOutputStream.FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  entryEncoding.getMethod(ZipArchiveOutputStream.FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  entryEncoding.getMethod(ZipArchiveOutputStream.FUNCTION)!=  0;	  hasDataDescriptor    =    (current.getMethod(ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
92	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >>  0;	  hasDataDescriptor    =    (current.getMethod(ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
93	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod(ZipArchiveOutputStream.FUNCTION)  ==  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod(ZipArchiveOutputStream.FUNCTION)  ==  0);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod(ZipArchiveOutputStream.FUNCTION)  ==  0);	  hasDataDescriptor    =    (current.getMethod(ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
94	[BUG]  [BUGGY]  hasDataDescriptor  =  (!hasEFS  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (!hasEFS  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (!hasEFS  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_FLAG)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
95	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  |  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  |  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  |  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_FLAG)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
96	[BUG]  [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
97	[BUG]  [BUGGY]  hasDataDescriptor  =(hash  +  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hash  +  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hash  +  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
98	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.FUNCTION)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.FUNCTION)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
99	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.FUNCTION)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.FUNCTION)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.FUNCTION)  >=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.FUNCTION)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
100	[BUG]  [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
101	[BUG]  [BUGGY]  hasDataDescriptor  =(int)ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(int)ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(int)ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
102	[BUG]  [BUGGY]  hasDataDescriptor  =(versionMadeBy  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(versionMadeBy  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(versionMadeBy  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
103	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;	  hasDataDescriptor    =    (currentEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
104	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;	  hasDataDescriptor    =    (currentEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
105	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;	  hasDataDescriptor    =    (currentEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
106	[BUG]  [BUGGY]  hasDataDescriptor  =  entryEncoding!=  ZipArchiveOutputStream.EFS_DEFAULT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  entryEncoding!=  ZipArchiveOutputStream.EFS_DEFAULT;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  entryEncoding!=  ZipArchiveOutputStream.EFS_DEFAULT;	  hasDataDescriptor    =    (currentEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
107	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
108	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)  >=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
109	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
110	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  +  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  +  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  +  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
111	[BUG]  [BUGGY]  hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =(isEFS?    generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
112	[BUG]  [BUGGY]  hasDataDescriptor  =(!hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(!hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(!hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =(isEFS?    generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
113	[BUG]  [BUGGY]  hasDataDescriptor  =(isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  hasDataDescriptor    =(isEFS?    generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
114	[BUG]  [BUGGY]  hasDataDescriptor  =(!isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(!isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(!isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =(isEFS?    generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
115	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;	  hasDataDescriptor    =    (current.getMethod()    ==    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
116	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  0;	  hasDataDescriptor    =    (current.getMethod()    ==    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
117	[BUG]  [BUGGY]  hasDataDescriptor  =  entryEncoding.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  entryEncoding.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  entryEncoding.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  hasDataDescriptor    =    (current.getMethod()    ==    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
118	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;	  hasDataDescriptor    =    (current.getMethod()    ==    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
119	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  1;	  hasDataDescriptor    =    (current.getMethod()    ==    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
120	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.FUNCTION)  ==  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.FUNCTION)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
121	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.FUNCTION)  ==  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.FUNCTION)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
122	[BUG]  [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  hasDataDescriptor    =    (current    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
123	[BUG]  [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;	  hasDataDescriptor    =    (current    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
124	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashDefined  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashDefined  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashDefined  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;	  hasDataDescriptor    =    (hashDefined    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
125	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;	  hasDataDescriptor    =    (currentMadeBy    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
126	[BUG]  [BUGGY]  hasDataDescriptor  =  entryEncoding!=  ZipArchiveOutputStream.FUNCTION;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  entryEncoding!=  ZipArchiveOutputStream.FUNCTION;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  entryEncoding!=  ZipArchiveOutputStream.FUNCTION;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
127	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.FUNCTION)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
128	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.UTF8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.UTF8)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.UTF8)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
129	[BUG]  [BUGGY]  hasDataDescriptor  =(isEFS  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(isEFS  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(isEFS  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  hasDataDescriptor    =(isEFS    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
130	[BUG]  [BUGGY]  hasDataDescriptor  =(!hasEFS  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(!hasEFS  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(!hasEFS  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =(isEFS    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
131	[BUG]  [BUGGY]  hasDataDescriptor  =(fileNameLen  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(fileNameLen  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(fileNameLen  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =(isEFS    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
132	[BUG]  [BUGGY]  hasDataDescriptor  =(isEFS  |  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(isEFS  |  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(isEFS  |  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =(isEFS    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
133	[BUG]  [BUGGY]  hasDataDescriptor  =(hasEFS  &  ZipEncodingHelper.UTF8)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hasEFS  &  ZipEncodingHelper.UTF8)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hasEFS  &  ZipEncodingHelper.UTF8)  ==  0;	  hasDataDescriptor    =(hasEFS    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
134	[BUG]  [BUGGY]  hasDataDescriptor  =(isEFS  &  ZipEncodingHelper.UTF8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(isEFS  &  ZipEncodingHelper.UTF8)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(isEFS  &  ZipEncodingHelper.UTF8)!=  0;	  hasDataDescriptor    =(hasEFS    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
135	[BUG]  [BUGGY]  hasDataDescriptor  =(!hasEFS  &  ZipEncodingHelper.UTF8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(!hasEFS  &  ZipEncodingHelper.UTF8)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(!hasEFS  &  ZipEncodingHelper.UTF8)!=  0;	  hasDataDescriptor    =(hasEFS    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
136	[BUG]  [BUGGY]  hasDataDescriptor  =(hasEFS  &  ZipEncodingHelper.UTF8)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hasEFS  &  ZipEncodingHelper.UTF8)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hasEFS  &  ZipEncodingHelper.UTF8)  >>  0;	  hasDataDescriptor    =(hasEFS    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
137	[BUG]  [BUGGY]  hasDataDescriptor  =(hasEFS  &  ZipEncodingHelper.UTF8)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hasEFS  &  ZipEncodingHelper.UTF8)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hasEFS  &  ZipEncodingHelper.UTF8)!=  1;	  hasDataDescriptor    =(hasEFS    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
138	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
139	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)  >=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
140	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
141	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
142	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
143	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  1;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
144	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  LFH_LEN;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  LFH_LEN;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
145	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  2;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  2;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
146	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)+  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)+  1;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
147	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  SHORT;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  SHORT;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
148	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.FUNCTION)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.FUNCTION)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.FUNCTION)&  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
149	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;	  hasDataDescriptor    =    (hashDefinition    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
150	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;	  hasDataDescriptor    =    (hashDefinition    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
151	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  entryEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  entryEncoding);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
152	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
153	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
154	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
155	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
156	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  zipEncoding)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  zipEncoding)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  zipEncoding)!=  0;	  hasDataDescriptor    =    (hasEFS    &    5)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
157	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;	  hasDataDescriptor    =    (hashFlag    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
158	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
159	[BUG]  [BUGGY]  hasDataDescriptor  &=  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  &=  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  &=  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
160	[BUG]  [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
161	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag  +  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag  +  1;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
162	[BUG]  [BUGGY]  hasDataDescriptor?  ZipArchiveOutputStream.EFS_DOUBLE  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor?  ZipArchiveOutputStream.EFS_DOUBLE  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor?  ZipArchiveOutputStream.EFS_DOUBLE  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
163	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag,  entryEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag,  entryEncoding);	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
164	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;	  hasDataDescriptor    =    (hashDefinition    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
165	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECLARATION    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
166	[BUG]  [BUGGY]  hasDataDescriptor  &=  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  &=  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  &=  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECLARATION    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
167	[BUG]  [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECLARATION    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
168	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag  +  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag  +  1;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECLARATION    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
169	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag,  entryEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag,  entryEncoding);	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECLARATION    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
170	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  fileNameLen;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  fileNameLen;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  fileNameLen;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECLARATION    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
171	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
172	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;	  hasDataDescriptor    =    (hashFlag    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
173	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
174	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setMethod(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
175	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
176	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
177	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off));  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off));  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off));  current.setMethod(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
178	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off  +  1));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
179	[BUG]  [BUGGY]  hasDataDescriptor  =  (versionMadeBy  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (versionMadeBy  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (versionMadeBy  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =    (currentMadeBy    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
180	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DECEMBER)  ==  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.EFS_DECEMBER)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
181	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION,  entryEncoding)!=  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION,  entryEncoding)!=  0);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION,  entryEncoding)!=  0);	  hasDataDescriptor    =    (current.getMethod(ZipArchiveOutputStream.FUNCTION)!=    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
182	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >=  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >=  0);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >=  0);	  hasDataDescriptor    =    (current.getMethod(ZipArchiveOutputStream.FUNCTION)!=    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
183	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >>  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >>  0);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION)  >>  0);	  hasDataDescriptor    =    (current.getMethod(ZipArchiveOutputStream.FUNCTION)!=    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
184	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  1);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
185	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off)+  1;	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
186	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off)-  1;	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
187	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  2);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
188	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
189	[BUG]  [BUGGY]  final  int  lfh  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lfh  =  ZipShort.getValue(lfh,  off);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lfh  =  ZipShort.getValue(lfh,  off);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
190	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_3)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_3)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_3)!=  0;	  hasDataDescriptor    =    (hasEFS    &    3)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
191	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_STANDARD)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_STANDARD)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_STANDARD)!=  0;	  hasDataDescriptor    =    (hasEFS    &    3)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
192	[BUG]  [BUGGY]  hasDataDescriptor  =(int)ZipArchiveOutputStream.FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(int)ZipArchiveOutputStream.FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(int)ZipArchiveOutputStream.FUNCTION)!=  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
193	[BUG]  [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.FUNCTION)  ==  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
194	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  >=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DEFAULT)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
195	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  hasDataDescriptor    =    (hashFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
196	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
197	[BUG]  [BUGGY]  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
198	[BUG]  [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  :  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
199	[BUG]  [BUGGY]  hasDataDescriptor  &=  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  &=  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  &=  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
200	[BUG]  [BUGGY]  hasDataDescriptor  |=  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  |=  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  |=  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
201	[BUG]  [BUGGY]  hasDataDescriptor  &&  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  &&  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  &&  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
202	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS  |  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS  |  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS  |  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
203	[BUG]  [BUGGY]  int  lfhLen  =  entryEncoding.length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  entryEncoding.length;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  entryEncoding.length;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
204	[BUG]  [BUGGY]  final  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
205	[BUG]  [BUGGY]  int  lfhLen  =  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  entryEncoding;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
206	[BUG]  [BUGGY]  long  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  long  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	long  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
207	[BUG]  [BUGGY]  int  lfhLen  =  EntryEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  EntryEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  EntryEncodingHelper.UTF8_ZIP_ENCODING;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
208	[BUG]  [BUGGY]  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding.length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding.length;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding.length;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
209	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
210	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.UTF8_ZIP_ENCODING)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.UTF8_ZIP_ENCODING)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.UTF8_ZIP_ENCODING)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZIPEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
211	[BUG]  [BUGGY]  final  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
212	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
213	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(entryEncoding!=  null)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(entryEncoding!=  null)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  }	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
214	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
215	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
216	[BUG]  [BUGGY]  long  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  long  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	long  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
217	[BUG]  [BUGGY]  hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  isEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  isEFS;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  isEFS;	  hasDataDescriptor    =(isEFS?    generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0    :    isEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
218	[BUG]  [BUGGY]  hasDataDescriptor  =(!hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  isEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(!hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  isEFS;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(!hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  isEFS;	  hasDataDescriptor    =(isEFS?    generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0    :    isEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
219	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    lengthOfLastRead));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
220	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    lengthOfLastRead));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
221	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    lengthOfLastRead));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
222	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    lengthOfLastRead));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
223	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead  +  1));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead  +  1));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    lengthOfLastRead));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
224	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off));  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off));  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off));  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    lengthOfLastRead));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
225	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
226	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off)+  1;	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
227	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
228	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off)-  1;	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
229	[BUG]  [BUGGY]  final  int  lfhLen  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lfhLen  =  ZipShort.getValue(lfh,  off);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lfhLen  =  ZipShort.getValue(lfh,  off);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
230	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;	  hasDataDescriptor    =    (hashDefinition    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
231	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_FLAG)!=  1;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_FLAG)!=    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
232	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead    +    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
233	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  SHORT);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  SHORT);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead    +    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
234	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead    +    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
235	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead    +    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
236	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  |  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
237	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.EFS_DEFAULT)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
238	[BUG]  [BUGGY]  hasDataDescriptor  =(currentMadeBy  &  ZipArchiveOutputStream.FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(currentMadeBy  &  ZipArchiveOutputStream.FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(currentMadeBy  &  ZipArchiveOutputStream.FUNCTION)!=  0;	  hasDataDescriptor    =(hashFlag    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
239	[BUG]  [BUGGY]  hasDataDescriptor  =(hashFlag  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hashFlag  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hashFlag  &  ZipArchiveOutputStream.FUNCTION)  ==  0;	  hasDataDescriptor    =(hashFlag    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
240	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  entryEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  entryEncoding);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
241	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
242	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasEFS);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasEFS);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
243	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
244	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
245	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECLARATION)  ==  0;	  hasDataDescriptor    =    (hashFlag    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
246	[BUG]  [BUGGY]  hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)  ==  0;	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
247	[BUG]  [BUGGY]  hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)!=  1;	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
248	[BUG]  [BUGGY]  hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)  >>  0;	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
249	[BUG]  [BUGGY]  hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)  >=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(entryEncoding  &  ZipEncodingHelper.UTF8)  >=  0;	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
250	[BUG]  [BUGGY]  hasDataDescriptor  =(entryEncoding  +  ZipEncodingHelper.UTF8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(entryEncoding  +  ZipEncodingHelper.UTF8)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(entryEncoding  +  ZipEncodingHelper.UTF8)!=  0;	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
251	[BUG]  [BUGGY]  hasDataDescriptor  =  entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  entryEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;	  hasDataDescriptor    =    (currentEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
252	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DEFAULT)  ==  0;	  hasDataDescriptor    =    (currentEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
253	[BUG]  [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.FUNCTION)!=  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
254	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  3);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  3);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
255	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  4);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  4);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
256	[BUG]  [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
257	[BUG]  [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag  +  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag  +  1;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
258	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag  +  2;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag  +  2;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
259	[BUG]  [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(current!=  null)  {  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
260	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
261	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  1)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  1)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  1)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    1)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
262	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
263	[BUG]  [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead    +    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
264	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead    +    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
265	[BUG]  [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.FUNCTION)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.FUNCTION)  ==  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.FUNCTION)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
266	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  LFH_LEN;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)&  LFH_LEN;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
267	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)  [Delete]  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)  [Delete]  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECLARATION)  [Delete]  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
268	[BUG]  [BUGGY]  hasDataDescriptor  =  entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  entryEncoding  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;	  hasDataDescriptor    =    (zipEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
269	[BUG]  [BUGGY]  hasDataDescriptor  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  hasDataDescriptor    =    (zipEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
270	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.FUNCTION)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
271	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.FIRST)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.FIRST)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.FIRST)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
272	[BUG]  [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
273	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  LFH_LEN)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  LFH_LEN)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  LFH_LEN)!=  0;	  hasDataDescriptor    =    (hasEFS    &    2)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
274	[BUG]  [BUGGY]  hasDataDescriptor  =(current  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
275	[BUG]  [BUGGY]  hasDataDescriptor  =(hash  +  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hash  +  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hash  +  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
276	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
277	[BUG]  [BUGGY]  hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  hasDataDescriptor    =(isEFS?    generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
278	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  3);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  3);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
279	[BUG]  [BUGGY]  int  lfhLen  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
280	[BUG]  [BUGGY]  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
281	[BUG]  [BUGGY]  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
282	[BUG]  [BUGGY]  int  lfhLen  =  entryEncoding.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  entryEncoding.getLength();  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  entryEncoding.getLength();	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
283	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  0)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  0)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  0)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    8)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
284	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  5)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  5)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  5)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    8)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
285	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  3)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  3)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  3)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    8)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
286	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZIPEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZIPEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZIPEncodingHelper.UTF8_ZIP_ENCODING)  ==  0;	  hasDataDescriptor    =    (entryEncoding    &    ZIPEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
287	[BUG]  [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
288	[BUG]  [BUGGY]  hasDataDescriptor  =(hash  &  ZipEncodingHelper.UTF8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hash  &  ZipEncodingHelper.UTF8)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hash  &  ZipEncodingHelper.UTF8)!=  0;	  hasDataDescriptor    =(hasEFS    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
289	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
290	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  1;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
291	[BUG]  [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
292	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  3);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  3);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
293	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  4);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  4);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
294	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  LFH_LEN;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DEFAULT)&  LFH_LEN;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
295	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DEFAULT)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DEFAULT)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DEFAULT)&  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
296	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)  >>  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
297	[BUG]  [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  generalPurposeFlag;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECLARATION    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
298	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  inf;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  inf;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  inf;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECLARATION    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
299	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  GeneralPurposeFlag;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  GeneralPurposeFlag;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  GeneralPurposeFlag;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECLARATION    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
300	[BUG]  [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
301	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  2);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  2);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
302	[BUG]  [BUGGY]  hasDataDescriptor  =(current  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
303	[BUG]  [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
304	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  5)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  5)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  5)!=  1;	  hasDataDescriptor    =    (hasEFS    &    5)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
305	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
306	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  LFH_LEN;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DECEMBER)&  LFH_LEN;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
307	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DECEMBER)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DECEMBER)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DECEMBER)&  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
308	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(!hasEFS)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(!hasEFS)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  }	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
309	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setEncoding(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setEncoding(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setEncoding(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
310	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setZipEncoding(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setZipEncoding(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setZipEncoding(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
311	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  LFH_LEN;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.EFS_DOUBLE)&  LFH_LEN;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
312	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DOUBLE)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DOUBLE)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DOUBLE)&  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
313	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DEFAULT)!=  1;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DEFAULT)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
314	[BUG]  [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
315	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  current.setMethod(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
316	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
317	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
318	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  1;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
319	[BUG]  [BUGGY]  hasDataDescriptor  =(current  &  ZipEncodingHelper.UTF8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current  &  ZipEncodingHelper.UTF8)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current  &  ZipEncodingHelper.UTF8)!=  0;	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
320	[BUG]  [BUGGY]  hasDataDescriptor  =(partitionMadeBy  &  ZipEncodingHelper.UTF8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(partitionMadeBy  &  ZipEncodingHelper.UTF8)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(partitionMadeBy  &  ZipEncodingHelper.UTF8)!=  0;	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
321	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DOUBLE)!=  1;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DOUBLE)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
322	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashEFS  &  ZipArchiveOutputStream.EFS_8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashEFS  &  ZipArchiveOutputStream.EFS_8)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashEFS  &  ZipArchiveOutputStream.EFS_8)!=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
323	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;	  hasDataDescriptor    =    (current.getMethod()    ==    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
324	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;	  hasDataDescriptor    =    (hashFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
325	[BUG]  [BUGGY]  hasDataDescriptor  =(isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  generalPurposeFlag;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  generalPurposeFlag;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  generalPurposeFlag;	  hasDataDescriptor    =(isEFS?    generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0    :    isEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
326	[BUG]  [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  :  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECEMBER    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
327	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  inf;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  inf;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  inf;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECEMBER    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
328	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  zipEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECEMBER    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
329	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  File.separator)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  File.separator)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  File.separator)!=  1;	  hasDataDescriptor    =    (hasEFS    &    File.separator)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
330	[BUG]  [BUGGY]  hasDataDescriptor  =(hash  +  ZipArchiveOutputStream.FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hash  +  ZipArchiveOutputStream.FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hash  +  ZipArchiveOutputStream.FUNCTION)!=  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
331	[BUG]  [BUGGY]  hasDataDescriptor  =(hashFlag  &  ZipArchiveOutputStream.FUNCTION)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hashFlag  &  ZipArchiveOutputStream.FUNCTION)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hashFlag  &  ZipArchiveOutputStream.FUNCTION)  >>  0;	  hasDataDescriptor    =(hashFlag    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
332	[BUG]  [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =(isEFS    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
333	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF9_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF9_ZIP_ENCODING  :  entryEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF9_ZIP_ENCODING  :  entryEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
334	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF7_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF7_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF7_ZIP_ENCODING  :  zipEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
335	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;	  hasDataDescriptor    =    (hashFlag    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
336	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
337	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  1;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
338	[BUG]  [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hashEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)  >>  0;	  hasDataDescriptor    =(hashEFS    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
339	[BUG]  [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.EFS_DOUBLE)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
340	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;	  hasDataDescriptor    =    (hashFlag    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
341	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
342	[BUG]  [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    lengthOfLastRead));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
343	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  }  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    lengthOfLastRead));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
344	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
345	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  SHORT);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  SHORT);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
346	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashDefined  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashDefined  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashDefined  &  ZipArchiveOutputStream.EFS_DECLARATION)  >>  0;	  hasDataDescriptor    =    (hashDefined    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
347	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  >>  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  >>  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  >>  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =    (currentMadeBy    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
348	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  >=  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  >=  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  >=  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =    (currentMadeBy    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
349	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  [Delete]  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  [Delete]  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  [Delete]  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =    (currentMadeBy    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
350	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECLARATION)!=  1;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DECLARATION)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
351	[BUG]  [BUGGY]  long  length  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  long  length  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	long  length  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
352	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  zipEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  zipEncoding);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
353	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  *  lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  *  lengthOfLastRead);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  *  lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead    +    lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
354	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_8)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_8)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_8)  >>  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
355	[BUG]  [BUGGY]  hasDataDescriptor  =(isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  hasEFS;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(isEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0  :  hasEFS;	  hasDataDescriptor    =(isEFS?    generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0    :    isEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
356	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  1;	  hasDataDescriptor    =    (hasEFS    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
357	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  zipEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
358	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  inf;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  inf;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  inf;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
359	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag,  hasEFS);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DOUBLE  :  generalPurposeFlag,  hasEFS);	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DOUBLE    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
360	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding  :  zipEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
361	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1  :  zipEncoding;	  hasDataDescriptor    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
362	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_FUNCTION)!=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
363	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.FIRST)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.FIRST)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.FIRST)!=  0;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
364	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
365	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  ==  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  ==  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  ==  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
366	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
367	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding!=  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding!=  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding!=  ZipArchiveOutputStream.EFS_DEFAULT)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
368	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  1;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  ZipArchiveOutputStream.EFS_DECEMBER)!=  1;	  hasDataDescriptor    =    (hasEFS    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
369	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
370	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
371	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECEMBER)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECEMBER)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DECEMBER)  >>  0;	  hasDataDescriptor    =    (hashFlag    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
372	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  >>  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  >>  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  >>  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =    (currentMadeBy    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
373	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  >=  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  >=  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  >=  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =    (currentMadeBy    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
374	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentMadeBy  [Delete]  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentMadeBy  [Delete]  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentMadeBy  [Delete]  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =    (currentMadeBy    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
375	[BUG]  [BUGGY]  hasDataDescriptor  =(entryEncoding  >>  ZipEncodingHelper.UTF8)&  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(entryEncoding  >>  ZipEncodingHelper.UTF8)&  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(entryEncoding  >>  ZipEncodingHelper.UTF8)&  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
376	[BUG]  [BUGGY]  hasDataDescriptor  =(entryEncoding!=  ZipEncodingHelper.UTF8);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(entryEncoding!=  ZipEncodingHelper.UTF8);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(entryEncoding!=  ZipEncodingHelper.UTF8);	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
377	[BUG]  [BUGGY]  hasDataDescriptor  =(entryEncoding  >>  ZipEncodingHelper.UTF8)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(entryEncoding  >>  ZipEncodingHelper.UTF8)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(entryEncoding  >>  ZipEncodingHelper.UTF8)&  0;	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
378	[BUG]  [BUGGY]  hasDataDescriptor  =(entryEncoding  <  ZipEncodingHelper.UTF8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(entryEncoding  <  ZipEncodingHelper.UTF8)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(entryEncoding  <  ZipEncodingHelper.UTF8)!=  0;	  hasDataDescriptor    =(entryEncoding    &    ZipEncodingHelper.UTF8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
379	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DOUBLE)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DOUBLE)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashFlag  &  ZipArchiveOutputStream.EFS_DOUBLE)  >>  0;	  hasDataDescriptor    =    (hashFlag    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
380	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  zipEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  zipEncoding);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
381	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DECLARATION)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DECLARATION)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()!=  ZipArchiveOutputStream.EFS_DECLARATION)&  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
382	[BUG]  [BUGGY]  char  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  char  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	char  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
383	[BUG]  [BUGGY]  int  lfhLen  =  zipEncoding.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  zipEncoding.UTF8_ZIP_ENCODING;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  zipEncoding.UTF8_ZIP_ENCODING;	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
384	[BUG]  [BUGGY]  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  int    lfhLen    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
385	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag,  hasEFS);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECEMBER  :  generalPurposeFlag,  hasEFS);	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECEMBER    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
386	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.FUNCTION)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
387	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.FUNCTION)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
388	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashDefinition  &  ZipArchiveOutputStream.EFS_DEFAULT)  >>  0;	  hasDataDescriptor    =    (hashDefinition    &    ZipArchiveOutputStream.EFS_DEFAULT)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
389	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashDefined  |  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashDefined  |  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashDefined  |  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;	  hasDataDescriptor    =    (hashDefined    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
390	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
391	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DOUBLE)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DOUBLE)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
392	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
393	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
394	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  ==  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  ==  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  ==  ZipArchiveOutputStream.EFS_DECEMBER)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECEMBER)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
395	[BUG]  [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  ZipShort.getValue(lfh,  off)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  ZipShort.getValue(lfh,  off)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(current.getMethod()  ==  ZipArchiveOutputStream.FUNCTION)&  ZipShort.getValue(lfh,  off)!=  0;	  hasDataDescriptor    =(current.getMethod()    ==    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
396	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod()!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod()!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod()!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  0;	  hasDataDescriptor    =    (current.getMethod()    ==    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
397	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  2;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)&  2;	  hasDataDescriptor    =    (current.getMethod()    ==    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
398	[BUG]  [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (currentEncoding  &  ZipArchiveOutputStream.EFS_DOUBLE)  ==  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.EFS_DOUBLE)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
399	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
400	[BUG]  [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION),  hasEFS);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (current.getMethod(ZipArchiveOutputStream.FUNCTION),  hasEFS);	  hasDataDescriptor    =    (current.getMethod(ZipArchiveOutputStream.FUNCTION)!=    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
401	[BUG]  [BUGGY]  hasDataDescriptor  =  (hasEFS  &  2)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hasEFS  &  2)  ==  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hasEFS  &  2)  ==  0;	  hasDataDescriptor    =    (hasEFS    &    8)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
402	[BUG]  [BUGGY]  hasDataDescriptor  =(int)ZipArchiveOutputStream.FUNCTION!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(int)ZipArchiveOutputStream.FUNCTION!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(int)ZipArchiveOutputStream.FUNCTION!=  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
403	[BUG]  [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.FUNCTION)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.FUNCTION)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hash  &  ZipArchiveOutputStream.FUNCTION)  >>  0;	  hasDataDescriptor    =(hash    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
404	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  SHORT);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
405	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off).length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off).length;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off).length;	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
406	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  >>  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZIPEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
407	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZIPEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
408	[BUG]  [BUGGY]  hasDataDescriptor  =  (hashCode  &  ZipArchiveOutputStream.FUNCTION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (hashCode  &  ZipArchiveOutputStream.FUNCTION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (hashCode  &  ZipArchiveOutputStream.FUNCTION)!=  0;	  hasDataDescriptor    =    (genericPurposeFlag    &    ZipArchiveOutputStream.FUNCTION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
409	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off).length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off).length;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off).length;	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
410	[BUG]  [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  zipEncoding;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  hasEFS?  ZipArchiveOutputStream.EFS_DECLARATION  :  zipEncoding;	  hasDataDescriptor    =    hasEFS?    ZipArchiveOutputStream.EFS_DECLARATION    :    generalPurposeFlag;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
411	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  >>  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
412	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
413	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
414	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  >=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  >=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  >=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  >>  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)    >>    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
415	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  >>  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
416	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  <  ZipArchiveOutputStream.EFS_DECLARATION)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipArchiveOutputStream.EFS_DECLARATION)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
417	[BUG]  [BUGGY]  hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =(hasEFS?  generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;	  hasDataDescriptor    =(isEFS?    generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
418	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding  <  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding  <  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
419	[BUG]  [BUGGY]  hasDataDescriptor  =  (entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;      [BUGGY]  hasDataDescriptor  =  (entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;  [BUGGY]        off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	142	142	1	replace	hasDataDescriptor  =  (entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)!=  0;	  hasDataDescriptor    =    (entryEncoding    &    ZipEncodingHelper.UTF8_ZIP_ENCODING)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
