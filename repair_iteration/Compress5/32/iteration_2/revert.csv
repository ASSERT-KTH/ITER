projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileNameLen;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=generalPurposeFlag?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=userEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding.hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileName;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current.getMethod();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=userDescriptor?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userDescriptor+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(!hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(!hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(!hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}else{hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileNameLen+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=zipEncoding+hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+1L;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(!hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+3;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS){hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=generalPurposeFlag?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,user);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileName+3;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+8L;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileName;current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off),hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off+2));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off)+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS&&current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS){if(!current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(zipEncoding,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}else{hasEFS?ZipEncodingHelper.UTF8_ZIP_EN
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}else{hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEn
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS&&current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS){if(!current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}else{hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}else{hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFs;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:newZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:newZipEncoding(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:newZipEncoding(0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding+hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+1L;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=zipEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=userEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFs?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current.getMethod();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current.getEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current.getParent();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current.getRawClass();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current.getDescriptor();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:codeDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(versionMadeBy+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(versionMadeBy,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(currentMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(versionMadeBy,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(mainPurposeFlag);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(currentMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding.hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileName;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=zipEncoding.hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:userDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding.hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding.hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=lfh.hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding.hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag,hasEFS+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=generalPurposeFlag?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZIPEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=generalPurposeFlag?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+3;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userDescriptor+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=userDescriptor?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userDescriptor+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileNameLen;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=current?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileName;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off+1));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipDescriptor;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZIPEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.UTF8_ZIP_ENCODING+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(mainPurposeFlag);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=generalPurposeFlag?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=generalPurposeFlag&ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=generalPurposeFlag|ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=userEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS){if(!current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(lfh,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipShort.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipShort.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipShort.getValue(lfh,off-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipShort.getValue(lfh,off+1,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipShort.getValue(lfh,off)+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off),hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalintlengthOfLastRead=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140longlengthOfLastRead=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileName+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(!hasEFS){hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS+zipEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS+zipEncoding.length?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS+zipEncoding|ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=zipEncoding+hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileNameLen;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileName;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS&&current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEn
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=userDescriptor?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:source;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileNameLen+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(versionMadeBy+8);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(versionMadeBy+1,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(versionMadeBy+3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFs?ZipEncodingHelper.UTF8_ZIP_ENCODING:userDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+1;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setToolTip(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+6;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off)+LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:source;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.UTF9_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.UTF8_ZIP_ENCODING+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag,hasEFS)+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipShort.getValue(lfh,off+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:userEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.entryEncoding;current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setToolTip(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileNameLen+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.UTF8_ZIP_ENCODING+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(current!=null){if(!hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS+zipEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS|zipEncoding+hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}else{hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(current!=null){if(!hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}else{hasEFS?ZipEncodingHelper.UTF8_ZIP_EN
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}else{hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEn
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=generalPurposeFlag?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=generalPurposeFlag?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding<<ZipEncodingHelper.UTF8_ZIP_ENCODING?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding!=null?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding==null?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding.hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasDataDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140inthasEFS=ZipShort.getValue(lfh,off);off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(zipEncoding,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current.getTarget();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current.getAccessor();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS&&hasDataDescriptor){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS&&hasDataDescriptor){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off+2));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.DEFAULT_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.UTF8_ZIP_ENCODING,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS&&hasDataDescriptor){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS+zipEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS&&hasDataDescriptor){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS&&current.getMethod(ZipShort.getValue(lfh,off))>0){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING+1:userDescriptor+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userDescriptor+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;hasDataDescriptor=(generalPurposeFlag&8)!=0;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8):generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(this.zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+3;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off));hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off),hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZipEncodingHelper.UTF8_ZIP_ENCODING);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off),hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off));hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZipEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS&&hasDataDescriptor){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}else{hasEFS?ZipEncodingHelper.UTF8_ZIP_EN
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding,current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+1;current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag&0;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING+1:zipEncoding+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current.getMethod());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasDataDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS){finalZipEncodingentryEncoding=generalPurposeFlag?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+8;
