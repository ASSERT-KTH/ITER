projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileNameLen;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=generalPurposeFlag?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=userEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=zipEncoding.hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileName;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current.getMethod();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=userDescriptor?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userDescriptor+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(!hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(!hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(!hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}else{hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileNameLen+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=zipEncoding+hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasEFS+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=isEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+1L;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(!hasEFS){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140intlengthOfLastRead=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140HasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140staticfinalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding+3;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140if(hasEFS){hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java140finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF9_ZIP_ENCODING:zipEncoding;
