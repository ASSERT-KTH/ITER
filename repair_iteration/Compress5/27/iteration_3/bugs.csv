bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
2	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD,  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD,  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
3	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  2,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  2,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  2,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
4	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD,  current,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD,  current,  bytesReadFromStream);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD,  current,  bytesReadFromStream);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
5	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  3,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  3,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  3,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
6	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current,  bytesReadFromStream);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current,  bytesReadFromStream);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
7	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current,  sig);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current,  sig);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
8	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current,  false);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current,  false);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
9	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  SHORT,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  SHORT,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  SHORT,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
10	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD,  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD,  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
11	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD,  current,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD,  current,  bytesReadFromStream);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD,  current,  bytesReadFromStream);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
12	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  2,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  2,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  2,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
13	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.length);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.length);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
14	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.toCharArray());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.toCharArray());  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.toCharArray());	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
15	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.toString());  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.toString());	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
16	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  WORD);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
17	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
18	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  current,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  current,  bytesReadFromStream);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  current,  bytesReadFromStream);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
19	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  /  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  /  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  /  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    *    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
20	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD  *  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD  *  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD  *  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    *    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
21	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  WORD);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
22	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	lfh  =  ZipShort.getValue(lfh,  current);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
23	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  1);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
24	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	lfh  =  ZipShort.getValue(lfh,  WORD);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
25	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(current,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  lfh  =  ZipShort.getValue(current,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	lfh  =  ZipShort.getValue(current,  off);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
26	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(sig,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  lfh  =  ZipShort.getValue(sig,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	lfh  =  ZipShort.getValue(sig,  off);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
27	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
28	[BUG]  [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  currentMadeBy  =  ZipShort.getValue(lfh,  off);	  int    currentMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
29	[BUG]  [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  currentMadeBy  =  ZipShort.getValue(lfh,  off  +  1);	  int    currentMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
30	[BUG]  [BUGGY]  final  int  currentMadeBy  =  ZipShort.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  currentMadeBy  =  ZipShort.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  currentMadeBy  =  ZipShort.getValue(lfh,  current);	  int    currentMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
31	[BUG]  [BUGGY]  int  currentMadeBy  =  zipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  currentMadeBy  =  zipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  currentMadeBy  =  zipShort.getValue(lfh,  off);	  int    currentMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
32	[BUG]  [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(Lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(Lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  currentMadeBy  =  ZipShort.getValue(Lfh,  off);	  int    currentMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
33	[BUG]  [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(current,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(current,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  currentMadeBy  =  ZipShort.getValue(current,  off);	  int    currentMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
34	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  WORD  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  WORD  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  WORD  -  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
35	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  WORD  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  WORD  -  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  WORD  -  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
36	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  HORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  HORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  HORD);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
37	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
38	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
39	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(current,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(current,  lfh);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(current,  lfh);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
40	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(Lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(Lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(Lfh,  off);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
41	[BUG]  [BUGGY]  final  int  versionMadeBy  =  zipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  zipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  zipShort.getValue(lfh,  off);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
42	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(current,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(current,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(current,  off);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
43	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  /  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  /  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  /  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
44	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  -  SHORT,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  -  SHORT,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  -  SHORT,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
45	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
46	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  -  1,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  -  1,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  -  1,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
47	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  LFH_LEN  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  LFH_LEN  -  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  LFH_LEN  -  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
48	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  0);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  0);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
49	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  WORD);	  int    versionMadeBy    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
50	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  1);	  int    versionMadeBy    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
51	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  -  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  -  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipLong.getValue(lfh,  off  -  WORD);	  int    versionMadeBy    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
52	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipLong.getValue(lfh,  current);	  int    versionMadeBy    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
53	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipLong.getValue(lfh,  WORD);	  int    versionMadeBy    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
54	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  SHORT);	  int    versionMadeBy    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
55	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
56	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
57	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  SHORT);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
58	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  SHORT;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  SHORT;	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
59	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
60	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  WORD  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  WORD  +  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    *    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
61	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  /  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  /  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  /  WORD);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    *    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
62	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
63	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  1);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
64	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(lfh,  current);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
65	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(lfh,  WORD);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
66	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(current,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(current,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(current,  off);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
67	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(sig,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(sig,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(sig,  off);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
68	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
69	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  WORD);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
70	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  WORD);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
71	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  current);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
72	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
73	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  LFH_LEN);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  LFH_LEN);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    LFH_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
74	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  LFH_LEN);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  LFH_LEN);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    LFH_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
75	[BUG]  [BUGGY]  int  lengthOfLastRead  =  current.getLength()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  current.getLength()  +  1;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  current.getLength()  +  1;	  int    lengthOfLastRead    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
76	[BUG]  [BUGGY]  int  lengthOfLastRead  =  current.getLength()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  current.getLength()  -  1;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  current.getLength()  -  1;	  int    lengthOfLastRead    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
77	[BUG]  [BUGGY]  int  lengthOfLastRead  =  current.getLength()  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  current.getLength()  +  WORD;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  current.getLength()  +  WORD;	  int    lengthOfLastRead    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
78	[BUG]  [BUGGY]  int  lengthOfLastRead  =  current.getLength()  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  current.getLength()  -  WORD;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  current.getLength()  -  WORD;	  int    lengthOfLastRead    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
79	[BUG]  [BUGGY]  int  lengthOfLastRead  =  sig.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  sig.getLength();  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  sig.getLength();	  int    lengthOfLastRead    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
80	[BUG]  [BUGGY]  int  lengthOfLastRead  =  current.getLength()  *  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  current.getLength()  *  WORD;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  current.getLength()  *  WORD;	  int    lengthOfLastRead    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
81	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  +  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    WORD    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
82	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  SHORT  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  SHORT  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  SHORT  +  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    WORD    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
83	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD  +  1,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD  +  1,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD  +  1,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    WORD    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
84	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >=  ZipFile.BYTE_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >=  ZipFile.BYTE_LEN);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >=  ZipFile.BYTE_LEN);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off);    current.setBase(versionMadeBy    >>    ZipFile.BYTE_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
85	[BUG]  [BUGGY]  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off);    current.setBase(versionMadeBy    >>    ZipFile.BYTE_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
86	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  ==  ZipFile.BYTE_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  ==  ZipFile.BYTE_LEN);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  ==  ZipFile.BYTE_LEN);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off);    current.setBase(versionMadeBy    >>    ZipFile.BYTE_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
87	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off);    current.setBase(versionMadeBy    >>    ZipFile.BYTE_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
88	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy!=  ZipFile.BYTE_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy!=  ZipFile.BYTE_LEN);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy!=  ZipFile.BYTE_LEN);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off);    current.setBase(versionMadeBy    >>    ZipFile.BYTE_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
89	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off);    current.setBase(versionMadeBy    >>    ZipFile.BYTE_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
90	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setPath(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
91	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setPath(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
92	[BUG]  [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  }  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setPath(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
93	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);  current.setPath(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);  current.setPath(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);  current.setPath(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setPath(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
94	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setPath(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setPath(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setPath(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setPath(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
95	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead  +  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead  +  WORD);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setPath(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
96	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(current,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(current,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(current,  off);	  int    versionMadeBy    =    ZipShort.getValue(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
97	[BUG]  [BUGGY]  long  versionMadeBy  =  ZipShort.getValue(current,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  long  versionMadeBy  =  ZipShort.getValue(current,  lfh);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	long  versionMadeBy  =  ZipShort.getValue(current,  lfh);	  int    versionMadeBy    =    ZipShort.getValue(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
98	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(current);	  int    lfh    =    ZipShort.getValue(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
99	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(current,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(current,  lfh);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(current,  lfh);	  int    lfh    =    ZipShort.getValue(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
100	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(Lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(Lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(Lfh,  off);	  int    lfh    =    ZipShort.getValue(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
101	[BUG]  [BUGGY]  final  int  lfh  =  ZipShort.getValue(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  lfh  =  ZipShort.getValue(lfh);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  lfh  =  ZipShort.getValue(lfh);	  int    lfh    =    ZipShort.getValue(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
102	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(lfh,  current);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
103	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(current,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(current,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(current,  off);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
104	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(lfh,  off  +  WORD);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
105	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(lfh,  off  +  1);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
106	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(lfh,  WORD);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
107	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  -  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  -  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(lfh,  off  -  WORD);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
108	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  offset);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(lfh,  offset);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
109	[BUG]  [BUGGY]  long  versionMadeBy  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  long  versionMadeBy  =  ZipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	long  versionMadeBy  =  ZipShort.getValue(lfh,  off);	  long    versionMadeBy    =    ZipShort.getValue(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
110	[BUG]  [BUGGY]  final  long  versionMadeBy  =  ZipShort.getValue(lfh,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  long  versionMadeBy  =  ZipShort.getValue(lfh,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  long  versionMadeBy  =  ZipShort.getValue(lfh,  WORD);	  long    versionMadeBy    =    ZipShort.getValue(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
111	[BUG]  [BUGGY]  short  versionMadeBy  =  ZipShort.getValue(lfh,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  short  versionMadeBy  =  ZipShort.getValue(lfh,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	short  versionMadeBy  =  ZipShort.getValue(lfh,  WORD);	  long    versionMadeBy    =    ZipShort.getValue(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
112	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  current  +  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    current    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
113	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    current    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
114	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  offset  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  offset  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  offset  -  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    current    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
115	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)/  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)/  SHORT;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off)/  SHORT;	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off)-    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
116	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  WORD;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  WORD;	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off)-    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
117	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1)-  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1)-  SHORT;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1)-  SHORT;	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off)-    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
118	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)*  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)*  SHORT;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off)*  SHORT;	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off)-    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
119	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  1;	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off)-    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
120	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)+  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)+  WORD;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off)+  WORD;	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off)-    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
121	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  LFH_LEN;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  LFH_LEN;	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off)-    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
122	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  SHORT  -  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  SHORT  -  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  SHORT  -  WORD);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
123	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  SHORT  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  SHORT  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  SHORT  -  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
124	[BUG]  [BUGGY]  int  versionMadeBy  =  current.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  current.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  current.getValue(lfh,  off);	  int    versionMadeBy    =    zipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
125	[BUG]  [BUGGY]  int  versionMadeBy  =  zipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  zipShort.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  zipShort.getValue(lfh,  off  +  WORD);	  int    versionMadeBy    =    zipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
126	[BUG]  [BUGGY]  int  versionMadeBy  =  zipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  zipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  zipShort.getValue(lfh,  off  +  1);	  int    versionMadeBy    =    zipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
127	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  WORD);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
128	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
129	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  WORD);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
130	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  current);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
131	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  offset);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  offset);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
132	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
133	[BUG]  [BUGGY]  final  long  versionMadeBy  =  ZipShort.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  long  versionMadeBy  =  ZipShort.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  long  versionMadeBy  =  ZipShort.getValue(lfh,  current);	  long    versionMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
134	[BUG]  [BUGGY]  long  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  long  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	long  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1);	  long    versionMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
135	[BUG]  [BUGGY]  short  versionMadeBy  =  ZipShort.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  short  versionMadeBy  =  ZipShort.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	short  versionMadeBy  =  ZipShort.getValue(lfh,  current);	  long    versionMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
136	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT  -  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
137	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  -  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  -  2);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  -  2);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
138	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  WORD  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  WORD  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  WORD  -  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
139	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1,  WORD);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
140	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD,  current);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
141	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
142	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD  -  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD  -  SHORT);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
143	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
144	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  Off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  Off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  Off);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
145	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  offset);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  offset);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
146	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  out);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  out);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  out);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
147	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(Long.MAX_VALUE,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(Long.MAX_VALUE,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(Long.MAX_VALUE,  off);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
148	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  4);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  4);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
149	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(current,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfhLen  =  ZipShort.getValue(current,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfhLen  =  ZipShort.getValue(current,  off);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
150	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  4,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  4,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  4,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
151	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  current  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  current  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  current  +  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
152	[BUG]  [BUGGY]  int  lengthOfLastRead  =  lfh.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  lfh.getLength();  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  lfh.getLength();	  int    lengthOfLastRead    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
153	[BUG]  [BUGGY]  int  lfh  =  zipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  zipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  zipShort.getValue(lfh,  off);	  int    lfh    =    ZipShort.getValue(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
154	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  out);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  out);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(lfh,  out);	  int    lfh    =    ZipShort.getValue(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
155	[BUG]  [BUGGY]  Integer  versionMadeBy  =  ZipShort.getValue(lfh,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Integer  versionMadeBy  =  ZipShort.getValue(lfh,  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Integer  versionMadeBy  =  ZipShort.getValue(lfh,  WORD);	  long    versionMadeBy    =    ZipShort.getValue(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
156	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
157	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  LFH_LEN);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  LFH_LEN);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
158	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  0);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  0);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
159	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1  -  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1  -  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
160	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT  -  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT  -  WORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  SHORT  -  WORD);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
161	[BUG]  [BUGGY]  Integer  versionMadeBy  =  ZipShort.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Integer  versionMadeBy  =  ZipShort.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Integer  versionMadeBy  =  ZipShort.getValue(lfh,  current);	  long    versionMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
162	[BUG]  [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(current,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(current,  lfh);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  currentMadeBy  =  ZipShort.getValue(current,  lfh);	  int    currentMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
163	[BUG]  [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(lfh,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(lfh,  0);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  currentMadeBy  =  ZipShort.getValue(lfh,  0);	  int    currentMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
164	[BUG]  [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
165	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
166	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  -1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  -1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
167	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  0L);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  0L);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  0L);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
168	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD  +  2);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD  +  2);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    WORD    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
169	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)&  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)&  SHORT;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off)&  SHORT;	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off)-    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
170	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  WORD  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  WORD  +  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
171	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD,  current  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD,  current  +  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  WORD,  current  +  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
172	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  2);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  *  2);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    *    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
173	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  *  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  *  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  current  *  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    current    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
174	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  2);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  2);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    current    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
175	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
176	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  2  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  2  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  WORD  *  2  -  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
177	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipLong.getValue(lfh,  off  -  1);	  int    versionMadeBy    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
178	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  2);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipLong.getValue(lfh,  off  +  2);	  int    versionMadeBy    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
179	[BUG]  [BUGGY]  if(sig!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  if(sig!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  }  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	if(sig!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setPath(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
180	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setPath(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
181	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  lfh);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  lfh);	  int    versionMadeBy    =    ZipShort.getValue(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
182	[BUG]  [BUGGY]  int  versionMadeBy  =  zipShort.getValue(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  zipShort.getValue(lfh,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  zipShort.getValue(lfh,  current);	  int    versionMadeBy    =    ZipShort.getValue(current,    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
183	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  4,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  4,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  4,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
184	[BUG]  [BUGGY]  if(current!=  null)  {  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  if(current!=  null)  {  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  }  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	if(current!=  null)  {  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  }	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off);    current.setBase(versionMadeBy    >>    ZipFile.BYTE_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
185	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  fileNameLen);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  fileNameLen);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
186	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  current  -  1);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
187	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  HORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  HORD);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  HORD);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
188	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  this.current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  this.current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  this.current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
189	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  line);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  line);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  -  1,  line);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    -    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
190	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  SHORT);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
191	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  3);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  3);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
192	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  4);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  4);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
193	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(lfh,  off  +  SHORT);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
194	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  -  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(lfh,  off  -  SHORT);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
195	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	Inflater  inf  =  ZipShort.getValue(lfh,  off  +  2);	  Inflater    inf    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
196	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  3);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  3);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
197	[BUG]  [BUGGY]  if(sig.equals(ZipLong.LFH_LEN))  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  if(sig.equals(ZipLong.LFH_LEN))  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  }  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	if(sig.equals(ZipLong.LFH_LEN))  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setPath(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setPath(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
198	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
199	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  2);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
200	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  3);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  3);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
201	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  zipEncoding);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  zipEncoding);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
202	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.substring(1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.substring(1));  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.substring(1));	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
203	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.intValue());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.intValue());  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.intValue());	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
204	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.toUpperCase());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.toUpperCase());  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  sig.toUpperCase());	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
205	[BUG]  [BUGGY]  static  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  static  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	static  final  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);	  final    int    versionMadeBy    =    ZipShort.getValue(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
206	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  SHORT);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    current    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
207	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  current  -  off);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    current    -    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
208	[BUG]  [BUGGY]  long  versionMadeBy  =  ZipShort.getValue(lfh,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  long  versionMadeBy  =  ZipShort.getValue(lfh,  0);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	long  versionMadeBy  =  ZipShort.getValue(lfh,  0);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
209	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off)+  1;	  int    versionMadeBy    =    ZipShort.getValue(lfh,    Off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
210	[BUG]  [BUGGY]  int  lengthOfLastRead  =  this.current.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  this.current.getLength();  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  this.current.getLength();	  int    lengthOfLastRead    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
211	[BUG]  [BUGGY]  int  lengthOfLastRead  =  current.getLength()  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  current.getLength()  -  2;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  current.getLength()  -  2;	  int    lengthOfLastRead    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
212	[BUG]  [BUGGY]  byte  lfh  =  ZipShort.getValue(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  byte  lfh  =  ZipShort.getValue(lfh);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	byte  lfh  =  ZipShort.getValue(lfh);	  int    lfh    =    ZipShort.getValue(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
213	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(line,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lfh  =  ZipShort.getValue(line,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lfh  =  ZipShort.getValue(line,  off);	  int    lfh    =    ZipShort.getValue(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
214	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  SHORT);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
215	[BUG]  [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(lfh,  off  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  currentMadeBy  =  ZipShort.getValue(lfh,  off  -  1);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  currentMadeBy  =  ZipShort.getValue(lfh,  off  -  1);	  int    currentMadeBy    =    ZipShort.getValue(lfh,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
216	[BUG]  [BUGGY]  if(sig.equals(ZipFile.BYTE_LEN))  {  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  if(sig.equals(ZipFile.BYTE_LEN))  {  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  }  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	if(sig.equals(ZipFile.BYTE_LEN))  {  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  }	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off);    current.setBase(versionMadeBy    >>    ZipFile.BYTE_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
217	[BUG]  [BUGGY]  if(current!=  ZipFile.BYTE_LEN)  {  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  if(current!=  ZipFile.BYTE_LEN)  {  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  }  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	if(current!=  ZipFile.BYTE_LEN)  {  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  current.setBase(versionMadeBy  >>  ZipFile.BYTE_LEN);  }	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off);    current.setBase(versionMadeBy    >>    ZipFile.BYTE_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
218	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  2;  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off)-  2;	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off)-    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
219	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  line);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  line);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  1,  line);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
220	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  2);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
221	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  5,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  5,  current);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipShort.getValue(lfh,  off  +  5,  current);	  int    versionMadeBy    =    ZipShort.getValue(lfh,    off    +    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
222	[BUG]  [BUGGY]  short  versionMadeBy  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  short  versionMadeBy  =  ZipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	short  versionMadeBy  =  ZipShort.getValue(lfh,  off);	  long    versionMadeBy    =    ZipShort.getValue(lfh,    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
223	[BUG]  [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();      [BUGGY]  int  versionMadeBy  =  ZipLong.getValue(lfh,  off  -  SHORT);  [BUGGY]      off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	132	132	1	replace	int  versionMadeBy  =  ZipLong.getValue(lfh,  off  -  SHORT);	  int    versionMadeBy    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
