bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  EOF  exception: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  EOF  exception: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  EOF  exception: "  +  e.toString());	  System.err.println(   "UnicodeExtraFields:    EOF    exception:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
2	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  EOF  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  EOF  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  EOF  error: "  +  e.getMessage());	  System.err.println(   "UnicodeExtraFields:    EOF    exception:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
3	[BUG]  [BUGGY]  System.err.println( "ZipExtraFields:  EOF  exception: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "ZipExtraFields:  EOF  exception: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "ZipExtraFields:  EOF  exception: "  +  e.getMessage());	  System.err.println(   "UnicodeExtraFields:    EOF    exception:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
4	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  lfh.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  lfh.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  missing "  +  lfh.getMessage());	  System.err.println(   "UnicodeExtraFields:    missing   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
5	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  missing "  +  e.toString());	  System.err.println(   "UnicodeExtraFields:    missing   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
6	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  lfh,  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  lfh,  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  missing "  +  lfh,  e.getMessage());	  System.err.println(   "UnicodeExtraFields:    missing   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
7	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  missing ",  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  missing ",  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  missing ",  e.getMessage());	  System.err.println(   "UnicodeExtraFields:    missing   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
8	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  source.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  source.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  missing "  +  source.getMessage());	  System.err.println(   "UnicodeExtraFields:    missing   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
9	[BUG]  [BUGGY]  System.err.println( "JZipFailed  to  read  lfh: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JZipFailed  to  read  lfh: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JZipFailed  to  read  lfh: "  +  lfh,  e);	  System.err.println(   "JZipFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
10	[BUG]  [BUGGY]  System.err.println( "ZipFailed  to  read  lfh: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "ZipFailed  to  read  lfh: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "ZipFailed  to  read  lfh: "  +  lfh,  e);	  System.err.println(   "JZipFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
11	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  inf,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  inf,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  inf,  e);	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
12	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  Inflater.toString(inf));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  Inflater.toString(inf));  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  Inflater.toString(inf));	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
13	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  inf  + "n ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  inf  + "n ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  inf  + "n ");	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
14	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  inflater);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  inflater);	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
15	[BUG]  [BUGGY]  System.err.println( "ZipFailed  to  read  lfh: "  +  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "ZipFailed  to  read  lfh: "  +  inf);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "ZipFailed  to  read  lfh: "  +  inf);	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
16	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  entryEncoding.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  entryEncoding.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  entryEncoding.getMessage());	  System.err.println(   "UnicodeExtraFields:   "    +    zipEncoding.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
17	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  zipEncoding.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  zipEncoding.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  zipEncoding.toString());	  System.err.println(   "UnicodeExtraFields:   "    +    zipEncoding.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
18	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  zipEncoding.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  zipEncoding.getName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  zipEncoding.getName());	  System.err.println(   "UnicodeExtraFields:   "    +    zipEncoding.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
19	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  this.entryEncoding.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  this.entryEncoding.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  this.entryEncoding.getMessage());	  System.err.println(   "UnicodeExtraFields:   "    +    zipEncoding.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
20	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  missing "  +  lfh);	  System.err.println(   "UnicodeExtraFields:n   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
21	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e.getMessage());	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
22	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e));  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e));	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
23	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ ",  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ ",  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ ",  e);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
24	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e.toString());	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
25	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  in;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  in;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  in;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    in;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
26	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh);  return  in;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh);  return  in;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  lfh);  return  in;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    in;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
27	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  INVALID;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  INVALID;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  INVALID;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    in;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
28	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_ERROR);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_ERROR);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_ERROR);	  System.err.println(e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
29	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_EXTERN_ERROR);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_EXTERN_ERROR);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_EXTERN_ERROR);	  System.err.println(e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
30	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_MESSAGE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_MESSAGE);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_MESSAGE);	  System.err.println(e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
31	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  SHORT);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  SHORT);	  System.err.println(e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
32	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  e.getMessage());	  System.err.println(e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
33	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  source;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  source;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  source;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    source;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
34	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  this.source;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  this.source;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  this.source;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    source;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
35	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  current;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  current;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  current;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    source;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
36	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: "  +  lfh);  return  source;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: "  +  lfh);  return  source;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: "  +  lfh);  return  source;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    source;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
37	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh);  return  source;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh);  return  source;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  lfh);  return  source;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    source;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
38	[BUG]  [BUGGY]  System.err.println( "JZIPFailed  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JZIPFailed  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JZIPFailed  to  read  lfh: "  +  lfh);	  System.err.println(   "ZipFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
39	[BUG]  [BUGGY]  System.err.println( "CipFailed  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CipFailed  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CipFailed  to  read  lfh: "  +  lfh);	  System.err.println(   "ZipFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
40	[BUG]  [BUGGY]  ||  e.getCause()!=  null)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||  e.getCause()!=  null)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||  e.getCause()!=  null)  {  e.printStackTrace();  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
41	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null)  {  throw  new  EOFException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
42	[BUG]  [BUGGY]  if(e.getCause()!=  null  ||!e.isEnabled())  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null  ||!e.isEnabled())  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null  ||!e.isEnabled())  {  e.printStackTrace();  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
43	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  in.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null)  {  in.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null)  {  in.printStackTrace();  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
44	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e,  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e,  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e,  e.toString());	  System.err.println(   "Unexpected    error:   "    +    e,    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
45	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage(),  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage(),  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e.getMessage(),  e.getMessage());	  System.err.println(   "Unexpected    error:   "    +    e,    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
46	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e,  current.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e,  current.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e,  current.getMessage());	  System.err.println(   "Unexpected    error:   "    +    e,    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
47	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e,  fileNameLen.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e,  fileNameLen.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e,  fileNameLen.getMessage());	  System.err.println(   "Unexpected    error:   "    +    e,    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
48	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e,  source.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e,  source.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e,  source.getMessage());	  System.err.println(   "Unexpected    error:   "    +    e,    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
49	[BUG]  [BUGGY]  FileNameLen  =  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  FileNameLen  =  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	FileNameLen  =  lfh.length();	  fileNameLen    =    lfh.length()    +    4;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
50	[BUG]  [BUGGY]  fileNameLen  =  fh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  fh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  fh.length();	  fileNameLen    =    lfh.length()    +    4;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
51	[BUG]  [BUGGY]  filesReadFromBuffer  =  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  filesReadFromBuffer  =  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	filesReadFromBuffer  =  lfh.length();	  fileNameLen    =    lfh.length()    +    4;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
52	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getInputStream();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getInputStream();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
53	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getOutputFile();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getOutputFile();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
54	[BUG]  [BUGGY]  Inflater  inf  =  this.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  this.getInflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  this.getInflater();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
55	[BUG]  [BUGGY]  Inflater  inf  =  getInflater().getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getInflater().getInputStream();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getInflater().getInputStream();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
56	[BUG]  [BUGGY]  Inflater  inf  =  getInflater().inflate(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getInflater().inflate(lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getInflater().inflate(lfh);	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
57	[BUG]  [BUGGY]  Inflater  inf  =  getInflater().readFully(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getInflater().readFully(lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getInflater().readFully(lfh);	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
58	[BUG]  [BUGGY]  Inflater  inflater  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getNextFileEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getNextFileEntry();	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
59	[BUG]  [BUGGY]  Inflater  inflater  =  getNextInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getNextInflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getNextInflater();	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
60	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getNextZipEntry(current);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getNextZipEntry(current);	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
61	[BUG]  [BUGGY]  Inflater  inflater  =  getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getNextEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getNextEntry();	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
62	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getNextZipEntry(null);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getNextZipEntry(null);	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
63	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e.getMessage());	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
64	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e));  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e));	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
65	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e.toString());	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
66	[BUG]  [BUGGY]  int  lfhLen  =  readFully(lfh,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  readFully(lfh,  bytesReadFromStream);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  readFully(lfh,  bytesReadFromStream);	  int    lfhLen    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
67	[BUG]  [BUGGY]  int  lfhLen  =  readFully(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  readFully(lfh,  off);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  readFully(lfh,  off);	  int    lfhLen    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
68	[BUG]  [BUGGY]  int  lfhLen  =  readFully(lfh,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  readFully(lfh,  offset);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  readFully(lfh,  offset);	  int    lfhLen    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
69	[BUG]  [BUGGY]  int  lfhLen  =  readFully(lfh,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  readFully(lfh,  current);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  readFully(lfh,  current);	  int    lfhLen    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
70	[BUG]  [BUGGY]  int  lfhLen  =  readFully(lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  readFully(lfh.length);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  readFully(lfh.length);	  int    lfhLen    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
71	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: "  +  lfh.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: "  +  lfh.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: "  +  lfh.getMessage());	  System.err.println(   "Failed    to    read    source:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
72	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: "  +  e.toString());	  System.err.println(   "Failed    to    read    source:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
73	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: "  +  fileNameLen.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: "  +  fileNameLen.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: "  +  fileNameLen.getMessage());	  System.err.println(   "Failed    to    read    source:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
74	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: "  +  t.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: "  +  t.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: "  +  t.getMessage());	  System.err.println(   "Failed    to    read    source:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
75	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: "  +  cfg.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: "  +  cfg.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: "  +  cfg.getMessage());	  System.err.println(   "Failed    to    read    source:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
76	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: "  +  fileName.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: "  +  fileName.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: "  +  fileName.getMessage());	  System.err.println(   "Failed    to    read    source:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
77	[BUG]  [BUGGY]  int  lfh  =  current.readFully(lfh,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(lfh,  bytesReadFromStream);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(lfh,  bytesReadFromStream);	  int    lfh    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
78	[BUG]  [BUGGY]  int  lfh  =  current.readFully(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(lfh,  off);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(lfh,  off);	  int    lfh    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
79	[BUG]  [BUGGY]  int  lfh  =  current.readFully(lfh,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(lfh,  offset);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(lfh,  offset);	  int    lfh    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
80	[BUG]  [BUGGY]  int  lfh  =  current.readFully(lfh,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(lfh,  false);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(lfh,  false);	  int    lfh    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
81	[BUG]  [BUGGY]  int  lfh  =  current.readFully(lfh,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(lfh,  1);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(lfh,  1);	  int    lfh    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
82	[BUG]  [BUGGY]  Error.println( "Unexpected  error: "  +  e.toString());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  error: "  +  e.toString());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  error: "  +  e.toString());  return  null;	  System.err.println(   "Unexpected    error:   "    +    e.toString());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
83	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e.toString());  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.toString());  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e.toString());  return  this;	  System.err.println(   "Unexpected    error:   "    +    e.toString());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
84	[BUG]  [BUGGY]  ||  e!=  null)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||  e!=  null)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||  e!=  null)  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
85	[BUG]  [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e  ==  null)  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
86	[BUG]  [BUGGY]  ||(e!=  null  &&  e.getCause()  ==  null))  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||(e!=  null  &&  e.getCause()  ==  null))  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||(e!=  null  &&  e.getCause()  ==  null))  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
87	[BUG]  [BUGGY]  ||(e!=  null  &&!e.hasMoreElement()))  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||(e!=  null  &&!e.hasMoreElement()))  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||(e!=  null  &&!e.hasMoreElement()))  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
88	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e!=  null)  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e!=  null)  {  throw  new  EOFException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
89	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getInflater(e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getInflater(e);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
90	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater().inflate(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getInflater().inflate(lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getInflater().inflate(lfh);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
91	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getInflater(false);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getInflater(false);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
92	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getInflater(source);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getInflater(source);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
93	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater().getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getInflater().getInputStream();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getInflater().getInputStream();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
94	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  new  Inflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  new  Inflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  new  Inflater();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    new    Inflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
95	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh);  return  new  Inflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh);  return  new  Inflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  lfh);  return  new  Inflater();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    new    Inflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
96	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfEntry().length  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfEntry().length  +  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfEntry().length  +  1;	  int    lengthOfLastRead    =    readBytesOfEntry().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
97	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfEntry().length  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfEntry().length  -  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfEntry().length  -  1;	  int    lengthOfLastRead    =    readBytesOfEntry().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
98	[BUG]  [BUGGY]  int  lengthOfLastRead  =  bytesReadFromStream.readBytesOfEntry().length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  bytesReadFromStream.readBytesOfEntry().length;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  bytesReadFromStream.readBytesOfEntry().length;	  int    lengthOfLastRead    =    readBytesOfEntry().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
99	[BUG]  [BUGGY]  int  lengthOfLastRead  =  bytesReadFromStream(readBytesOfEntry().length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  bytesReadFromStream(readBytesOfEntry().length);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  bytesReadFromStream(readBytesOfEntry().length);	  int    lengthOfLastRead    =    readBytesOfEntry().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
100	[BUG]  [BUGGY]  int  lengthOfLastRead  =  bytesReadFromStream().length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  bytesReadFromStream().length;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  bytesReadFromStream().length;	  int    lengthOfLastRead    =    readBytesOfEntry().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
101	[BUG]  [BUGGY]  int  lfhLen  =  current.readFully(lfh,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  current.readFully(lfh,  bytesReadFromStream);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  current.readFully(lfh,  bytesReadFromStream);	  int    lfhLen    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
102	[BUG]  [BUGGY]  int  lfhLen  =  current.readFully(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  current.readFully(lfh,  off);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  current.readFully(lfh,  off);	  int    lfhLen    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
103	[BUG]  [BUGGY]  int  lfhLen  =  current.readFully(lfh,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  current.readFully(lfh,  offset);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  current.readFully(lfh,  offset);	  int    lfhLen    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
104	[BUG]  [BUGGY]  int  lfhLen  =  current.readFully(lfh,  partesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  current.readFully(lfh,  partesReadFromStream);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  current.readFully(lfh,  partesReadFromStream);	  int    lfhLen    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
105	[BUG]  [BUGGY]  int  lfhLen  =  current.readFully(lfh,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  current.readFully(lfh,  false);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  current.readFully(lfh,  false);	  int    lfhLen    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
106	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  null;	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
107	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh);  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh);  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  lfh);  return  this;	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
108	[BUG]  [BUGGY]  Error.println(e, "Failed  to  read  lfh: "  +  lfh);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println(e, "Failed  to  read  lfh: "  +  lfh);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println(e, "Failed  to  read  lfh: "  +  lfh);  return  null;	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
109	[BUG]  [BUGGY]  Error.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  null;	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
110	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Thread.currentThread().interrupt();	  e.printStackTrace(in);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
111	[BUG]  [BUGGY]  e.printStackTrace(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  e.printStackTrace(source);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	e.printStackTrace(source);	  e.printStackTrace(in);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
112	[BUG]  [BUGGY]  inflater.printStackTrace(e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  inflater.printStackTrace(e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	inflater.printStackTrace(e);	  e.printStackTrace(in);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
113	[BUG]  [BUGGY]  fileNameLen.printStackTrace(e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen.printStackTrace(e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen.printStackTrace(e);	  e.printStackTrace(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
114	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return  this;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
115	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e.getMessage());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e.getMessage());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e.getMessage());  return  null;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
116	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e));  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e));  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e));  return  null;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
117	[BUG]  [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  source  error: "  +  e.getMessage());	  System.err.println(   "Unexpected    source    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
118	[BUG]  [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.getMessage());  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.getMessage());  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  source  error: "  +  e.getMessage());  return  this;	  System.err.println(   "Unexpected    source    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
119	[BUG]  [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.toString());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.toString());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  source  error: "  +  e.toString());  return  null;	  System.err.println(   "Unexpected    source    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
120	[BUG]  [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.getMessage());  return;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.getMessage());  return;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  source  error: "  +  e.getMessage());  return;	  System.err.println(   "Unexpected    source    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
121	[BUG]  [BUGGY]  Error.println( "Unexpected  source  error: "  +  e.getMessage());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  source  error: "  +  e.getMessage());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  source  error: "  +  e.getMessage());  return  null;	  System.err.println(   "Unexpected    source    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
122	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  lfh.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  lfh.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  ' "  +  lfh.getMessage());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
123	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:   " "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:   " "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:   " "  +  e.getMessage());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
124	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  current.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  current.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  ' "  +  current.getMessage());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
125	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  source.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  source.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  ' "  +  source.getMessage());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
126	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  ' "  +  e.toString());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
127	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  lfh.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  lfh.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  ' "  +  lfh.toString());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
128	[BUG]  [BUGGY]  fileNameLen  =  current.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  current.getLength();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  current.getLength();	  fileNameLen    =    lfh.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
129	[BUG]  [BUGGY]  fileNameLen  =  lfh.getFileNameLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.getFileNameLength();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.getFileNameLength();	  fileNameLen    =    lfh.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
130	[BUG]  [BUGGY]  fileNameLen  =  lfh.getLength()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.getLength()  +  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.getLength()  +  1;	  fileNameLen    =    lfh.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
131	[BUG]  [BUGGY]  fileNameLen  =  current.getFileNameLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  current.getFileNameLength();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  current.getFileNameLength();	  fileNameLen    =    lfh.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
132	[BUG]  [BUGGY]  fileNameLen  =  lfh.getChars(0,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.getChars(0,  0);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.getChars(0,  0);	  fileNameLen    =    lfh.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
133	[BUG]  [BUGGY]  fileNameLen  -=  lfh.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  -=  lfh.getLength();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  -=  lfh.getLength();	  fileNameLen    =    lfh.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
134	[BUG]  [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Can  not  read  lfh: "  +  lfh,  e);	  System.err.println(   "Can    not    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
135	[BUG]  [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  lfh+ "n ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  lfh+ "n ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Can  not  read  lfh: "  +  lfh+ "n ");	  System.err.println(   "Can    not    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
136	[BUG]  [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  fileNameLen);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Can  not  read  lfh: "  +  fileNameLen);	  System.err.println(   "Can    not    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
137	[BUG]  [BUGGY]  fileNameLen  -=  lfh.length()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  -=  lfh.length()  +  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  -=  lfh.length()  +  1;	  fileNameLen    -=    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
138	[BUG]  [BUGGY]  fileNameLen  -=  lfh.length()  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  -=  lfh.length()  *  2;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  -=  lfh.length()  *  2;	  fileNameLen    -=    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
139	[BUG]  [BUGGY]  fileNameLen  -=  lfh.length()  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  -=  lfh.length()  +  2;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  -=  lfh.length()  +  2;	  fileNameLen    -=    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
140	[BUG]  [BUGGY]  fileNameLen  -=  lfh.length()  *  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  -=  lfh.length()  *  4;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  -=  lfh.length()  *  4;	  fileNameLen    -=    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
141	[BUG]  [BUGGY]  fileNameLen  -=  lfh.length()  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  -=  lfh.length()  +  4;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  -=  lfh.length()  +  4;	  fileNameLen    -=    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
142	[BUG]  [BUGGY]  FileNameLen  -=  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  FileNameLen  -=  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	FileNameLen  -=  lfh.length();	  fileNameLen    -=    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
143	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields: "  +  lfh,  e);	  System.err.println(   "Unicode    extraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
144	[BUG]  [BUGGY]  System.err.println( "Unicode  output  line: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output  line: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output  line: "  +  lfh);	  System.err.println(   "Unicode    extraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
145	[BUG]  [BUGGY]  System.err.println( "Unicode  additionalFields: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  additionalFields: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  additionalFields: "  +  lfh);	  System.err.println(   "Unicode    extraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
146	[BUG]  [BUGGY]  System.err.println( "Unicode  extraField: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraField: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraField: "  +  lfh);	  System.err.println(   "Unicode    extraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
147	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e).printStackTrace();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e).printStackTrace();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e).printStackTrace();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).printStackTrace();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
148	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh),  e).printStackTrace();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh),  e).printStackTrace();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh),  e).printStackTrace();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).printStackTrace();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
149	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).printStandardError();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).printStandardError();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).printStandardError();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).printStackTrace();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
150	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  lfh.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  lfh.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  lfh.getMessage());	  System.err.println(   "Unexpected    error:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
151	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getMessage(),  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getMessage(),  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  source.getMessage(),  e);	  System.err.println(   "Unexpected    error:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
152	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  source.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  source.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  source.toString());	  System.err.println(   "Unexpected    error:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
153	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  source.getName());	  System.err.println(   "Unexpected    error:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
154	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getMsg());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getMsg());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  source.getMsg());	  System.err.println(   "Unexpected    error:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
155	[BUG]  [BUGGY]  System.err.println( "JSC_UNICODEExtraFields: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_UNICODEExtraFields: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_UNICODEExtraFields: "  +  e.getMessage());	  System.err.println(   "JSC_UNIcodeExtraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
156	[BUG]  [BUGGY]  System.err.println( "JSC_UNIcodeExtraFields: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_UNIcodeExtraFields: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_UNIcodeExtraFields: "  +  e.toString());	  System.err.println(   "JSC_UNIcodeExtraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
157	[BUG]  [BUGGY]  System.err.println( "JSC_UNICodeExtraFields: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_UNICodeExtraFields: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_UNICodeExtraFields: "  +  e.getMessage());	  System.err.println(   "JSC_UNIcodeExtraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
158	[BUG]  [BUGGY]  System.err.println( "JSC_UNICODEExtraFields: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_UNICODEExtraFields: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_UNICODEExtraFields: "  +  e.toString());	  System.err.println(   "JSC_UNIcodeExtraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
159	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inf,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inf,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  inf,  e);	  System.err.println(   "Failed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
160	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  Inflater.toString(inf));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  Inflater.toString(inf));  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  Inflater.toString(inf));	  System.err.println(   "Failed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
161	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inflater);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  inflater);	  System.err.println(   "Failed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
162	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inf  + "n ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inf  + "n ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  inf  + "n ");	  System.err.println(   "Failed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
163	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inf.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inf.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  inf.getMessage());	  System.err.println(   "Failed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
164	[BUG]  [BUGGY]  Error.println( "Unexpected  error: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  error: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  error: "  +  e.toString());	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
165	[BUG]  [BUGGY]  Error.println( "Unexpected  error: "  +  e,  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  error: "  +  e,  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  error: "  +  e,  e.getMessage());	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
166	[BUG]  [BUGGY]  Error.println( "Unexpected  error: "  +  e.getMessage(),  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  error: "  +  e.getMessage(),  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  error: "  +  e.getMessage(),  e);	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
167	[BUG]  [BUGGY]  Error.println(e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println(e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println(e.getMessage());	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
168	[BUG]  [BUGGY]  Error.println( "Curpose  error: "  +  e.getMessage());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Curpose  error: "  +  e.getMessage());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Curpose  error: "  +  e.getMessage());  return  null;	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
169	[BUG]  [BUGGY]  Error.println( "Unexpected  error: "  +  e.getMessage());  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  error: "  +  e.getMessage());  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  error: "  +  e.getMessage());  return  this;	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
170	[BUG]  [BUGGY]  Error.println( "Unexpected  error: "  +  e,  e.getMessage());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  error: "  +  e,  e.getMessage());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  error: "  +  e,  e.getMessage());  return  null;	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
171	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields: "  +  lfh.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields: "  +  lfh.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields: "  +  lfh.getMessage());	  System.err.println(   "Unicode    extraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
172	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields: "  +  e.toString());	  System.err.println(   "Unicode    extraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
173	[BUG]  [BUGGY]  System.err.println( "Unicode  entryEncoding: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  entryEncoding: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  entryEncoding: "  +  e.getMessage());	  System.err.println(   "Unicode    extraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
174	[BUG]  [BUGGY]  System.err.println( "Unicode  output: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output: "  +  e.getMessage());	  System.err.println(   "Unicode    extraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
175	[BUG]  [BUGGY]  System.err.println( "Unicode  additionalFields: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  additionalFields: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  additionalFields: "  +  e.getMessage());	  System.err.println(   "Unicode    extraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
176	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_Exception,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_Exception,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_Exception,  e);	  System.err.println(e.getMessage(),    EOF_Exception);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
177	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_IOException);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_IOException);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_IOException);	  System.err.println(e.getMessage(),    EOF_Exception);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
178	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_RESULT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_RESULT);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_RESULT);	  System.err.println(e.getMessage(),    EOF_Exception);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
179	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readFully(lfh,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readFully(lfh,  bytesReadFromStream);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readFully(lfh,  bytesReadFromStream);	  int    lengthOfLastRead    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
180	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readFully(lfh,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readFully(lfh,  offset);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readFully(lfh,  offset);	  int    lengthOfLastRead    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
181	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readFully(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readFully(lfh,  off);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readFully(lfh,  off);	  int    lengthOfLastRead    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
182	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readFully(lfh,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readFully(lfh,  0);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readFully(lfh,  0);	  int    lengthOfLastRead    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
183	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readFully(lfh.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readFully(lfh.length);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readFully(lfh.length);	  int    lengthOfLastRead    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
184	[BUG]  [BUGGY]  System.err.println( "JSC_UNICODEExtraFields: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_UNICODEExtraFields: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_UNICODEExtraFields: "  +  lfh);	  System.err.println(   "JSC_UNIcodeExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
185	[BUG]  [BUGGY]  System.err.println( "JSC_UNIcodeExtraFields: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_UNIcodeExtraFields: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_UNIcodeExtraFields: "  +  lfh,  e);	  System.err.println(   "JSC_UNIcodeExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
186	[BUG]  [BUGGY]  System.err.println( "JSC_UNICodeExtraFields: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_UNICodeExtraFields: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_UNICodeExtraFields: "  +  lfh);	  System.err.println(   "JSC_UNIcodeExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
187	[BUG]  [BUGGY]  System.err.println( "Zip_UNIcodeExtraFields: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Zip_UNIcodeExtraFields: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Zip_UNIcodeExtraFields: "  +  lfh);	  System.err.println(   "JSC_UNIcodeExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
188	[BUG]  [BUGGY]  ||  e.getCause()  ==  null)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||  e.getCause()  ==  null)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||  e.getCause()  ==  null)  {  e.printStackTrace();  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
189	[BUG]  [BUGGY]  if(e.getCause()!=  null  ||!e.isExtern())  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null  ||!e.isExtern())  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null  ||!e.isExtern())  {  e.printStackTrace();  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
190	[BUG]  [BUGGY]  e.printStackTrace(readBytesOfEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  e.printStackTrace(readBytesOfEntry());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	e.printStackTrace(readBytesOfEntry());	  e.printStackTrace(inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
191	[BUG]  [BUGGY]  Inflater  inf  =  getNextEntry().getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextEntry().getInputStream();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextEntry().getInputStream();	  Inflater    inf    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
192	[BUG]  [BUGGY]  Inflater  inf  =  getFullEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getFullEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getFullEntry();	  Inflater    inf    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
193	[BUG]  [BUGGY]  Inflater  inf  =  getNextEntry().getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextEntry().getValue();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextEntry().getValue();	  Inflater    inf    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
194	[BUG]  [BUGGY]  Inflater  inf  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextFileEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextFileEntry();	  Inflater    inf    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
195	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  of ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  of ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  of ");	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
196	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream   ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream   ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream   ");	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
197	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream= ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream= ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream= ");	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
198	[BUG]  [BUGGY]  fileNameLen  =(lfh.length()  >  0)?  lfh.length()  :  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =(lfh.length()  >  0)?  lfh.length()  :  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =(lfh.length()  >  0)?  lfh.length()  :  lfh.length();	  fileNameLen    =   "   "    +    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
199	[BUG]  [BUGGY]  fileNameLen  =  new  String(lfh.length());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  new  String(lfh.length());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  new  String(lfh.length());	  fileNameLen    =   "   "    +    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
200	[BUG]  [BUGGY]  fileNameLen  =(lfh.length()  >  0)?  lfh.length()  :  lfh;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =(lfh.length()  >  0)?  lfh.length()  :  lfh;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =(lfh.length()  >  0)?  lfh.length()  :  lfh;	  fileNameLen    =   "   "    +    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
201	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_QUOTE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_QUOTE);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_QUOTE);	  System.err.println(e.getMessage(),    EOF_THRESHOLD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
202	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_FORBIDDEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_FORBIDDEN);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_FORBIDDEN);	  System.err.println(e.getMessage(),    EOF_THRESHOLD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
203	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  LFH_LEN);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  LFH_LEN);	  System.err.println(e.getMessage(),    EOF_THRESHOLD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
204	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_STANDARD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_STANDARD);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_STANDARD);	  System.err.println(e.getMessage(),    EOF_THRESHOLD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
205	[BUG]  [BUGGY]  if(current  ==  null)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(current  ==  null)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(current  ==  null)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
206	[BUG]  [BUGGY]  if(current  ==  null)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(current  ==  null)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(current  ==  null)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
207	[BUG]  [BUGGY]  if(current  ==  null)  {  if(e.getCause()  ==  null)  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(current  ==  null)  {  if(e.getCause()  ==  null)  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(current  ==  null)  {  if(e.getCause()  ==  null)  {  throw  new  EOFException( " ");  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
208	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  e);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  e);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  e);  return  null;	  System.err.println(e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
209	[BUG]  [BUGGY]  Error.println(e.getMessage());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println(e.getMessage());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println(e.getMessage());  return  null;	  System.err.println(e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
210	[BUG]  [BUGGY]  System.err.println(e.getMessage());  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage());  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage());  return  this;	  System.err.println(e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
211	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOFException);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOFException);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOFException);  return  null;	  System.err.println(e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
212	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  EOF  error: ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  EOF  error: ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  was  expecting  EOF  error: ");	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
213	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + ":  was  expecting  EOF  exception. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + ":  was  expecting  EOF  exception. ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + ":  was  expecting  EOF  exception. ");	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
214	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  EOF  exception. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  EOF  exception. ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  was  expecting  EOF  exception. ");	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
215	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  EOF  error. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  EOF  error. ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  was  expecting  EOF  error. ");	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
216	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  recursion  error: ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  recursion  error: ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  recursion  error: ");	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
217	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  lfh,  e);	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
218	[BUG]  [BUGGY]  Error.println(e, "Failed  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println(e, "Failed  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println(e, "Failed  to  read  lfh: "  +  lfh);	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
219	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh+ "n ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh+ "n ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  lfh+ "n ");	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
220	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh));  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  lfh));	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
221	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  name);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  name);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  name);	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
222	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  lfh.toString());	  System.err.println(   "UnicodeExtraFields:   "    +    e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
223	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  name.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  name.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  name.toString());	  System.err.println(   "UnicodeExtraFields:   "    +    e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
224	[BUG]  [BUGGY]  ||  e!=  null)  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||  e!=  null)  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||  e!=  null)  {  throw  new  EOFException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
225	[BUG]  [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
226	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(e.getMessage());	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
227	[BUG]  [BUGGY]  if(e  ==  null)  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e  ==  null)  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e  ==  null)  {  throw  new  EOFException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
228	[BUG]  [BUGGY]  int  lengthOfLastRead  =  bytesReadFromStream.readBytesOfEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  bytesReadFromStream.readBytesOfEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  bytesReadFromStream.readBytesOfEntry();	  int    lengthOfLastRead    =    readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
229	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfEntry(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfEntry(lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfEntry(lfh);	  int    lengthOfLastRead    =    readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
230	[BUG]  [BUGGY]  long  lengthOfLastRead  =  readBytesOfEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  long  lengthOfLastRead  =  readBytesOfEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	long  lengthOfLastRead  =  readBytesOfEntry();	  int    lengthOfLastRead    =    readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
231	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  of ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  of ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  of ");	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
232	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: "  +  e.getMessage());	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
233	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream ");	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
234	[BUG]  [BUGGY]  fileNameLen  =  LfhUtil.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  LfhUtil.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  LfhUtil.length();	  fileNameLen    =    lfh.length()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
235	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  source.getName());	  System.err.println(   "UnicodeExtraFields:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
236	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  source.toString());	  System.err.println(   "UnicodeExtraFields:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
237	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getShortName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getShortName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  source.getShortName());	  System.err.println(   "UnicodeExtraFields:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
238	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getMillis());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getMillis());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  source.getMillis());	  System.err.println(   "UnicodeExtraFields:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
239	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getLocalFileName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getLocalFileName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  source.getLocalFileName());	  System.err.println(   "UnicodeExtraFields:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
240	[BUG]  [BUGGY]  fileNameLen  =  current.length()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  current.length()  +  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  current.length()  +  1;	  fileNameLen    =    current.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
241	[BUG]  [BUGGY]  fileNameLen  =  current.length()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  current.length()  -  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  current.length()  -  1;	  fileNameLen    =    current.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
242	[BUG]  [BUGGY]  fileNameLen  =  current.length()  +  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  current.length()  +  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  current.length()  +  lfh.length();	  fileNameLen    =    current.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
243	[BUG]  [BUGGY]  fileNameLen  -=  current.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  -=  current.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  -=  current.length();	  fileNameLen    =    current.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
244	[BUG]  [BUGGY]  fileNameLen  =  current.length()  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  current.length()  *  2;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  current.length()  *  2;	  fileNameLen    =    current.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
245	[BUG]  [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  return  null;  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e  ==  null)  {  e.printStackTrace();  }  else  {  return  null;  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
246	[BUG]  [BUGGY]  ||  e!=  null)  {  e.printStackTrace();  }  else  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||  e!=  null)  {  e.printStackTrace();  }  else  {  return  null;  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||  e!=  null)  {  e.printStackTrace();  }  else  {  return  null;  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
247	[BUG]  [BUGGY]  Inflater  inf  =  getFullInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getFullInflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getFullInflater();	  Inflater    inf    =    getNextInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
248	[BUG]  [BUGGY]  Inflater  inf  =  getPreviousInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getPreviousInflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getPreviousInflater();	  Inflater    inf    =    getNextInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
249	[BUG]  [BUGGY]  Inflater  inf  =  getNextOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextOutputFile();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextOutputFile();	  Inflater    inf    =    getNextInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
250	[BUG]  [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead()  -  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  getLengthOfLastRead()  -  1;	  int    lengthOfLastRead    =    getLengthOfLastRead();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
251	[BUG]  [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead()  +  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  getLengthOfLastRead()  +  1;	  int    lengthOfLastRead    =    getLengthOfLastRead();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
252	[BUG]  [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead(lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  getLengthOfLastRead(lfh);	  int    lengthOfLastRead    =    getLengthOfLastRead();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
253	[BUG]  [BUGGY]  long  lengthOfLastRead  =  getLengthOfLastRead();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  long  lengthOfLastRead  =  getLengthOfLastRead();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	long  lengthOfLastRead  =  getLengthOfLastRead();	  int    lengthOfLastRead    =    getLengthOfLastRead();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
254	[BUG]  [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead(0);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  getLengthOfLastRead(0);	  int    lengthOfLastRead    =    getLengthOfLastRead();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
255	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: "  +  lfh);	  e.printStackTrace(System.err);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
256	[BUG]  [BUGGY]  System.err.println( "Error  reading  source: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Error  reading  source: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Error  reading  source: "  +  lfh);	  e.printStackTrace(System.err);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
257	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_JSError,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_JSError,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_JSError,  e);	  System.err.println(e.getMessage(),    EOF_JSError);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
258	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_JS_ERROR);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_JS_ERROR);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_JS_ERROR);	  System.err.println(e.getMessage(),    EOF_JSError);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
259	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_JSC_ERROR);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_JSC_ERROR);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_JSC_ERROR);	  System.err.println(e.getMessage(),    EOF_JSError);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
260	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_GLOBAL_ERROR);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_GLOBAL_ERROR);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_GLOBAL_ERROR);	  System.err.println(e.getMessage(),    EOF_JSError);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
261	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_JSERROR,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_JSERROR,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_JSERROR,  e);	  System.err.println(e.getMessage(),    EOF_JSError);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
262	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e.toString(),  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.toString(),  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e.toString(),  e);	  System.err.println(   "Unexpected    error:   "    +    e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
263	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage(),  EOFException);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage(),  EOFException);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e.getMessage(),  EOFException);	  System.err.println(   "Unexpected    error:   "    +    e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
264	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage(),  EOF_Exception);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage(),  EOF_Exception);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e.getMessage(),  EOF_Exception);	  System.err.println(   "Unexpected    error:   "    +    e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
265	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage(),  EOF_ERROR);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage(),  EOF_ERROR);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e.getMessage(),  EOF_ERROR);	  System.err.println(   "Unexpected    error:   "    +    e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
266	[BUG]  [BUGGY]  System.err.println( "Current  error: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error: "  +  e.toString());	  System.err.println(   "Current    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
267	[BUG]  [BUGGY]  System.err.println( "Current  error: "  +  e.getMessage(),  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error: "  +  e.getMessage(),  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error: "  +  e.getMessage(),  e);	  System.err.println(   "Current    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
268	[BUG]  [BUGGY]  System.err.println( "Current  error:n "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error:n "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error:n "  +  e.getMessage());	  System.err.println(   "Current    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
269	[BUG]  [BUGGY]  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
270	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
271	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  in.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null)  {  in.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null)  {  in.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
272	[BUG]  [BUGGY]  if(e.getCause()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
273	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh,  e);  return  null;	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
274	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  this;	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
275	[BUG]  [BUGGY]  System.err.println( "ZipFailed  to  read  lfh: "  +  lfh);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "ZipFailed  to  read  lfh: "  +  lfh);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "ZipFailed  to  read  lfh: "  +  lfh);  return  null;	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
276	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e.toString()  + "n ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.toString()  + "n ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e.toString()  + "n ");	  System.err.println(   "Unexpected    error:   "    +    e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
277	[BUG]  [BUGGY]  int  lfh  =  current.readFully(e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(e);	  int    lfh    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
278	[BUG]  [BUGGY]  int  lfh  =  current.readFully(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(true);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(true);	  int    lfh    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
279	[BUG]  [BUGGY]  int  lfh  =  current.readFully(Locale.ENGLISH);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(Locale.ENGLISH);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(Locale.ENGLISH);	  int    lfh    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
280	[BUG]  [BUGGY]  int  lfh  =  current.readFully(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(0);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(0);	  int    lfh    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
281	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  source,  e);	  System.err.println(   "UnicodeExtraFields:   "    +    source);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
282	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  this.source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  this.source);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  this.source);	  System.err.println(   "UnicodeExtraFields:   "    +    source);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
283	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  name);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  name);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  name);	  System.err.println(   "UnicodeExtraFields:   "    +    source);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
284	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  inputStream);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  inputStream);	  System.err.println(   "UnicodeExtraFields:   "    +    source);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
285	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_EXPR_RESULT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_EXPR_RESULT);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_EXPR_RESULT);	  System.err.println(e.getMessage(),    EOFException);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
286	[BUG]  [BUGGY]  System.err.println( "Unicode  output  line: "  +  lfh.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output  line: "  +  lfh.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output  line: "  +  lfh.getMessage());	  System.err.println(   "Unicode    output    line:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
287	[BUG]  [BUGGY]  System.err.println( "Unicode  output  line: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output  line: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output  line: "  +  e.toString());	  System.err.println(   "Unicode    output    line:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
288	[BUG]  [BUGGY]  System.err.println( "Unicode  output  line: "  +  source.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output  line: "  +  source.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output  line: "  +  source.getMessage());	  System.err.println(   "Unicode    output    line:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
289	[BUG]  [BUGGY]  System.err.println( "Unicode  output  line: "  +  inputStream.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output  line: "  +  inputStream.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output  line: "  +  inputStream.getMessage());	  System.err.println(   "Unicode    output    line:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
290	[BUG]  [BUGGY]  System.err.println( "Unicode  output  line: "  +  current.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output  line: "  +  current.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output  line: "  +  current.getMessage());	  System.err.println(   "Unicode    output    line:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
291	[BUG]  [BUGGY]  System.err.println( "Unicode  output  line: "  +  lfh.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output  line: "  +  lfh.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output  line: "  +  lfh.toString());	  System.err.println(   "Unicode    output    line:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
292	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + ",  recursion  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + ",  recursion  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + ",  recursion  error: "  +  e.getMessage());	  System.err.println(e.getMessage()    +   "    recursion    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
293	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + ",  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + ",  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + ",  error: "  +  e.getMessage());	  System.err.println(e.getMessage()    +   "    recursion    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
294	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  recursion  error: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  recursion  error: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  recursion  error: "  +  e.toString());	  System.err.println(e.getMessage()    +   "    recursion    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
295	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + ":  recursion  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + ":  recursion  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + ":  recursion  error: "  +  e.getMessage());	  System.err.println(e.getMessage()    +   "    recursion    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
296	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh,  e);  return;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
297	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh);  return;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  lfh);  return;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  lfh);  return;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
298	[BUG]  [BUGGY]  fileNameLen  =  lfh.length()  +  off;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.length()  +  off;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.length()  +  off;	  fileNameLen    =    lfh.length()    +    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
299	[BUG]  [BUGGY]  fileNameLen  =  lfh.length()  *  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.length()  *  WORD;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.length()  *  WORD;	  fileNameLen    =    lfh.length()    +    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
300	[BUG]  [BUGGY]  fileNameLen  -=  lfh.length()  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  -=  lfh.length()  +  WORD;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  -=  lfh.length()  +  WORD;	  fileNameLen    =    lfh.length()    +    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
301	[BUG]  [BUGGY]  fileNameLen  =  lfh.length()  >  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.length()  >  WORD;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.length()  >  WORD;	  fileNameLen    =    lfh.length()    +    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
302	[BUG]  [BUGGY]  fileNameLen  =  lfh.length()  |  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.length()  |  WORD;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.length()  |  WORD;	  fileNameLen    =    lfh.length()    +    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
303	[BUG]  [BUGGY]  System.err.println( "SurposeFailed  to  read  lfh: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "SurposeFailed  to  read  lfh: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "SurposeFailed  to  read  lfh: "  +  lfh,  e);	  System.err.println(   "SurposeFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
304	[BUG]  [BUGGY]  System.err.println( "JSC_SURPOSEFailed  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_SURPOSEFailed  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_SURPOSEFailed  to  read  lfh: "  +  lfh);	  System.err.println(   "SurposeFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
305	[BUG]  [BUGGY]  fileNameLen  =  lfh.length()  *  2  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.length()  *  2  +  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.length()  *  2  +  1;	  fileNameLen    =    lfh.length()    *    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
306	[BUG]  [BUGGY]  fileNameLen  =  lfh.length()  *  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.length()  *  4;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.length()  *  4;	  fileNameLen    =    lfh.length()    *    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
307	[BUG]  [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
308	[BUG]  [BUGGY]  ||  e!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||  e!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||  e!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
309	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
310	[BUG]  [BUGGY]  if(e  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
311	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextZipEntry(current);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextZipEntry(current);	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
312	[BUG]  [BUGGY]  Inflater  inf  =  getNextInputEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextInputEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextInputEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
313	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextZipEntry(lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextZipEntry(lfh);	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
314	[BUG]  [BUGGY]  System.err.println( "ZipExtraFields: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "ZipExtraFields: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "ZipExtraFields: "  +  lfh,  e);	  System.err.println(   "ZipExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
315	[BUG]  [BUGGY]  System.err.println( "JZipExtraFields: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JZipExtraFields: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JZipExtraFields: "  +  lfh);	  System.err.println(   "ZipExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
316	[BUG]  [BUGGY]  System.err.println( "JipExtraFields: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JipExtraFields: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JipExtraFields: "  +  lfh);	  System.err.println(   "ZipExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
317	[BUG]  [BUGGY]  System.err.println( "ZipExtraFields: "  +  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "ZipExtraFields: "  +  source);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "ZipExtraFields: "  +  source);	  System.err.println(   "ZipExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
318	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e.toString());  return;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.toString());  return;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e.toString());  return;	  System.err.println(   "Unexpected    error:   "    +    e.getMessage());    return;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
319	[BUG]  [BUGGY]  Error.println( "Unexpected  error: "  +  e.getMessage());  return;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  error: "  +  e.getMessage());  return;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  error: "  +  e.getMessage());  return;	  System.err.println(   "Unexpected    error:   "    +    e.getMessage());    return;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
320	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e,  e.getMessage());  return;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e,  e.getMessage());  return;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e,  e.getMessage());  return;	  System.err.println(   "Unexpected    error:   "    +    e.getMessage());    return;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
321	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh,  EOFException);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh,  EOFException);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  lfh,  EOFException);	  System.err.println(   "UnicodeExtraFields:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
322	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  e,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  e,  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  e,  lfh);	  System.err.println(   "UnicodeExtraFields:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
323	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  lfh.getName());	  System.err.println(   "UnicodeExtraFields:   "    +    lfh.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
324	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getFileName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getFileName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  lfh.getFileName());	  System.err.println(   "UnicodeExtraFields:   "    +    lfh.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
325	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getText());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getText());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  lfh.getText());	  System.err.println(   "UnicodeExtraFields:   "    +    lfh.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
326	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getClass().getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getClass().getName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  lfh.getClass().getName());	  System.err.println(   "UnicodeExtraFields:   "    +    lfh.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
327	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh.length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh.length;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh.length;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
328	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh  + "n ";  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh  + "n ";  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh  + "n ";	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
329	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  e.toString());	  System.err.println(e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
330	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh.toString());	  System.err.println(e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
331	[BUG]  [BUGGY]  System.err.println(e.toString()  + "n ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.toString()  + "n ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.toString()  + "n ");	  System.err.println(e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
332	[BUG]  [BUGGY]  Error.println(e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println(e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println(e.toString());	  System.err.println(e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
333	[BUG]  [BUGGY]  System.err.println(e.toString(),  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.toString(),  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.toString(),  e.getMessage());	  System.err.println(e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
334	[BUG]  [BUGGY]  System.err.println( "Unicode  extension  field: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extension  field: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extension  field: "  +  e.toString());	  System.err.println(   "Unicode    extension    field:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
335	[BUG]  [BUGGY]  System.err.println( "Unicode  extension  field: "  +  lfh.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extension  field: "  +  lfh.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extension  field: "  +  lfh.getMessage());	  System.err.println(   "Unicode    extension    field:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
336	[BUG]  [BUGGY]  System.err.println( "Unicode  extension  field: "  +  entryEncoding.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extension  field: "  +  entryEncoding.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extension  field: "  +  entryEncoding.getMessage());	  System.err.println(   "Unicode    extension    field:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
337	[BUG]  [BUGGY]  System.err.println( "Unicode  extension  field: "  +  fileNameLen.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extension  field: "  +  fileNameLen.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extension  field: "  +  fileNameLen.getMessage());	  System.err.println(   "Unicode    extension    field:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
338	[BUG]  [BUGGY]  System.err.println( "Unicode  extension  field: "  +  cfg.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extension  field: "  +  cfg.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extension  field: "  +  cfg.getMessage());	  System.err.println(   "Unicode    extension    field:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
339	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh.getMessage());	  System.err.println(   "Failed    to    read    lfh:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
340	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh.getClass().getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh.getClass().getName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh.getClass().getName());	  System.err.println(   "Failed    to    read    lfh:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
341	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  inf,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  inf,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  inf,  e);	  System.err.println(   "UnicodeExtraFields:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
342	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  inflater);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  inflater);	  System.err.println(   "UnicodeExtraFields:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
343	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  e);	  System.err.println(   "UnicodeExtraFields:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
344	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  Inflater.toString(inf));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  Inflater.toString(inf));  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  Inflater.toString(inf));	  System.err.println(   "UnicodeExtraFields:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
345	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  Inflater.toHexString(inf));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  Inflater.toHexString(inf));  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  Inflater.toHexString(inf));	  System.err.println(   "UnicodeExtraFields:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
346	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).error(e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).error(e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).error(e);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).initCause(e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
347	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).initCause(e,  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).initCause(e,  source);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).initCause(e,  source);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).initCause(e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
348	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).toString();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).toString();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).initCause(e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
349	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).reportError(e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).reportError(e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).reportError(e);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).initCause(e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
350	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).return  null;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).initCause(e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
351	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).initCause(e,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).initCause(e,  current);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).initCause(e,  current);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).initCause(e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
352	[BUG]  [BUGGY]  if(current!=  null)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(current!=  null)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(current!=  null)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
353	[BUG]  [BUGGY]  if(current!=  null)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(current!=  null)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(current!=  null)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
354	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  -  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  -  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  -  error: "  +  e.getMessage());	  System.err.println(e.getMessage()    +   "    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
355	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  EOF  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  EOF  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  was  expecting  EOF  error: "  +  e.getMessage());	  System.err.println(e.getMessage()    +   "    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
356	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  in  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  in  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  in  error: "  +  e.getMessage());	  System.err.println(e.getMessage()    +   "    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
357	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  error: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  error: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  error: "  +  e.toString());	  System.err.println(e.getMessage()    +   "    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
358	[BUG]  [BUGGY]  System.err.println( "Current  error: "  +  e.getMessage());  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error: "  +  e.getMessage());  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error: "  +  e.getMessage());  return  this;	  System.err.println(   "Current    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
359	[BUG]  [BUGGY]  System.err.println( "Current  error: "  +  e.toString());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error: "  +  e.toString());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error: "  +  e.toString());  return  null;	  System.err.println(   "Current    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
360	[BUG]  [BUGGY]  System.err.println( "Current  error: "  +  e.getMessage());  return;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error: "  +  e.getMessage());  return;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error: "  +  e.getMessage());  return;	  System.err.println(   "Current    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
361	[BUG]  [BUGGY]  Error.println( "Current  error: "  +  e.getMessage());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Current  error: "  +  e.getMessage());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Current  error: "  +  e.getMessage());  return  null;	  System.err.println(   "Current    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
362	[BUG]  [BUGGY]  System.err.println( "Unexpected  exception: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  exception: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  exception: "  +  e.getMessage());	  e.printStackTrace(System.out);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
363	[BUG]  [BUGGY]  Inflater  inf  =  currentEntry.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  currentEntry.getInputStream();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  currentEntry.getInputStream();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
364	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  current.getInputStream(lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  current.getInputStream(lfh);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
365	[BUG]  [BUGGY]  Inflater  inf  =  current.getOutputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  current.getOutputStream();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  current.getOutputStream();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
366	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(),  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  current.getInputStream(),  bytesReadFromStream);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  current.getInputStream(),  bytesReadFromStream);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
367	[BUG]  [BUGGY]  Inflater  inf  =  current.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  current.getEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  current.getEntry();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
368	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(),  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  current.getInputStream(),  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  current.getInputStream(),  lfh);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
369	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  inf.getMessage(),  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  inf.getMessage(),  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  inf.getMessage(),  e);	  System.err.println(   "Unexpected    error:   "    +    inf.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
370	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  inf.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  inf.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  inf.toString());	  System.err.println(   "Unexpected    error:   "    +    inf.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
371	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  Inflater.toString(inf.getMessage()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  Inflater.toString(inf.getMessage()));  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  Inflater.toString(inf.getMessage()));	  System.err.println(   "Unexpected    error:   "    +    inf.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
372	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  inf,  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  inf,  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  inf,  e.getMessage());	  System.err.println(   "Unexpected    error:   "    +    inf.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
373	[BUG]  [BUGGY]  System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh,  e);	  System.err.println(   "JSC_Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
374	[BUG]  [BUGGY]  System.err.println( "Zip_Failed  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Zip_Failed  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Zip_Failed  to  read  lfh: "  +  lfh);	  System.err.println(   "JSC_Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
375	[BUG]  [BUGGY]  int  lfh  =  current.readFully(Long.MAX_VALUE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(Long.MAX_VALUE);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(Long.MAX_VALUE);	  int    lfh    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
376	[BUG]  [BUGGY]  if(!hasDataDescriptor)  {  System.out.println( "Failed  to  read  source: "  +  lfh);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(!hasDataDescriptor)  {  System.out.println( "Failed  to  read  source: "  +  lfh);  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(!hasDataDescriptor)  {  System.out.println( "Failed  to  read  source: "  +  lfh);  }	  e.printStackTrace(System.out);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
377	[BUG]  [BUGGY]  if(!hasDataDescriptor)  {  System.out.println(e.getMessage());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(!hasDataDescriptor)  {  System.out.println(e.getMessage());  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(!hasDataDescriptor)  {  System.out.println(e.getMessage());  }	  e.printStackTrace(System.out);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
378	[BUG]  [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  source  error: "  +  e.toString());	  System.err.println(   "Unexpected    error:   "    +    e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
379	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  fileName.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  fileName.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  fileName.toString());	  System.err.println(   "Unexpected    error:   "    +    e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
380	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getInflater(lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getInflater(lfh);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
381	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getInflater(current);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getInflater(current);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
382	[BUG]  [BUGGY]  Inflater  inflater  =  getOutflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getOutflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getOutflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
383	[BUG]  [BUGGY]  System.err.println( "Current  error: "  +  source.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error: "  +  source.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error: "  +  source.getMessage());	  System.err.println(   "Current    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
384	[BUG]  [BUGGY]  System.err.println( "Current  error: ",  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error: ",  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error: ",  e.getMessage());	  System.err.println(   "Current    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
385	[BUG]  [BUGGY]  ||(e!=  null  &&  e.getCurrentName()!=  null))  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||(e!=  null  &&  e.getCurrentName()!=  null))  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||(e!=  null  &&  e.getCurrentName()!=  null))  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
386	[BUG]  [BUGGY]  ||(e!=  null  &&  e.getCurrentStructure()!=  null))  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||(e!=  null  &&  e.getCurrentStructure()!=  null))  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||(e!=  null  &&  e.getCurrentStructure()!=  null))  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
387	[BUG]  [BUGGY]  ||(e!=  null  &&  e.getCrc()!=  null))  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||(e!=  null  &&  e.getCrc()!=  null))  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||(e!=  null  &&  e.getCrc()!=  null))  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
388	[BUG]  [BUGGY]  ||(e!=  null  &&  e.getCurrentStructure()  ==  null))  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||(e!=  null  &&  e.getCurrentStructure()  ==  null))  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||(e!=  null  &&  e.getCurrentStructure()  ==  null))  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
389	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getLineNumber());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getLineNumber());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  lfh.getLineNumber());	  System.err.println(   "UnicodeExtraFields:   "    +    lfh.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
390	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getClass());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getClass());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  lfh.getClass());	  System.err.println(   "UnicodeExtraFields:   "    +    lfh.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
391	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  from   ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  from   ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  from   ");	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
392	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  on  the  same  line. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  on  the  same  line. ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  on  the  same  line. ");	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
393	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  from  file  name: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  from  file  name: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  from  file  name: "  +  lfh);	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
394	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: "  +  lfh);	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
395	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: ");	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
396	[BUG]  [BUGGY]  int  lfh  =  current.readFully(lfh,  out);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(lfh,  out);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(lfh,  out);	  int    lfh    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
397	[BUG]  [BUGGY]  fileNameLen  =  rfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  rfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  rfh.length();	  fileNameLen    =    lfh.length()    +    4;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
398	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
399	[BUG]  [BUGGY]  System.err.println( "Current  error: "  +  source.getMessage());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error: "  +  source.getMessage());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error: "  +  source.getMessage());  return  null;	  System.err.println(   "Current    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
400	[BUG]  [BUGGY]  System.err.println( "Current  error: "  +  e.getMessage(),  e);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error: "  +  e.getMessage(),  e);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error: "  +  e.getMessage(),  e);  return  null;	  System.err.println(   "Current    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
401	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  entryEncoding.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  entryEncoding.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  entryEncoding.toString());	  System.err.println(   "UnicodeExtraFields:   "    +    zipEncoding.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
402	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:n "  +  zipEncoding.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:n "  +  zipEncoding.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:n "  +  zipEncoding.getMessage());	  System.err.println(   "UnicodeExtraFields:   "    +    zipEncoding.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
403	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:   " "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:   " "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:   " "  +  e.toString());	  System.err.println(e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
404	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  in;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  in;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  in;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    in;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
405	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  Inflater.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  Inflater.getInstance();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  Inflater.getInstance();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    in;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
406	[BUG]  [BUGGY]  fileNameLen  =  current.length()  +  bytesReadFromStream;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  current.length()  +  bytesReadFromStream;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  current.length()  +  bytesReadFromStream;	  fileNameLen    =    current.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
407	[BUG]  [BUGGY]  fileNameLen  =  current.length()  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  current.length()  +  2;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  current.length()  +  2;	  fileNameLen    =    current.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
408	[BUG]  [BUGGY]  System.err.println( "Could  not  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Could  not  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Could  not  read  lfh: "  +  lfh);	  System.err.println(   "Can    not    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
409	[BUG]  [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  fileName);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  fileName);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Can  not  read  lfh: "  +  fileName);	  System.err.println(   "Can    not    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
410	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  fileName,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  fileName,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  fileName,  e);	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
411	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  in.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  in.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  ' "  +  in.getMessage());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
412	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  zipEncoding.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  zipEncoding.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  ' "  +  zipEncoding.getMessage());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
413	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  e.getSourceName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  e.getSourceName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  ' "  +  e.getSourceName());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
414	[BUG]  [BUGGY]  System.err.println( "JSC_UNICODEExtraFields: "  +  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_UNICODEExtraFields: "  +  source);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_UNICODEExtraFields: "  +  source);	  System.err.println(   "JSC_UNIcodeExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
415	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  source  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  source  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  source  error: "  +  e.getMessage());	  System.err.println(e.getMessage()    +   "    recursion    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
416	[BUG]  [BUGGY]  System.err.println( "JSC_UNIQUEExtraFields: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_UNIQUEExtraFields: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_UNIQUEExtraFields: "  +  e.getMessage());	  System.err.println(   "JSC_UNIcodeExtraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
417	[BUG]  [BUGGY]  Inflater  inf  =  getNextFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextFile();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextFile();	  Inflater    inf    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
418	[BUG]  [BUGGY]  Inflater  inf  =  getNextInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextInputStream();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextInputStream();	  Inflater    inf    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
419	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh).printStackTrace();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh).printStackTrace();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh).printStackTrace();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).printStackTrace();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
420	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh:n "  +  lfh).printStackTrace();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh:n "  +  lfh).printStackTrace();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh:n "  +  lfh).printStackTrace();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).printStackTrace();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
421	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).printSourceTrace();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).printSourceTrace();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).printSourceTrace();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).printStackTrace();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
422	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).printStandardTrace();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).printStandardTrace();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).printStandardTrace();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).printStackTrace();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
423	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getMessage());  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getMessage());  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  source.getMessage());  return  this;	  System.err.println(   "Unexpected    error:   "    +    e.getMessage());    return    this;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
424	[BUG]  [BUGGY]  e.printStackTrace(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  e.printStackTrace(false);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	e.printStackTrace(false);	  e.printStackTrace(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
425	[BUG]  [BUGGY]  File  fileNameLen  =  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  File  fileNameLen  =  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	File  fileNameLen  =  lfh.length();	  fileNameLen    =    lfh.length()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
426	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: ",  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: ",  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: ",  e.getMessage());	  System.err.println(   "Failed    to    read    lfh:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
427	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  t.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  t.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  t.getMessage());	  System.err.println(   "Failed    to    read    lfh:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
428	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  file  name: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  file  name: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  file  name: "  +  e.getMessage());	  System.err.println(   "Failed    to    read    lfh:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
429	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_STATEMENT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_STATEMENT);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_STATEMENT);	  System.err.println(e.getMessage(),    EOFException);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
430	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_URL_ERROR);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_URL_ERROR);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_URL_ERROR);	  System.err.println(e.getMessage(),    EOFException);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
431	[BUG]  [BUGGY]  if(!hasEFS)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(!hasEFS)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(!hasEFS)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
432	[BUG]  [BUGGY]  if(!hasEFS)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(!hasEFS)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(!hasEFS)  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
433	[BUG]  [BUGGY]  fileNameLen  =  lfh.length()  +  WORD  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.length()  +  WORD  +  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.length()  +  WORD  +  1;	  fileNameLen    =    lfh.length()    +    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
434	[BUG]  [BUGGY]  fileNameLen  =  lfh.length()  +  offset;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.length()  +  offset;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.length()  +  offset;	  fileNameLen    =    lfh.length()    +    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
435	[BUG]  [BUGGY]  System.err.println( "JSC_URPOSEFailed  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_URPOSEFailed  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_URPOSEFailed  to  read  lfh: "  +  lfh);	  System.err.println(   "SurposeFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
436	[BUG]  [BUGGY]  System.err.println( "Unicode  output  line: "  +  in.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output  line: "  +  in.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output  line: "  +  in.getMessage());	  System.err.println(   "Unicode    output    line:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
437	[BUG]  [BUGGY]  System.err.println( "Unicode  output  line: "  +  e.getLineNumber());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output  line: "  +  e.getLineNumber());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output  line: "  +  e.getLineNumber());	  System.err.println(   "Unicode    output    line:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
438	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  source,  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  source,  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  source,  e.getMessage());	  System.err.println(   "Unexpected    error:   "    +    e,    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
439	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  in.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  in.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  missing "  +  in.getMessage());	  System.err.println(   "UnicodeExtraFields:    missing   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
440	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  0);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  0);	  System.err.println(e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
441	[BUG]  [BUGGY]  e.printStackTrace(fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  e.printStackTrace(fileNameLen);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	e.printStackTrace(fileNameLen);	  e.printStackTrace(in);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
442	[BUG]  [BUGGY]  System.err.println( "CurrentZipFailed  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurrentZipFailed  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurrentZipFailed  to  read  lfh: "  +  lfh);	  System.err.println(   "JZipFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
443	[BUG]  [BUGGY]  System.err.println( "JZipFailed  to  read  lf: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JZipFailed  to  read  lf: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JZipFailed  to  read  lf: "  +  lfh);	  System.err.println(   "JZipFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
444	[BUG]  [BUGGY]  int  lfhLen  =  readFully(lfh,  out);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  readFully(lfh,  out);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  readFully(lfh,  out);	  int    lfhLen    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
445	[BUG]  [BUGGY]  System.err.println( "ZipExtraFields:n "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "ZipExtraFields:n "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "ZipExtraFields:n "  +  lfh);	  System.err.println(   "ZipExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
446	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields:n "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields:n "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields:n "  +  lfh);	  System.err.println(   "Unicode    extraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
447	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields: "  +  fileName);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields: "  +  fileName);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields: "  +  fileName);	  System.err.println(   "Unicode    extraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
448	[BUG]  [BUGGY]  System.err.println( "Unicode  output: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output: "  +  lfh);	  System.err.println(   "Unicode    extraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
449	[BUG]  [BUGGY]  Inflater  inflater  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getNextArchiveEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getNextArchiveEntry();	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
450	[BUG]  [BUGGY]  System.err.println( "Unexpected  errors: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  errors: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  errors: "  +  e.getMessage());	  System.err.println(   "Unexpected    error:n   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
451	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfFile().length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfFile().length;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfFile().length;	  int    lengthOfLastRead    =    readBytesOfEntry().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
452	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfEntry().length  +  bytesReadFromStream;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfEntry().length  +  bytesReadFromStream;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfEntry().length  +  bytesReadFromStream;	  int    lengthOfLastRead    =    readBytesOfEntry().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
453	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfLine().length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfLine().length;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfLine().length;	  int    lengthOfLastRead    =    readBytesOfEntry().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
454	[BUG]  [BUGGY]  e.printStackTrace(in,  inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  e.printStackTrace(in,  inputStream);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	e.printStackTrace(in,  inputStream);	  e.printStackTrace(inputStream);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
455	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:n "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:n "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:n "  +  lfh,  e);	  System.err.println(   "UnicodeExtraFields:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
456	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  fileName,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  fileName,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  fileName,  e);	  System.err.println(   "UnicodeExtraFields:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
457	[BUG]  [BUGGY]  System.err.println(e, "Failed  to  read  lfh: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e, "Failed  to  read  lfh: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e, "Failed  to  read  lfh: "  +  lfh,  e);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
458	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  fileName,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  fileName,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  fileName,  e);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
459	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh:n "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh:n "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh:n "  +  lfh,  e);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
460	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ ",  e ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ ",  e ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ ",  e ");	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
461	[BUG]  [BUGGY]  fileNameLen  =  lfh.length()  /  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.length()  /  2;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.length()  /  2;	  fileNameLen    =    lfh.length()    *    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
462	[BUG]  [BUGGY]  fileNameLen  =  lfh.length()  *  2  +  bytesReadFromStream;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.length()  *  2  +  bytesReadFromStream;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.length()  *  2  +  bytesReadFromStream;	  fileNameLen    =    lfh.length()    *    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
463	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfFile();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfFile();	  int    lengthOfLastRead    =    readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
464	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfLastRead();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfLastRead();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfLastRead();	  int    lengthOfLastRead    =    readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
465	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfEntry(off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfEntry(off);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfEntry(off);	  int    lengthOfLastRead    =    readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
466	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfLine();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfLine();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfLine();	  int    lengthOfLastRead    =    readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
467	[BUG]  [BUGGY]  System.err.println( "JSC_ZipFailed  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_ZipFailed  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_ZipFailed  to  read  lfh: "  +  lfh);	  System.err.println(   "ZipFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
468	[BUG]  [BUGGY]  System.err.println( "JipFailed  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JipFailed  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JipFailed  to  read  lfh: "  +  lfh);	  System.err.println(   "ZipFailed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
469	[BUG]  [BUGGY]  if(!hasEFS)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(!hasEFS)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(!hasEFS)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
470	[BUG]  [BUGGY]  if(!hasEFS)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(!hasEFS)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(!hasEFS)  {  if(e.getCause()!=  null)  {  e.printStackTrace();  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
471	[BUG]  [BUGGY]  System.err.println( "Unexpected  source  error: ",  e.getMessage());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  source  error: ",  e.getMessage());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  source  error: ",  e.getMessage());  return  null;	  System.err.println(   "Unexpected    source    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
472	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  retrieved  from  source: "  +  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  retrieved  from  source: "  +  source);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  retrieved  from  source: "  +  source);	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
473	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + ":  was  expecting  closing  entry  for  source  ' "  +  source  + "'. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + ":  was  expecting  closing  entry  for  source  ' "  +  source  + "'. ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + ":  was  expecting  closing  entry  for  source  ' "  +  source  + "'. ");	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
474	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + ":  was  expecting  closing  entry  for  source  ' "  +  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + ":  was  expecting  closing  entry  for  source  ' "  +  source);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + ":  was  expecting  closing  entry  for  source  ' "  +  source);	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
475	[BUG]  [BUGGY]  Error.println( "Unexpected  error: ",  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  error: ",  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  error: ",  e.getMessage());	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
476	[BUG]  [BUGGY]  Error.println( "Curpose  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Curpose  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Curpose  error: "  +  e.getMessage());	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
477	[BUG]  [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead(off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead(off);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  getLengthOfLastRead(off);	  int    lengthOfLastRead    =    getLengthOfLastRead();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
478	[BUG]  [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead()  +  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  getLengthOfLastRead()  +  LFH_LEN;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  getLengthOfLastRead()  +  LFH_LEN;	  int    lengthOfLastRead    =    getLengthOfLastRead();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
479	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getLineNumber());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getLineNumber());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  source.getLineNumber());	  System.err.println(   "Unexpected    error:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
480	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getLocalName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  source.getLocalName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  source.getLocalName());	  System.err.println(   "Unexpected    error:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
481	[BUG]  [BUGGY]  if(!hasEFS)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(!hasEFS)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(!hasEFS)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
482	[BUG]  [BUGGY]  if(!hasEFS)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(!hasEFS)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(!hasEFS)  {  if(e.getCause()  ==  null)  {  e.printStackTrace();  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
483	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields:n "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields:n "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields:n "  +  e.getMessage());	  System.err.println(   "Unicode    extraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
484	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields: ",  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields: ",  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields: ",  e.getMessage());	  System.err.println(   "Unicode    extraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
485	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  fileNameLen.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null)  {  fileNameLen.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null)  {  fileNameLen.printStackTrace();  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
486	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null)  {  return  null;  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null)  {  return  null;  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
487	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntry(e.getCause());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getNextZipEntry(e.getCause());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getNextZipEntry(e.getCause());	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
488	[BUG]  [BUGGY]  Inflater  inf  =  getInflater(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getInflater(source);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getInflater(source);	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
489	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  fileName.getMessage(),  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  fileName.getMessage(),  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  fileName.getMessage(),  e);	  System.err.println(   "Unexpected    error:   "    +    e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
490	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  source,  e.getMessage(),  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  source,  e.getMessage(),  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  source,  e.getMessage(),  e);	  System.err.println(   "Unexpected    error:   "    +    e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
491	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  file  name: "  +  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  file  name: "  +  inf);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  file  name: "  +  inf);	  System.err.println(   "Failed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
492	[BUG]  [BUGGY]  System.err.println(e, "Failed  to  read  lfh: "  +  lfh,  e);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e, "Failed  to  read  lfh: "  +  lfh,  e);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e, "Failed  to  read  lfh: "  +  lfh,  e);  return  null;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh,    e);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
493	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).initSource();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).initSource();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).initSource();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).initCause(e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
494	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).initSourceName(e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).initSourceName(e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).initSourceName(e);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).initCause(e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
495	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).initSourceLine();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).initSourceLine();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).initSourceLine();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).initCause(e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
496	[BUG]  [BUGGY]  System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh);  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh);  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh);  return  this;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    this;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
497	[BUG]  [BUGGY]  Inflater  inf  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextArchiveEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextArchiveEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
498	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ ".js ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ ".js ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ ".js ");	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
499	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytes  of ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytes  of ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytes  of ");	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
500	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  from  file  name: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  from  file  name: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  from  file  name: "  +  lfh);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
501	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytes  read  from  stream ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytes  read  from  stream ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytes  read  from  stream ");	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
502	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  from  file  name: "+e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  from  file  name: "+e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  from  file  name: "+e.getMessage());	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
503	[BUG]  [BUGGY]  System.err.println( "JSC_FAIL  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_FAIL  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_FAIL  to  read  lfh: "  +  lfh);	  System.err.println(   "JSC_Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
504	[BUG]  [BUGGY]  System.err.println( "JSC_Failed  to  read  lfh:n "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_Failed  to  read  lfh:n "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_Failed  to  read  lfh:n "  +  lfh);	  System.err.println(   "JSC_Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
505	[BUG]  [BUGGY]  System.err.println( "SurposeFailed  to  read  lfh: "  +  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "SurposeFailed  to  read  lfh: "  +  inf);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "SurposeFailed  to  read  lfh: "  +  inf);	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
506	[BUG]  [BUGGY]  System.err.println( "JZipFailed  to  read  lfh: "  +  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JZipFailed  to  read  lfh: "  +  inf);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JZipFailed  to  read  lfh: "  +  inf);	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
507	[BUG]  [BUGGY]  if(!hasEFS)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(!hasEFS)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(!hasEFS)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
508	[BUG]  [BUGGY]  Inflater  inf  =  current.readFully();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  current.readFully();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  current.readFully();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
509	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(),  bytesReadFromStream;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  current.getInputStream(),  bytesReadFromStream;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  current.getInputStream(),  bytesReadFromStream;	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
510	[BUG]  [BUGGY]  System.err.println( "SurposeFailed  to  read  lfh: "  +  lfh);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "SurposeFailed  to  read  lfh: "  +  lfh);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "SurposeFailed  to  read  lfh: "  +  lfh);  return  null;	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh);    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
511	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntry(e.getSource());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getNextZipEntry(e.getSource());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getNextZipEntry(e.getSource());	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
512	[BUG]  [BUGGY]  Inflater  inf  =  getNextInflater(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextInflater(lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextInflater(lfh);	  Inflater    inf    =    getNextInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
513	[BUG]  [BUGGY]  int  lfhLen  =  current.readFully(lfh,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  current.readFully(lfh,  fileNameLen);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  current.readFully(lfh,  fileNameLen);	  int    lfhLen    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
514	[BUG]  [BUGGY]  int  lfhLen  =  current.readFully(lfh,  index);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  current.readFully(lfh,  index);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  current.readFully(lfh,  index);	  int    lfhLen    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
515	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  new  Inflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  new  Inflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  new  Inflater();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    new    Inflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
516	[BUG]  [BUGGY]  System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh);  return  new  Inflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh);  return  new  Inflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh);  return  new  Inflater();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    new    Inflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
517	[BUG]  [BUGGY]  fileNameLen  =   "- "  +  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =   "- "  +  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =   "- "  +  lfh.length();	  fileNameLen    =   "   "    +    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
518	[BUG]  [BUGGY]  fileNameLen  =   "/ "  +  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =   "/ "  +  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =   "/ "  +  lfh.length();	  fileNameLen    =   "   "    +    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
519	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:n "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:n "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:n "  +  e.toString());	  System.err.println(   "UnicodeExtraFields:   "    +    e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
520	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: ",  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: ",  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: ",  e.toString());	  System.err.println(   "UnicodeExtraFields:   "    +    e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
521	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  fileName.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  fileName.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  fileName.toString());	  System.err.println(   "UnicodeExtraFields:   "    +    e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
522	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: "  +  e.getMessage());  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: "  +  e.getMessage());  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: "  +  e.getMessage());  return  null;	  System.err.println(e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
523	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:n "  +  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:n "  +  inf);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:n "  +  inf);	  System.err.println(   "UnicodeExtraFields:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
524	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  inf  + "  bytes  readFromStream: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  inf  + "  bytes  readFromStream: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  inf  + "  bytes  readFromStream: "  +  lfh);	  System.err.println(   "UnicodeExtraFields:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
525	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  inf  + "  bytes  readFromStream: "  +  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  inf  + "  bytes  readFromStream: "  +  bytesReadFromStream);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  inf  + "  bytes  readFromStream: "  +  bytesReadFromStream);	  System.err.println(   "UnicodeExtraFields:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
526	[BUG]  [BUGGY]  Error.println( "Unexpected  error: "  +  e.getMessage(),  e);  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  error: "  +  e.getMessage(),  e);  return  null;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  error: "  +  e.getMessage(),  e);  return  null;	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
527	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
528	[BUG]  [BUGGY]  System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh);  return;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh);  return;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "JSC_Failed  to  read  lfh: "  +  lfh);  return;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
529	[BUG]  [BUGGY]  System.err.println( "Unicode  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  error: "  +  e.getMessage());	  e.printStackTrace(System.err);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
530	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  resource: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  resource: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  resource: "  +  lfh);	  e.printStackTrace(System.err);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
531	[BUG]  [BUGGY]  fileNameLen  =  lfh.getPurposeFlag();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.getPurposeFlag();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.getPurposeFlag();	  fileNameLen    =    lfh.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
532	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_URL);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_URL);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_URL);	  System.err.println(e.getMessage(),    EOF_Exception);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
533	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_SourceName);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_SourceName);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_SourceName);	  System.err.println(e.getMessage(),    EOF_Exception);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
534	[BUG]  [BUGGY]  System.err.println( "ZipExtraFields:null "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "ZipExtraFields:null "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "ZipExtraFields:null "  +  lfh);	  System.err.println(   "UnicodeExtraFields:n   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
535	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getLineNumber());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getLineNumber());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  source.getLineNumber());	  System.err.println(   "UnicodeExtraFields:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
536	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getClass());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getClass());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  source.getClass());	  System.err.println(   "UnicodeExtraFields:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
537	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getLineno());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getLineno());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  source.getLineno());	  System.err.println(   "UnicodeExtraFields:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
538	[BUG]  [BUGGY]  Error.println( "CurposeFailed  to  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "CurposeFailed  to  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "CurposeFailed  to  read  lfh: "  +  lfh);	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
539	[BUG]  [BUGGY]  Error.println( "Can  not  read  lfh: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Can  not  read  lfh: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Can  not  read  lfh: "  +  lfh);	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
540	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  source;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  source;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh);  source;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    source;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
541	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  source;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  source;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh);  return  source;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    source;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
542	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_FONT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_FONT);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_FONT);	  System.err.println(e.getMessage(),    EOF_THRESHOLD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
543	[BUG]  [BUGGY]  File  fileNameLen  -=  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  File  fileNameLen  -=  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	File  fileNameLen  -=  lfh.length();	  fileNameLen    -=    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
544	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: "  +  in.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: "  +  in.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: "  +  in.getMessage());	  System.err.println(   "Failed    to    read    source:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
545	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  source: ",  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  source: ",  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  source: ",  e.getMessage());	  System.err.println(   "Failed    to    read    source:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
546	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  inf.getLineNumber());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  inf.getLineNumber());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  inf.getLineNumber());	  System.err.println(   "Unexpected    error:   "    +    inf.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
547	[BUG]  [BUGGY]  System.err.println( "Unicode  extension  field: "  +  zipEncoding.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extension  field: "  +  zipEncoding.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extension  field: "  +  zipEncoding.getMessage());	  System.err.println(   "Unicode    extension    field:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
548	[BUG]  [BUGGY]  System.err.println( "Unicode  extension  field: "  +  e.getSourceName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extension  field: "  +  e.getSourceName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extension  field: "  +  e.getSourceName());	  System.err.println(   "Unicode    extension    field:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
549	[BUG]  [BUGGY]  System.err.println( "Unicode  extension  field: "  +  in.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extension  field: "  +  in.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extension  field: "  +  in.getMessage());	  System.err.println(   "Unicode    extension    field:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
550	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(in);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  current.getInputStream(in);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  current.getInputStream(in);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
551	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  Inflater.toHexString(inf));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  Inflater.toHexString(inf));  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  Inflater.toHexString(inf));	  System.err.println(   "Failed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
552	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inf).printStackTrace();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inf).printStackTrace();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  inf).printStackTrace();	  System.err.println(   "Failed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
553	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getLength());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  source.getLength());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  source.getLength());	  System.err.println(   "UnicodeExtraFields:   "    +    source.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
554	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields: "  +  zipEncoding.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields: "  +  zipEncoding.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields: "  +  zipEncoding.getMessage());	  System.err.println(   "Unicode    extraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
555	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields: "  +  inf.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields: "  +  inf.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields: "  +  inf.getMessage());	  System.err.println(   "Unicode    extraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
556	[BUG]  [BUGGY]  System.err.println( "Unicode  extra  fields: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extra  fields: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extra  fields: "  +  e.getMessage());	  System.err.println(   "Unicode    extraFields:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
557	[BUG]  [BUGGY]  System.err.println(e, "CurposeFailed  to  read  lfh: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e, "CurposeFailed  to  read  lfh: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e, "CurposeFailed  to  read  lfh: "  +  lfh,  e);	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
558	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh  + "  from  the  source: ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh  + "  from  the  source: ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh  + "  from  the  source: ");	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
559	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh+ "  bytesReadFromStream: ");	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
560	[BUG]  [BUGGY]  System.err.println( "Unsupported  source: "  +  e.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unsupported  source: "  +  e.toString());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unsupported  source: "  +  e.toString());	  System.err.println(e.toString());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
561	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh  + "  from  the  source: ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh  + "  from  the  source: ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  lfh  + "  from  the  source: ");	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    lfh+   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
562	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields:  ' "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields:  ' "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields:  ' "  +  e.getMessage());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
563	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  inf.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  ' "  +  inf.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  ' "  +  inf.getMessage());	  System.err.println(   "UnicodeExtraFields:    '   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
564	[BUG]  [BUGGY]  fileNameLen  =  this.current.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  this.current.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  this.current.length();	  fileNameLen    =    current.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
565	[BUG]  [BUGGY]  Error.println(e.getMessage(), "Unexpected  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println(e.getMessage(), "Unexpected  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println(e.getMessage(), "Unexpected  error: "  +  e.getMessage());	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
566	[BUG]  [BUGGY]  ||  e.getCause()  ==  null)  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||  e.getCause()  ==  null)  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||  e.getCause()  ==  null)  {  throw  new  EOFException( " ");  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
567	[BUG]  [BUGGY]  Inflater  inflater  =  e.getCause();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  e.getCause();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  e.getCause();	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
568	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  throw  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null)  {  throw  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null)  {  throw  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
569	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  zipEncoding.getMessage(),  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  zipEncoding.getMessage(),  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  zipEncoding.getMessage(),  e);	  System.err.println(   "Unexpected    error:   "    +    e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
570	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
571	[BUG]  [BUGGY]  ||  e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  ||  e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	||  e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
572	[BUG]  [BUGGY]  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
573	[BUG]  [BUGGY]  fileNameLen  =  this.lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  this.lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  this.lfh.length();	  fileNameLen    =    lfh.length()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
574	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).return;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh).return;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh).return;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).initCause(e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
575	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  inf;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  inf;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  inf;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    source;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
576	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  inflater;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  inflater;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh);  return  inflater;	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    source;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
577	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesOfLastRead().length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesOfLastRead().length;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesOfLastRead().length;	  int    lengthOfLastRead    =    readBytesOfEntry().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
578	[BUG]  [BUGGY]  Inflater  inf  =  getNextDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextDirectory();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextDirectory();	  Inflater    inf    =    getNextEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
579	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_THRESHOLD,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_THRESHOLD,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_THRESHOLD,  e);	  System.err.println(e.getMessage(),    EOF_THRESHOLD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
580	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_THRESHOLD  + "  error: ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_THRESHOLD  + "  error: ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_THRESHOLD  + "  error: ");	  System.err.println(e.getMessage(),    EOF_THRESHOLD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
581	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_THRESHOLD  + "  expected: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_THRESHOLD  + "  expected: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_THRESHOLD  + "  expected: "  +  e.getMessage());	  System.err.println(e.getMessage(),    EOF_THRESHOLD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
582	[BUG]  [BUGGY]  int  lfh  =  current.readFully(Locale.US);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfh  =  current.readFully(Locale.US);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfh  =  current.readFully(Locale.US);	  int    lfh    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
583	[BUG]  [BUGGY]  fileNameLen  +=  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  +=  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  +=  lfh.length();	  fileNameLen    =    lfh.length()    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
584	[BUG]  [BUGGY]  System.err.println( "Unicode  extraFields: "  +  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extraFields: "  +  inf);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extraFields: "  +  inf);	  System.err.println(   "UnicodeExtraFields:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
585	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e.toString(),  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.toString(),  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  e.toString(),  e.getMessage());	  System.err.println(   "Unexpected    error:   "    +    e,    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
586	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh:n "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh:n "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh:n "  +  lfh);	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
587	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inf);  return  new  Inflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  inf);  return  new  Inflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  inf);  return  new  Inflater();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return    new    Inflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
588	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntryInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getNextZipEntryInflater();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getNextZipEntryInflater();	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
589	[BUG]  [BUGGY]  Error.println( "Unexpected  error: "  +  inf.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Unexpected  error: "  +  inf.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Unexpected  error: "  +  inf.getMessage());	  Error.println(   "Unexpected    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
590	[BUG]  [BUGGY]  System.err.println( "Unicode  extension  field: "  +  inf.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extension  field: "  +  inf.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extension  field: "  +  inf.getMessage());	  System.err.println(   "Unicode    extension    field:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
591	[BUG]  [BUGGY]  System.err.println( "Unicode  extension  field: "  +  fileNameLen  + ".getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extension  field: "  +  fileNameLen  + ".getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extension  field: "  +  fileNameLen  + ".getMessage());	  System.err.println(   "Unicode    extension    field:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
592	[BUG]  [BUGGY]  fileNameLen  =  lfh.getFileName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.getFileName();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.getFileName();	  fileNameLen    =    lfh.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
593	[BUG]  [BUGGY]  System.err.println( "Current  error: "  +  zipEncoding.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Current  error: "  +  zipEncoding.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Current  error: "  +  zipEncoding.getMessage());	  System.err.println(   "Current    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
594	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readBytesLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readBytesLen();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readBytesLen();	  int    lengthOfLastRead    =    readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
595	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(e.getSource());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getInflater(e.getSource());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getInflater(e.getSource());	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
596	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inflater  =  getInflater(inputStream);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inflater  =  getInflater(inputStream);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
597	[BUG]  [BUGGY]  if(e.getCrc()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCrc()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCrc()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
598	[BUG]  [BUGGY]  if(e.getCurrentSegment()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCurrentSegment()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCurrentSegment()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
599	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
600	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  fileName);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  fileName);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  fileName);	  System.err.println(   "UnicodeExtraFields:   "    +    source);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
601	[BUG]  [BUGGY]  int  lengthOfLastRead  =  readFully(lfh,  out);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lengthOfLastRead  =  readFully(lfh,  out);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lengthOfLastRead  =  readFully(lfh,  out);	  int    lengthOfLastRead    =    readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
602	[BUG]  [BUGGY]  Inflater  inf  =  getNextInflater(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextInflater(source);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextInflater(source);	  Inflater    inf    =    getNextInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
603	[BUG]  [BUGGY]  System.err.println(e, "UnicodeExtraFields: "  +  lfh,  e);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e, "UnicodeExtraFields: "  +  lfh,  e);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e, "UnicodeExtraFields: "  +  lfh,  e);	  System.err.println(   "UnicodeExtraFields:   "    +    lfh,    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
604	[BUG]  [BUGGY]  fileNameLen  =  lfh.trim().length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =  lfh.trim().length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =  lfh.trim().length();	  fileNameLen    =    lfh.length()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
605	[BUG]  [BUGGY]  int  lfhLen  =  current.readFully(lfh,  out);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  int  lfhLen  =  current.readFully(lfh,  out);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	int  lfhLen  =  current.readFully(lfh,  out);	  int    lfhLen    =    current.readFully(lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
606	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  len).printStackTrace();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  len).printStackTrace();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  len).printStackTrace();	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh).printStackTrace();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
607	[BUG]  [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  inf);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Can  not  read  lfh: "  +  inf);	  System.err.println(   "Can    not    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
608	[BUG]  [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Can  not  read  lfh: "  +  LFH_LEN);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Can  not  read  lfh: "  +  LFH_LEN);	  System.err.println(   "Can    not    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
609	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ",  e);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ",  e);  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ",  e);  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
610	[BUG]  [BUGGY]  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }	  if(e.getCause()    ==    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
611	[BUG]  [BUGGY]  if(e!=  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e!=  null)  {  return  null;  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e!=  null)  {  return  null;  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
612	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  error: ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  error: ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  error: ");	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
613	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  closing  file  name: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  closing  file  name: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  was  expecting  closing  file  name: "  +  lfh);	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
614	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  Impossible  source: ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  Impossible  source: ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  Impossible  source: ");	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
615	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  closing  file  name. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  was  expecting  closing  file  name. ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  was  expecting  closing  file  name. ");	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
616	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  Impossible  source: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  Impossible  source: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  Impossible  source: "  +  e.getMessage());	  System.err.println(e.getMessage()    +   "n   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
617	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  inf.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  inf.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  missing "  +  inf.getMessage());	  System.err.println(   "UnicodeExtraFields:    missing   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
618	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  zipEncoding.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields:  missing "  +  zipEncoding.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields:  missing "  +  zipEncoding.getMessage());	  System.err.println(   "UnicodeExtraFields:    missing   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
619	[BUG]  [BUGGY]  System.err.println(e.getMessage()  + "  vs  error: "  +  e.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage()  + "  vs  error: "  +  e.getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage()  + "  vs  error: "  +  e.getMessage());	  System.err.println(e.getMessage()    +   "    error:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
620	[BUG]  [BUGGY]  fileNameLen  -=  lfh.length()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  -=  lfh.length()  -  1;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  -=  lfh.length()  -  1;	  fileNameLen    -=    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
621	[BUG]  [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getLength());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "UnicodeExtraFields: "  +  lfh.getLength());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "UnicodeExtraFields: "  +  lfh.getLength());	  System.err.println(   "UnicodeExtraFields:   "    +    lfh.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
622	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  LFH_LEN);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  LFH_LEN);	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
623	[BUG]  [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Error.println( "Failed  to  read  lfh: "  +  inf);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Error.println( "Failed  to  read  lfh: "  +  inf);	  Error.println(   "Failed    to    read    lfh:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
624	[BUG]  [BUGGY]  fileNameLen  =(lfh  ==  null)?  null  :  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =(lfh  ==  null)?  null  :  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =(lfh  ==  null)?  null  :  lfh.length();	  fileNameLen    =   "   "    +    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
625	[BUG]  [BUGGY]  fileNameLen  =   "0 "  +  lfh.length();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  fileNameLen  =   "0 "  +  lfh.length();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	fileNameLen  =   "0 "  +  lfh.length();	  fileNameLen    =   "   "    +    lfh.length();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
626	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  inf.getClass());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  inf.getClass());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  inf.getClass());	  System.err.println(   "Unexpected    error:   "    +    inf.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
627	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  inf.getLocalFileName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  error: "  +  inf.getLocalFileName());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  error: "  +  inf.getLocalFileName());	  System.err.println(   "Unexpected    error:   "    +    inf.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
628	[BUG]  [BUGGY]  e.printStackTrace(inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  e.printStackTrace(inflater);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	e.printStackTrace(inflater);	  e.printStackTrace(in);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
629	[BUG]  [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.getMessage());  return  in;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unexpected  source  error: "  +  e.getMessage());  return  in;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unexpected  source  error: "  +  e.getMessage());  return  in;	  System.err.println(   "Unexpected    source    error:   "    +    e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
630	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  e);  return  this;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  e);  return  this;  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  e);  return  this;	  System.err.println(e.getMessage());    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
631	[BUG]  [BUGGY]  System.err.println( "Unicode  extra  fields: "  +  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  extra  fields: "  +  lfh);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  extra  fields: "  +  lfh);	  System.err.println(   "Unicode    extraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
632	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  e));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  e));  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  e));	  System.err.println(e.getMessage(),    e);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
633	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh.getClass());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh.getClass());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh.getClass());	  System.err.println(   "Failed    to    read    lfh:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
634	[BUG]  [BUGGY]  if(e.getCrc()!=  null)  {  e.printStackTrace();  }  else  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCrc()!=  null)  {  e.printStackTrace();  }  else  {  return  null;  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCrc()!=  null)  {  e.printStackTrace();  }  else  {  return  null;  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
635	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  return  null;  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  return  null;  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
636	[BUG]  [BUGGY]  e.printStackTrace();  }  else  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  e.printStackTrace();  }  else  {  return  null;  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	e.printStackTrace();  }  else  {  return  null;  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
637	[BUG]  [BUGGY]  if(e.getCrc()!=  null)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCrc()!=  null)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCrc()!=  null)  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
638	[BUG]  [BUGGY]  if(e.getCurrentSegment()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCurrentSegment()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCurrentSegment()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
639	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
640	[BUG]  [BUGGY]  if(e.getCurrentSegment()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCurrentSegment()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCurrentSegment()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  EOFException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
641	[BUG]  [BUGGY]  if(e.getCurrentSegment()!=  null)  {  e.printStackTrace();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCurrentSegment()!=  null)  {  e.printStackTrace();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCurrentSegment()!=  null)  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    EOFException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
642	[BUG]  [BUGGY]  Inflater  inf  =  getNextInputFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextInputFileEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextInputFileEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
643	[BUG]  [BUGGY]  Inflater  inf  =  getNextOutputFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  Inflater  inf  =  getNextOutputFileEntry();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	Inflater  inf  =  getNextOutputFileEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
644	[BUG]  [BUGGY]  System.err.println( "ZipExtraFields: "  +  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "ZipExtraFields: "  +  zipEncoding);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "ZipExtraFields: "  +  zipEncoding);	  System.err.println(   "ZipExtraFields:   "    +    lfh);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
645	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_JSDOC_ERROR);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_JSDOC_ERROR);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_JSDOC_ERROR);	  System.err.println(e.getMessage(),    EOFException);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
646	[BUG]  [BUGGY]  System.err.println(e.getMessage(),  EOF_SYNTHETIC);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println(e.getMessage(),  EOF_SYNTHETIC);  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println(e.getMessage(),  EOF_SYNTHETIC);	  System.err.println(e.getMessage(),    EOFException);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
647	[BUG]  [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  throw  new  IllegalStateException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Failed  to  read  lfh: "  +  lfh);  throw  new  IllegalStateException( " ");  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Failed  to  read  lfh: "  +  lfh);  throw  new  IllegalStateException( " ");	  System.err.println(   "Failed    to    read    lfh:   "    +    lfh);    return;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
648	[BUG]  [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  inf).printStackTrace();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "CurposeFailed  to  read  lfh: "  +  inf).printStackTrace();  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "CurposeFailed  to  read  lfh: "  +  inf).printStackTrace();	  System.err.println(   "CurposeFailed    to    read    lfh:   "    +    inf);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
649	[BUG]  [BUGGY]  System.err.println( "Unicode  output  line: "  +  fileName  + ".getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  System.err.println( "Unicode  output  line: "  +  fileName  + ".getMessage());  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	System.err.println( "Unicode  output  line: "  +  fileName  + ".getMessage());	  System.err.println(   "Unicode    output    line:   "    +    e.getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
650	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  closeEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;      [BUGGY]  if(e.getCause()!=  null)  {  closeEntry();  }  [BUGGY]      ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	119	119	1	replace	if(e.getCause()!=  null)  {  closeEntry();  }	  if(e.getCause()!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
