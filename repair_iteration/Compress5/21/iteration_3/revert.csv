projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:EOFException:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:n"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()*2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen-=lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=current.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=""+lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipExtraFields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()==null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(System.err);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()==null){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){e.printStackTrace();}else{thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=current.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=current.readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:EOFException:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:EOFexception:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e,e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.getMessage(),e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"n");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.toString());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.getMessage());returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.getMessage());return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("SurposeFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh+"n");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOFException);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_Exception);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"n");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectedsourceerror:"+e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JZipFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Cannotreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:",e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:missing"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:'"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:n"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNIcodeExtraFields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_Failedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.getLength();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()+4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:",e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:n"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNIcodeExtraFields:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returnsource;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_JSError);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_THRESHOLD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e!=null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e!=null){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e!=null){e.printStackTrace();}else{thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e!=null){e.printStackTrace();}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(System.out);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(in);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=getLengthOfLastRead();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfEntry().length;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returnnewInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returnin;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"error:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"recursionerror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).printStackTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).initCause(e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+inf.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+source.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+zipEncoding.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:EOFexception:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:EOFerror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipExtraFields:EOFexception:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:missing"+lfh.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:missing"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:missing"+lfh,e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:missing",e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:missing"+source.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JZipFailedtoreadlfh:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipFailedtoreadlfh:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+inf,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+Inflater.toString(inf));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+inf+"n");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+inflater);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipFailedtoreadlfh:"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+entryEncoding.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+zipEncoding.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+zipEncoding.getName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+this.entryEncoding.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:missing"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+",e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e);returnin;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh);returnin;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returnINVALID;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_ERROR);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_EXTERN_ERROR);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_MESSAGE);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e);returnsource;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returnthis.source;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returncurrent;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+lfh);returnsource;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh);returnsource;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JZIPFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CipFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||e.getCause()!=null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null||!e.isEnabled()){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){in.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e,e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.getMessage(),e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e,current.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e,fileNameLen.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e,source.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119FileNameLen=lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=fh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119filesReadFromBuffer=lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getOutputFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=this.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getInflater().getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getInflater().inflate(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getInflater().readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getNextFileEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getNextInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getNextZipEntry(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getNextEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getNextZipEntry(null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh,e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh,e));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh,e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=readFully(lfh,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=readFully(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=readFully(lfh,offset);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=readFully(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=readFully(lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+lfh.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+fileNameLen.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+t.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+cfg.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+fileName.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(lfh,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(lfh,offset);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(lfh,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+e.toString());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.toString());returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||e!=null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e==null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||(e!=null&&e.getCause()==null)){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||(e!=null&&!e.hasMoreElement())){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e!=null){thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getInflater(e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getInflater().inflate(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getInflater(false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getInflater(source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getInflater().getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e);returnnewInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh);returnnewInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfEntry().length+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfEntry().length-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=bytesReadFromStream.readBytesOfEntry().length;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=bytesReadFromStream(readBytesOfEntry().length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=bytesReadFromStream().length;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=current.readFully(lfh,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=current.readFully(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=current.readFully(lfh,offset);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=current.readFully(lfh,partesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=current.readFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh,e);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh);returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println(e,"Failedtoreadlfh:"+lfh);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("CurposeFailedtoreadlfh:"+lfh);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Thread.currentThread().interrupt();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119inflater.printStackTrace(e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen.printStackTrace(e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e);returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e));returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectedsourceerror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectedsourceerror:"+e.getMessage());returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectedsourceerror:"+e.toString());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectedsourceerror:"+e.getMessage());return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectedsourceerror:"+e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:'"+lfh.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:""+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:'"+current.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:'"+source.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:'"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:'"+lfh.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=current.getLength();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.getFileNameLength();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.getLength()+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=current.getFileNameLength();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.getChars(0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen-=lfh.getLength();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Cannotreadlfh:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Cannotreadlfh:"+lfh+"n");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Cannotreadlfh:"+fileNameLen);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen-=lfh.length()+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen-=lfh.length()*2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen-=lfh.length()+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen-=lfh.length()*4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen-=lfh.length()+4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119FileNameLen-=lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeadditionalFields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraField:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e).printStackTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh),e).printStackTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).printStandardError();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+lfh.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+source.getMessage(),e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+source.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+source.getName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+source.getMsg());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNICODEExtraFields:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNIcodeExtraFields:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNICodeExtraFields:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNICODEExtraFields:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+inf,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+Inflater.toString(inf));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+inflater);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+inf+"n");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+inf.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+e,e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+e.getMessage(),e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println(e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Curposeerror:"+e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+e.getMessage());returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+e,e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:"+lfh.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeentryEncoding:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutput:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeadditionalFields:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_Exception,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_IOException);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_RESULT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readFully(lfh,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readFully(lfh,offset);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readFully(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readFully(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readFully(lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNICODEExtraFields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNIcodeExtraFields:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNICodeExtraFields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Zip_UNIcodeExtraFields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||e.getCause()==null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null||!e.isExtern()){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(readBytesOfEntry());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextEntry().getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getFullEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextEntry().getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextFileEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh+"of");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh+"bytesReadFromStream");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh+"bytesReadFromStream=");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=(lfh.length()>0)?lfh.length():lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=newString(lfh.length());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=(lfh.length()>0)?lfh.length():lfh;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_QUOTE);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_FORBIDDEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_STANDARD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(current==null){if(e.getCause()==null){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(current==null){if(e.getCause()==null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(current==null){if(e.getCause()==null){thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),e);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println(e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage());returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOFException);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"wasexpectingEOFerror:");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+":wasexpectingEOFexception.");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"wasexpectingEOFexception.");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"wasexpectingEOFerror.");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"recursionerror:");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println(e,"Failedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh+"n");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+name);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+name.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||e!=null){thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e==null){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119AssertionFailedErrore=newAssertionFailedError(e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e==null){thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=bytesReadFromStream.readBytesOfEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119longlengthOfLastRead=readBytesOfEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"of");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"bytesReadFromStream:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"bytesReadFromStream");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=LfhUtil.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source.getName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source.getShortName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source.getMillis());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source.getLocalFileName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=current.length()+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=current.length()-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=current.length()+lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen-=current.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=current.length()*2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e==null){e.printStackTrace();}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||e!=null){e.printStackTrace();}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getFullInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getPreviousInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextOutputFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=getLengthOfLastRead()-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=getLengthOfLastRead()+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=getLengthOfLastRead(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119longlengthOfLastRead=getLengthOfLastRead();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=getLengthOfLastRead(0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Errorreadingsource:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_JSError,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_JS_ERROR);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_JSC_ERROR);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_GLOBAL_ERROR);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_JSERROR,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.toString(),e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.getMessage(),EOFException);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.getMessage(),EOF_Exception);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.getMessage(),EOF_ERROR);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+e.getMessage(),e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:n"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()==null){e.printStackTrace();}else{thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){in.printStackTrace();}else{thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()==null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh,e);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh);returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipFailedtoreadlfh:"+lfh);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.toString()+"n");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(Locale.ENGLISH);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+this.source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+name);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_EXPR_RESULT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+lfh.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+source.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+inputStream.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+current.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+lfh.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+",recursionerror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+",error:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"recursionerror:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+":recursionerror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh,e);return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+lfh);return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()+off;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()*WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen-=lfh.length()+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()>WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()|WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("SurposeFailedtoreadlfh:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_SURPOSEFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()*2+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()*4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e==null){e.printStackTrace();}else{thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||e!=null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e!=null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e==null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextZipEntry(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextInputEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipExtraFields:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JZipExtraFields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JipExtraFields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipExtraFields:"+source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.toString());return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+e.getMessage());return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e,e.getMessage());return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh,EOFException);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+e,lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh.getName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh.getFileName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh.getText());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh.getClass().getName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh.length;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"n";
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.toString()+"n");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println(e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.toString(),e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+lfh.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+entryEncoding.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+fileNameLen.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+cfg.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh.getClass().getName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+inf,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+inflater);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+Inflater.toString(inf));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+Inflater.toHexString(inf));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).error(e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).initCause(e,source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).toString();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).reportError(e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).initCause(e,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(current!=null){if(e.getCause()!=null){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(current!=null){if(e.getCause()!=null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"-error:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"wasexpectingEOFerror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"inerror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"error:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+e.getMessage());returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+e.toString());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+e.getMessage());return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Currenterror:"+e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectedexception:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=currentEntry.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=current.getInputStream(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=current.getOutputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=current.getInputStream(),bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=current.getEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=current.getInputStream(),lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+inf.getMessage(),e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+inf.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+Inflater.toString(inf.getMessage()));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+inf,e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_Failedtoreadlfh:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Zip_Failedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(Long.MAX_VALUE);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(!hasDataDescriptor){System.out.println("Failedtoreadsource:"+lfh);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(!hasDataDescriptor){System.out.println(e.getMessage());}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectedsourceerror:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+fileName.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getInflater(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getInflater(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getOutflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+source.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:",e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||(e!=null&&e.getCurrentName()!=null)){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||(e!=null&&e.getCurrentStructure()!=null)){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||(e!=null&&e.getCrc()!=null)){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||(e!=null&&e.getCurrentStructure()==null)){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh.getLineNumber());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh.getClass());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh+"from");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh+"onthesameline.");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh+"fromfilename:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh+"bytesReadFromStream:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh+"bytesReadFromStream:");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(lfh,out);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=rfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+source.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+e.getMessage(),e);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+entryEncoding.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:n"+zipEncoding.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:""+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh);returnin;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returnInflater.getInstance();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=current.length()+bytesReadFromStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=current.length()+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Couldnotreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Cannotreadlfh:"+fileName);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+fileName,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:'"+in.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:'"+zipEncoding.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:'"+e.getSourceName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNICODEExtraFields:"+source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"sourceerror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_UNIQUEExtraFields:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh).printStackTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:n"+lfh).printStackTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).printSourceTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).printStandardTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+source.getMessage());returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119FilefileNameLen=lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:",e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+t.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadfilename:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_STATEMENT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_URL_ERROR);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(!hasEFS){e.printStackTrace();}else{thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(!hasEFS){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()+WORD+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()+offset;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_URPOSEFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+in.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+e.getLineNumber());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+source,e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:missing"+in.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(fileNameLen);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurrentZipFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JZipFailedtoreadlf:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=readFully(lfh,out);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipExtraFields:n"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:n"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:"+fileName);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutput:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getNextArchiveEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederrors:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfFile().length;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfEntry().length+bytesReadFromStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfLine().length;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(in,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:n"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+fileName,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e,"Failedtoreadlfh:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+fileName,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:n"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+",e");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()/2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.length()*2+bytesReadFromStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfLastRead();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfEntry(off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfLine();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_ZipFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JipFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(!hasEFS){if(e.getCause()!=null){e.printStackTrace();}else{thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(!hasEFS){if(e.getCause()!=null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectedsourceerror:",e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"retrievedfromsource:"+source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+":wasexpectingclosingentryforsource'"+source+"'.");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+":wasexpectingclosingentryforsource'"+source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:",e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Curposeerror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=getLengthOfLastRead(off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=getLengthOfLastRead()+LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+source.getLineNumber());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+source.getLocalName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(!hasEFS){if(e.getCause()==null){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(!hasEFS){if(e.getCause()==null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:n"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:",e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){fileNameLen.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getNextZipEntry(e.getCause());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getInflater(source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+fileName.getMessage(),e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+source,e.getMessage(),e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadfilename:"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e,"Failedtoreadlfh:"+lfh,e);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).initSource();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).initSourceName(e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).initSourceLine();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_Failedtoreadlfh:"+lfh);returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextArchiveEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+".js");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"bytesof");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"fromfilename:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"bytesreadfromstream");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"fromfilename:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_FAILtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_Failedtoreadlfh:n"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("SurposeFailedtoreadlfh:"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JZipFailedtoreadlfh:"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(!hasEFS){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=current.readFully();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=current.getInputStream(),bytesReadFromStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("SurposeFailedtoreadlfh:"+lfh);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getNextZipEntry(e.getSource());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextInflater(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=current.readFully(lfh,fileNameLen);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=current.readFully(lfh,index);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh);returnnewInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_Failedtoreadlfh:"+lfh);returnnewInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen="-"+lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen="/"+lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:n"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:",e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+fileName.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+e.getMessage());returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:n"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+inf+"bytesreadFromStream:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+inf+"bytesreadFromStream:"+bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+e.getMessage(),e);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh);return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("JSC_Failedtoreadlfh:"+lfh);return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeerror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadresource:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.getPurposeFlag();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_URL);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_SourceName);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipExtraFields:null"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source.getLineNumber());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source.getClass());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source.getLineno());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("CurposeFailedtoreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Cannotreadlfh:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);source;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh);returnsource;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_FONT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119FilefileNameLen-=lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:"+in.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadsource:",e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+inf.getLineNumber());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+zipEncoding.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+e.getSourceName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+in.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=current.getInputStream(in);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+Inflater.toHexString(inf));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+inf).printStackTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+source.getLength());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:"+zipEncoding.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:"+inf.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextrafields:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e,"CurposeFailedtoreadlfh:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"fromthesource:");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh+"bytesReadFromStream:");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unsupportedsource:"+e.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+lfh+"fromthesource:");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:'"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:'"+inf.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=this.current.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println(e.getMessage(),"Unexpectederror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||e.getCause()==null){thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=e.getCause();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){throwe.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+zipEncoding.getMessage(),e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getMessage()!=null){e.printStackTrace();}else{thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119||e.getCause()!=null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace();}else{thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=this.lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh).return;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returninf;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);returninflater;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesOfLastRead().length;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextDirectory();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_THRESHOLD,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_THRESHOLD+"error:");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_THRESHOLD+"expected:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfh=current.readFully(Locale.US);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen+=lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeextraFields:"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+e.toString(),e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:n"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+inf);returnnewInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getNextZipEntryInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Unexpectederror:"+inf.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+inf.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextensionfield:"+fileNameLen+".getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.getFileName();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Currenterror:"+zipEncoding.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readBytesLen();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getInflater(e.getSource());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinflater=getInflater(inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCrc()!=null){e.printStackTrace();}else{thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCurrentSegment()!=null){e.printStackTrace();}else{thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getMessage()!=null){e.printStackTrace();}else{thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+fileName);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlengthOfLastRead=readFully(lfh,out);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextInflater(source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e,"UnicodeExtraFields:"+lfh,e);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=lfh.trim().length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119intlfhLen=current.readFully(lfh,out);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+len).printStackTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Cannotreadlfh:"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Cannotreadlfh:"+LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){e.printStackTrace();}else{thrownewEOFException("",e);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"error:");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"wasexpectingclosingfilename:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"Impossiblesource:");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"wasexpectingclosingfilename.");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"Impossiblesource:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:missing"+inf.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:missing"+zipEncoding.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage()+"vserror:"+e.getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen-=lfh.length()-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("UnicodeExtraFields:"+lfh.getLength());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Error.println("Failedtoreadlfh:"+inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen=(lfh==null)?null:lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119fileNameLen="0"+lfh.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+inf.getClass());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectederror:"+inf.getLocalFileName());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace(inflater);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unexpectedsourceerror:"+e.getMessage());returnin;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),e);returnthis;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeextrafields:"+lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),e));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh.getClass());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCrc()!=null){e.printStackTrace();}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getMessage()!=null){e.printStackTrace();}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119e.printStackTrace();}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCrc()!=null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCurrentSegment()!=null){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getMessage()!=null){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCurrentSegment()==null){e.printStackTrace();}else{thrownewEOFException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCurrentSegment()!=null){e.printStackTrace();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextInputFileEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119Inflaterinf=getNextOutputFileEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("ZipExtraFields:"+zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_JSDOC_ERROR);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println(e.getMessage(),EOF_SYNTHETIC);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Failedtoreadlfh:"+lfh);thrownewIllegalStateException("");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("CurposeFailedtoreadlfh:"+inf).printStackTrace();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119System.err.println("Unicodeoutputline:"+fileName+".getMessage());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java119if(e.getCause()!=null){closeEntry();}
