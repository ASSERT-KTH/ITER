bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
2	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  2),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  2),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  2),  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
3	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  LFH_LEN);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
4	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  &&  entryEncoding.equals(entryEncoding));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  &&  entryEncoding.equals(entryEncoding));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  &&  entryEncoding.equals(entryEncoding));	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
5	[BUG]  [BUGGY]  final  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
6	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(!hasEFS)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(!hasEFS)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
7	[BUG]  [BUGGY]  long  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
8	[BUG]  [BUGGY]  if(current!=  null)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(current!=  null)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
9	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
10	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off  +  1));	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
11	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
12	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  entryEncoding));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  entryEncoding));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  entryEncoding));	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
13	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
14	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  0));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  0));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  0));	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
15	[BUG]  [BUGGY]  final  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));	  int    lfh    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
16	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(!hasEFS)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(!hasEFS)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfh    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
17	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfh    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
18	[BUG]  [BUGGY]  long  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));	  int    lfh    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
19	[BUG]  [BUGGY]  if(current!=  null)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(current!=  null)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfh    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
20	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off  +  1));	  int    lfh    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
21	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)-    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
22	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)-    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
23	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)*  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)*  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)*  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)-    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
24	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)-    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
25	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD);	  current.setMethod(ZipShort.getValue(lfh,    off)-    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
26	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  null)  {  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding!=  null)  {  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfhLen    =    entryEncoding.getLength();    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
27	[BUG]  [BUGGY]  final  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));	  int    lfhLen    =    entryEncoding.getLength();    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
28	[BUG]  [BUGGY]  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off  +  1));	  int    lfhLen    =    entryEncoding.getLength();    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
29	[BUG]  [BUGGY]  if(entryEncoding.getLength()  >  0)  {  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding.getLength()  >  0)  {  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding.getLength()  >  0)  {  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfhLen    =    entryEncoding.getLength();    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
30	[BUG]  [BUGGY]  long  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));	  int    lfhLen    =    entryEncoding.getLength();    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
31	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
32	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
33	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
34	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
35	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
36	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  EntryEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  EntryEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  EntryEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
37	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
38	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
39	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  GZIPEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  GZIPEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  GZIPEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
40	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
41	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
42	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
43	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
44	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  LFH_LEN);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
45	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  zipEncoding,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  zipEncoding,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  zipEncoding,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)+    WORD,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
46	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    WORD,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
47	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  hasEFS,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  hasEFS,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  hasEFS,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)+    WORD,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
48	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipEncodingUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipEncodingUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipEncodingUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)+    WORD,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
49	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)*  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)*  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)*  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)+    WORD,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
50	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2);	  current.setMethod(ZipShort.getValue(lfh,    off)+    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
51	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN  +  1);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
52	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  LFH_LEN);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
53	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORIZONTAL);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORIZONTAL);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  HORIZONTAL);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
54	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    <    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
55	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    <    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
56	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >=  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >=  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >=  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    <    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
57	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    <    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
58	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
59	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
60	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  2,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  2,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  2,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
61	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  1,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  1,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  1,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
62	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZIPEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
63	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  WORD);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZIPEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
64	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZIPEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
65	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  3);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  3);	  current.setMethod(ZipShort.getValue(lfh,    off)/    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
66	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0);	  current.setMethod(ZipShort.getValue(lfh,    off)/    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
67	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  4);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  4);	  current.setMethod(ZipShort.getValue(lfh,    off)/    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
68	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)/  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)/  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1)/  1);	  current.setMethod(ZipShort.getValue(lfh,    off)/    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
69	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  10);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  10);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  10);	  current.setMethod(ZipShort.getValue(lfh,    off)/    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
70	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
71	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  entryEncoding  :  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  entryEncoding  :  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  entryEncoding  :  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
72	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  2,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  2,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  2,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
73	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  entryEncoding,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  entryEncoding,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  entryEncoding,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
74	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  entryEncoding  :  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  entryEncoding  :  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  entryEncoding  :  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
75	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  1,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  1,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  1,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
76	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipLong.getValue(lfh,  off  +  1));	  current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
77	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off),  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipLong.getValue(lfh,  off),  entryEncoding);	  current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
78	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipLong.getValue(lfh,  off),  hasEFS);	  current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
79	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off)+  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipLong.getValue(lfh,  off)+  1);	  current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
80	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off  +  2));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off  +  2));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipLong.getValue(lfh,  off  +  2));	  current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
81	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
82	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
83	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  WORD);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
84	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off)+  1;	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
85	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  4);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  4);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
86	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
87	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  LFH_LEN,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  LFH_LEN,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  LFH_LEN,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
88	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN,  hasEFS,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN,  hasEFS,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN,  hasEFS,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
89	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
90	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  SHORT,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  SHORT,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  SHORT,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
91	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  LFH_LEN);	  current.setMethod(ZipShort.getValue(lfh,    off)&    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
92	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)&    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
93	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)&    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
94	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  hasEFS,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  hasEFS,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  hasEFS,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)&    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
95	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  WORD);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
96	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  2);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  2);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
97	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  LFH_LEN);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
98	[BUG]  [BUGGY]  if(entryEncoding)  {  current.setMethod(ZipShort.getValue(lfh,  off  -  1));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding)  {  current.setMethod(ZipShort.getValue(lfh,  off  -  1));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding)  {  current.setMethod(ZipShort.getValue(lfh,  off  -  1));  }	  current.setMethod(ZipShort.getValue(lfh,    off    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
99	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
100	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
101	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
102	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
103	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
104	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  1,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  1,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  1,  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
105	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off  +  1),  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
106	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  2,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  2,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)/  2,  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
107	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)&  EFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)&  EFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)&  EFS);	  current.setMethod(ZipLong.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
108	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
109	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
110	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
111	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  0));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  0));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  0));	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
112	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  3));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off  +  3));	  current.setCrc(ZipShort.getValue(lfh,    off    +    2));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
113	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1),  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1),  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off  +  1),  zipEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off),    zipEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
114	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  1,  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  1,  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  1,  zipEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off),    zipEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
115	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  2,  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  2,  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)/  2,  zipEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off),    zipEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
116	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
117	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
118	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
119	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
120	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)|    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
121	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  LFH_LEN);	  current.setMethod(ZipShort.getValue(lfh,    off)|    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
122	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  generalPurposeFlag);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  generalPurposeFlag);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  generalPurposeFlag);	  current.setMethod(ZipShort.getValue(lfh,    off)|    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
123	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  hasEFS  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  hasEFS  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  hasEFS  +  1);	  current.setMethod(ZipShort.getValue(lfh,    off)|    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
124	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  1,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  1,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  1,  entryEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
125	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1),  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off  +  1),  entryEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
126	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  2,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  2,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)/  2,  entryEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
127	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  1,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  1,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)-  1,  entryEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
128	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  entryEncoding  :  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  entryEncoding  :  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  entryEncoding  :  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
129	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
130	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  entryEncoding,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  entryEncoding,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  entryEncoding,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
131	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  entryEncoding  :  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  entryEncoding  :  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  entryEncoding  :  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
132	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  4,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  4,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  4,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
133	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  HORD  +  1);	  current.setMethod(ZipShort.getValue(lfh,    off)+    HORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
134	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  HORD,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    HORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
135	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  HORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  HORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  HORD);	  current.setMethod(ZipShort.getValue(lfh,    off)+    HORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
136	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD  -  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  HORD  -  1);	  current.setMethod(ZipShort.getValue(lfh,    off)+    HORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
137	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
138	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
139	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
140	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
141	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)+  1;	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
142	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
143	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
144	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
145	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)-  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
146	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
147	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
148	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  EntryEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  EntryEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  EntryEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
149	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
150	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
151	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
152	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  LFH_LEN);	  current.setMethod(ZipShort.getValue(lfh,    off)-    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
153	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)-    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
154	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1);	  current.setMethod(ZipShort.getValue(lfh,    off)-    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
155	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)*  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)*  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)*  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)-    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
156	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    0)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
157	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    0)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
158	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    0)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
159	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    0)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
160	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    0)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
161	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setCrc(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
162	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setCrc(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
163	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setCrc(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
164	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setCrc(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
165	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  current.setMethod(ZipLong.getValue(lfh,  entryEncoding));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  null)  {  current.setMethod(ZipLong.getValue(lfh,  entryEncoding));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding!=  null)  {  current.setMethod(ZipLong.getValue(lfh,  entryEncoding));  }	  current.setMethod(ZipLong.getValue(lfh,    entryEncoding));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
166	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  null)  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding!=  null)  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  current.setMethod(ZipLong.getValue(lfh,    entryEncoding));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
167	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  ZipEncoding  entryEncoding  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  ZipEncoding  entryEncoding  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setMethod(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    entryEncoding));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
168	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)|    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
169	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  FileEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  FileEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  FileEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)|    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
170	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)|    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
171	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
172	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS  +  1);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
173	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  LFH_LEN);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
174	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS  -  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS  -  1);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
175	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  SHORT);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  SHORT);	  current.setMethod(ZipShort.getValue(lfh,    off)+    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
176	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
177	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
178	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
179	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setLength(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
180	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
181	[BUG]  [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
182	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
183	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  1);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
184	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  2);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
185	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off)+  1;	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
186	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
187	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off)-  1;	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
188	[BUG]  [BUGGY]  if(entryEncoding)  {  current.setMethod(ZipLong.getValue(lfh,  off  +  1));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding)  {  current.setMethod(ZipLong.getValue(lfh,  off  +  1));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding)  {  current.setMethod(ZipLong.getValue(lfh,  off  +  1));  }	  current.setMethod(ZipLong.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
189	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  WORD);	  current.setMethod(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
190	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  LFH_LEN);	  current.setMethod(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
191	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  0);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  0);	  current.setMethod(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
192	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  2);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  2);	  current.setMethod(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
193	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)/  1);	  current.setMethod(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
194	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  HORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  HORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  HORD);	  current.setMethod(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
195	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)&    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
196	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)&    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
197	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)&    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
198	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2.0,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
199	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2.0,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
200	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2.0,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
201	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS  +  1);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2.0,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
202	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS  -  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS  -  1);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2.0,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
203	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS  /  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS  /  2);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS  /  2);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2.0,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
204	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
205	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  entryEncoding,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  entryEncoding,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  entryEncoding,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
206	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1,  hasEFS),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1,  hasEFS),  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1,  hasEFS),  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
207	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  2),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  2),  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  2),  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
208	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  entryEncoding  :  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  entryEncoding  :  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  entryEncoding  :  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
209	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  0);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  0);	  current.setMethod(ZipShort.getValue(lfh,    off)+    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
210	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  EFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  EFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  EFS);	  current.setMethod(ZipShort.getValue(lfh,    off)&    EFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
211	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  WORD);	  current.setMethod(ZipShort.getValue(lfh,    off)&    EFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
212	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  EFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  EFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  EFS);	  current.setMethod(ZipShort.getValue(lfh,    off)&    EFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
213	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  DESC);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  DESC);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  DESC);	  current.setMethod(ZipShort.getValue(lfh,    off)&    EFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
214	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)));	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
215	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
216	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  2),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  2),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  2),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
217	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  1),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  1),  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off  +  1),  entryEncoding);	  current.setCrc(ZipShort.getValue(lfh,    off),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
218	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  1,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  1,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  1,  entryEncoding);	  current.setCrc(ZipShort.getValue(lfh,    off),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
219	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)/  2,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)/  2,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)/  2,  entryEncoding);	  current.setCrc(ZipShort.getValue(lfh,    off),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
220	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)-  1,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)-  1,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)-  1,  entryEncoding);	  current.setCrc(ZipShort.getValue(lfh,    off),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
221	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  1,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  1,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  1,  hasEFS);	  current.setCrc(ZipShort.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
222	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  1),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  1),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off  +  1),  hasEFS);	  current.setCrc(ZipShort.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
223	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  LFH_LEN,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  LFH_LEN,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  LFH_LEN,  hasEFS);	  current.setCrc(ZipShort.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
224	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  WORD  +  1);	  current.setMethod(ZipShort.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
225	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  +  1);	  int    lengthOfLastRead    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
226	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  -  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  -  1);	  int    lengthOfLastRead    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
227	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  +  2);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  +  2);	  int    lengthOfLastRead    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
228	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off)+  1;  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off)+  1;	  int    lengthOfLastRead    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
229	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  +  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off  +  WORD);	  int    lengthOfLastRead    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
230	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipLong.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lengthOfLastRead  =  ZipLong.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lengthOfLastRead  =  ZipLong.getValue(lfh,  off);	  int    lengthOfLastRead    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
231	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
232	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
233	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setTime(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setTime(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setTime(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
234	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
235	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
236	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead  -  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
237	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off  -  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipLong.getValue(lfh,  off  -  1));	  current.setCrc(ZipShort.getValue(lfh,    off    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
238	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
239	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
240	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  2),  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  2),  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  2),  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
241	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
242	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
243	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
244	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
245	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
246	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lf  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lf	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
247	[BUG]  [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(entryEncoding)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
248	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  entryEncoding));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  entryEncoding));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  entryEncoding));	  current.setMethod(ZipShort.getValue(lfh,    off),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    entryEncoding));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
249	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  current.setMethod(ZipShort.getValue(lfh,    off),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    entryEncoding));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
250	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
251	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasEFS);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
252	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
253	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
254	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  LFH_LEN);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
255	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  entryEncoding,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  entryEncoding,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  entryEncoding,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
256	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  entryEncoding  :  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  entryEncoding  :  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  entryEncoding  :  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
257	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
258	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
259	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
260	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
261	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
262	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
263	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  entryEncoding,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  entryEncoding,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  entryEncoding,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
264	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  zipEncoding,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  zipEncoding,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  zipEncoding,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
265	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  WORD);	  current.setCrc(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
266	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)/  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)/  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)/  1);	  current.setCrc(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
267	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  0);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  0);	  current.setCrc(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
268	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  LFH_LEN);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  LFH_LEN);	  current.setCrc(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
269	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  SHORT);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  SHORT);	  current.setCrc(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
270	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  2);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  2);	  current.setCrc(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
271	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  LFH_LEN,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  LFH_LEN,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  LFH_LEN,  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
272	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  2.0,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  2.0,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)/  2.0,  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
273	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  8));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  8));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  8));	  current.setMethod(ZipShort.getValue(lfh,    off    +    3));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
274	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  5));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  5));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  5));	  current.setMethod(ZipShort.getValue(lfh,    off    +    3));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
275	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  entryEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off),    zipEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
276	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  1,  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  1,  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)-  1,  zipEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off),    zipEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
277	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
278	[BUG]  [BUGGY]  long  length  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  length  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  length  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
279	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
280	[BUG]  [BUGGY]  if(hasEFS)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(hasEFS)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(hasEFS)  {  int  lfh  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfh    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
281	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  4));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  4));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  4));	  current.setMethod(ZipShort.getValue(lfh,    off    +    2));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
282	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off),  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off),  true);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipLong.getValue(lfh,  off),  true);	  current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
283	[BUG]  [BUGGY]  current.setMethod(ZipUtil.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipUtil.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipUtil.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
284	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(!hasEFS)  {  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(!hasEFS)  {  int  lfhLen  =  entryEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfhLen    =    entryEncoding.getLength();    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
285	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  3);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  3);	  current.setMethod(ZipShort.getValue(lfh,    off)+    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
286	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
287	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  SHORT);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  SHORT);	  current.setMethod(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
288	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
289	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
290	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
291	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  8));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  8));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off  +  8));	  current.setCrc(ZipShort.getValue(lfh,    off    +    2));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
292	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  5));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  5));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off  +  5));	  current.setCrc(ZipShort.getValue(lfh,    off    +    2));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
293	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  4));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  4));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off  +  4));	  current.setCrc(ZipShort.getValue(lfh,    off    +    2));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
294	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
295	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setCrc(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
296	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setCrc(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
297	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    0)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
298	[BUG]  [BUGGY]  long  length  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  length  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  length  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    0)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
299	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >=  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >=  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >=  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    0)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
300	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)&  EFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)&  EFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)&  EFS);	  current.setCrc(ZipShort.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
301	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  EFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  EFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  EFS);	  current.setCrc(ZipShort.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
302	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS);	  current.setCrc(ZipShort.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
303	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)-  EFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)-  EFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)-  EFS);	  current.setCrc(ZipShort.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
304	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  1)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off  +  1)+  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off  +  1)+  1);	  current.setCrc(ZipShort.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
305	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1);	  current.setMethod(ZipShort.getValue(lfh,    off)|    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
306	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  entryEncoding);	  current.setCrc(ZipShort.getValue(lfh,    off),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
307	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD  +  1;  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  HORD  +  1;	  current.setMethod(ZipShort.getValue(lfh,    off)+    HORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
308	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
309	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS  -  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS  -  1);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
310	[BUG]  [BUGGY]  current.setEntryEncoding(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setEntryEncoding(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setEntryEncoding(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    entryEncoding));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
311	[BUG]  [BUGGY]  current.setDescriptor(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setDescriptor(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setDescriptor(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    entryEncoding));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
312	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
313	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HASH_LEN,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HASH_LEN,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  HASH_LEN,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
314	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
315	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
316	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
317	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  3);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  3);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
318	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
319	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  3,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  3,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  3,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
320	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
321	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
322	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  >  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    <    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
323	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  entryEncoding  :  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  entryEncoding  :  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS?  entryEncoding  :  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
324	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS?  entryEncoding  :  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS?  entryEncoding  :  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS?  entryEncoding  :  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
325	[BUG]  [BUGGY]  if(hasEFS)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(hasEFS)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(hasEFS)  {  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  }	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
326	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
327	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  -  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  -  1);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
328	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
329	[BUG]  [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
330	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLengthOfLastRead(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLengthOfLastRead(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLengthOfLastRead(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
331	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
332	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  hasEFS  &&  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  hasEFS  &&  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  hasEFS  &&  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)|    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
333	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  inputStream  :  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  inputStream  :  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  inputStream  :  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
334	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  4,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  4,  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  4,  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
335	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasdataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasdataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasdataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2.0,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
336	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasDATADescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasDATADescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasDATADescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2.0,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
337	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN  +  1;  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  LFH_LEN  +  1;	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
338	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
339	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  entryEncoding,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  entryEncoding,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  entryEncoding,  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
340	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  FileEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  FileEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  FileEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)&    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
341	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)-    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
342	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);	  current.setMethod(ZipShort.getValue(lfh,    off)-    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
343	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
344	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  FileEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  FileEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  FileEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
345	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
346	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)-    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
347	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  2);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  2);	  current.setMethod(ZipShort.getValue(lfh,    off)-    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
348	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)+    WORD,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
349	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  2));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  2));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off  +  2));	  current.setMethod(ZipLong.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
350	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  3));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off  +  3));	  current.setMethod(ZipLong.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
351	[BUG]  [BUGGY]  long  lfh  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lfh  =  ZipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lfh  =  ZipShort.getValue(lfh,  off);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
352	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HARD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HARD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  HARD);	  current.setMethod(ZipShort.getValue(lfh,    off)+    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
353	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  SHORT);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  SHORT);	  current.setMethod(ZipShort.getValue(lfh,    off)&    EFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
354	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)%  EFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)%  EFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)%  EFS);	  current.setMethod(ZipShort.getValue(lfh,    off)&    EFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
355	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  0);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  0);	  current.setMethod(ZipShort.getValue(lfh,    off)&    EFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
356	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1000);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1000);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1000);	  current.setMethod(ZipShort.getValue(lfh,    off)+    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
357	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
358	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
359	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
360	[BUG]  [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	Inflater  inf  =  ZipShort.getValue(lfh,  off);  current.setCrc(ZipLong.getValue(lfh,  off));	  int    lfh    =    ZipShort.getValue(lfh,    off);    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
361	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  WORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  current.setMethod(ZipShort.getValue(lfh,    off)+    WORD,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
362	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  HORD,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)+    WORD,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
363	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
364	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasEFS,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
365	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasdataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasdataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  hasdataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
366	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  Off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  Off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  Off));	  current.setCrc(ZipShort.getValue(lfh,    off    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
367	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  HORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  HORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  HORD);	  current.setMethod(ZipShort.getValue(lfh,    off)-    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
368	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)-    1,    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
369	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)&  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)&  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)&  hasEFS);	  current.setCrc(ZipShort.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
370	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)-  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)-  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)-  hasEFS);	  current.setCrc(ZipShort.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
371	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  Off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  Off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  Off));	  current.setMethod(ZipShort.getValue(lfh,    off    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
372	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  entryEncoding));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  entryEncoding));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  entryEncoding));	  current.setMethod(ZipShort.getValue(lfh,    off),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    entryEncoding));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
373	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
374	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
375	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  entryEncoding  :  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  entryEncoding  :  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS?  entryEncoding  :  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
376	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
377	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS  &&  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS  &&  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS  &&  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
378	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  entryEncoding  :  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  entryEncoding  :  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  entryEncoding  :  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
379	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  entryEncoding  :  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  entryEncoding  :  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  entryEncoding  :  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
380	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  entryEncoding  :  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  entryEncoding  :  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  hasEFS?  entryEncoding  :  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
381	[BUG]  [BUGGY]  if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
382	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
383	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  &&  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  &&  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  &&  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
384	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  ||  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  ||  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS  ||  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
385	[BUG]  [BUGGY]  short  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  short  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	short  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
386	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD_LEN,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HORD_LEN,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  HORD_LEN,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
387	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HARD,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  HARD,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  HARD,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off)+    LFH_LEN,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
388	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
389	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
390	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1);	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
391	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2.0,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
392	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2.0,  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2.0,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
393	[BUG]  [BUGGY]  long  length  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  length  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  length  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    <    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
394	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  <  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    <    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
395	[BUG]  [BUGGY]  if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setTime(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
396	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLong(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLong(lengthOfLastRead);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLong(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setTime(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
397	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
398	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  hasEFS  &&  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)|  hasEFS  &&  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)|  hasEFS  &&  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)|    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
399	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
400	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  1,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
401	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    0)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
402	[BUG]  [BUGGY]  long  length  =  ZipShort.getValue(lfh,  off);  if(length  >  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  length  =  ZipShort.getValue(lfh,  off);  if(length  >  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  length  =  ZipShort.getValue(lfh,  off);  if(length  >  0)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    0)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
403	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  HORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)+  HORD);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)+  HORD);	  current.setCrc(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
404	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)&  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)&  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)&  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
405	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)+  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)+  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
406	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)-  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)-  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off),    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
407	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  if(lengthOfLastRead  ==  SHORT)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    if(lengthOfLastRead    ==    SHORT)    {    current.setCrc(ZipLong.getValue(lfh,    off));    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
408	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off)-  1;  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lengthOfLastRead  =  ZipLong.getValue(lfh,  off)-  1;	  int    lengthOfLastRead    =    ZipLong.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
409	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  current.setMethod(ZipShort.getValue(lfh,    off)-    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
410	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)-  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT);	  current.setMethod(ZipShort.getValue(lfh,    off)-    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
411	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  2,  ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
412	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)/  WORD,  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)/    2,    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
413	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1);	  current.setMethod(ZipShort.getValue(lfh,    off)&    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
414	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipLong.getValue(lfh,  off),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
415	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipLong.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
416	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
417	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)|  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
418	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
419	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipLong.getValue(lfh,  off),  ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
420	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)*  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)*  ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)*  ZipEncodingHelper.UTF8_ZIP_ENCODING);	  current.setMethod(ZipShort.getValue(lfh,    off)+    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
421	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS,  hasDataDescriptor);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  1,  hasEFS,  hasDataDescriptor);	  current.setMethod(ZipShort.getValue(lfh,    off)+    1,    hasEFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
422	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1),  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);	  current.setMethod(ZipShort.getValue(lfh,    off    +    1),    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
423	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setCrc(ZipShort.getValue(lfh,  off)/  ZIPEncodingHelper.UTF8_ZIP_ENCODING);	  current.setCrc(ZipShort.getValue(lfh,    off),    ZipEncodingHelper.UTF8_ZIP_ENCODING);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
424	[BUG]  [BUGGY]  short  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  short  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	short  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
425	[BUG]  [BUGGY]  byte  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  byte  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	byte  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
426	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  EFS_FLAG);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)&  EFS_FLAG);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)&  EFS_FLAG);	  current.setMethod(ZipShort.getValue(lfh,    off)&    EFS);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
427	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off)-  1;	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
428	[BUG]  [BUGGY]  long  lfhLen  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  long  lfhLen  =  ZipShort.getValue(lfh,  off);  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	long  lfhLen  =  ZipShort.getValue(lfh,  off);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
429	[BUG]  [BUGGY]  int  lfhLen  =  zipEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;      [BUGGY]  int  lfhLen  =  zipEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]      off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	146	146	1	replace	int  lfhLen  =  zipEncoding.getLength();  current.setCrc(ZipLong.getValue(lfh,  off));	  int    lfhLen    =    entryEncoding.getLength();    current.setCrc(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
