projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=null){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==null){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=TIME_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off)
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS&&current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset-=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=SHORT+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==null){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=null){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=null){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==null){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=null){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==hasEFS&&current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=TIME_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=TIME_LEN-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setSize(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off)
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=WORD-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LONG;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_FIRST;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offsets.getLength(lfh)+SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=null){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==null){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=FH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LEN-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT/1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN*SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(current!=null){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=HORIZONTAL;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=LAST_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setSize(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=H-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LONG;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setFileName(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Off<SHORT||hasEFS?current.setMethod(ZipShort.getValue(lfh,off)):entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=null){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(hasEFS&&entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS&&zipEncoding.equals(entryEncoding)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,hasEFS)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,hasEFS)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS&&zipEncoding.equals(entryEncoding)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS&&zipEncoding.equals(entryEncoding)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS&&zipEncoding.equals(entryEncoding)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS&&zipEncoding.equals(entryEncoding)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&zipEncoding.equals(entryEncoding)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=LH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LONG-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_QUOTE;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=BYTE_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=BYTE_SIZE;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=LAST_LONG;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=LAST_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||isEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,hasEFS)){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,zipEncoding)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=WORD/1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN/1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT/WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD/1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=null){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==null){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=WORD*SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT*LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN*WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=WORD*LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LH_LEN*SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN*SHORT+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipLong.getValu
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LH_LEN-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=TIME_LEN/1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=WORD-SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT-entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=null){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==null){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipLong.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offsets.getLength(off)+SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offsets.getLength(lfh)/SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offsets.getLength(lfh)+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offsets.intLength(lfh)+SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding){if(!hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||!hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding){if(!hasEFS){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=WORD+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LEN+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LH_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&hasEFS){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=WORD;}else{current.setMethod(ZipLong.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset+=LAST;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset+=SHORT-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalintlengthOfLastRead=ZipShort.getValue(lfh,off);current.setFileName(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setFileName(lengthOfLastRead+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off+1);current.setFileName(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147longlengthOfLastRead=ZipShort.getValue(lfh,off);current.setFileName(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Off<SHORT&&hasEFS?current.setMethod(ZipShort.getValue(lfh,off)):entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Off<SHORT||hasEFS?current.setCrc(ZipShort.getValue(lfh,off)):entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=HORIZONTAL+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=HORIZONTAL||hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORIZONTAL;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipLong.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipShort.getValue(lfh,off),hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipShort.getValue(lfh,off+2));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setCrc(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147inttime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setSize(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setLength(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setDelimiter(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=WORD-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT/2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=LAST;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN+SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,hasEFS)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipShort.getValu
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=H/1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=H-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=H-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=null){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==null){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset<SHORT||entryEncoding!=null){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset<SHORT||entryEncoding!=null;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==null){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LEN/1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LEN-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LEN-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=FH_LEN-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=FH_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==hasEFS&&current.setCrc(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&current.setCrc(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS&&current.setCrc(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==hasEFS&&current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=null){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=null){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=null){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=WORD+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=SHORT+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=SHORT+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==hasEFS){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=false){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding){if(current!=null){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(current!=null){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset-=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset-=HORIZONTAL;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset-=SHORT+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset-=1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setSize(ZipLong.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setSize(ZipLong.getValue(lfh,off),hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setLength(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setDelimiter(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS){off+=SHORT;}else{current.setCrc(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LH_LEN||hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipLong.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipLong.getValue(lfh,off),hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setCrc(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipLong.getValue(lfh,off),entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:generalPurposeFlag;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileNameLen;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:currentEntryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LHORT+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalintlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147longlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off+1);current.setLength(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(current!=null){intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=hasEFS?LFH_LEN:LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=WORD=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=hasEFS?LFH_LEN:LFH_LONG;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=hasEFS?LFH_LEN:LFH_FOR;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT-LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=hasEFS?LFH_LEN:LFH_FIRST;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS&&current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS&&current.setMethod(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=null){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=null){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==null){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipLong.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipLong.getValue(lfh,off),hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipLong.getValue(lfh,off+2));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipLong.getValue(lfh,off-1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset<WORD||entryEncoding!=hasEFS){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding==null){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipShort.getValue(lfh,off),hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipShort.getValue(lfh,off+2));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipShort.getValue(lfh,off-1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=H-1L;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=H-4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=H-3;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==hasEFS){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=isEFS){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS&&entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS&&entryEncoding!=ZipEncodingHelper.UTF8){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS&&entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(current!=null){if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LEN+SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT-8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT-4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=NON_SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=NUMBER;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipLong.getValue(lfh,off+SHORT));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipLong.getValue(lfh,off)+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(current!=null){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(current!=null){if(!hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:hasDataDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:userEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:newZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=NUMBER_FIRST;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(current!=null){intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setFileName(lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS){intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setFileName(lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Off<SHORT||hasEFS?current.setZipEncoding(ZipShort.getValue(lfh,off)):entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT/8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LHORT-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=null&&zipEncoding.equals(entryEncoding)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS&&entryEncoding.equals(current)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS&&zipEncoding.equals(current)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS&&entryEncoding.equals(current)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding!=hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS){if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=WORD;}else{current.setMethod(ZipLong.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD+3;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD+4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipShort.getValue(lfh,off+SHORT));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipShort.getValue(lfh,off)+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Off-=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipLong.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147inttime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD-1L;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD-4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=HORD-3;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LFH_LEN*2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offsets.getLength(lfh)+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offsets.getLength(current)+SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offsets.getLength(lfh)+LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LH_LEN-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=LFH_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=hasEFS?LFH_LEN:inf;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=hasEFS?inf:LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=hasEFS?LFH_LEN:hasDataDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=LFH_LONG;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off-SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147longlengthOfLastRead=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147while(!hasEFS){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipUtil.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||current!=hasEFS&&current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=TIME_LEN+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset-=LAST_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=SHORT+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=SHORT+4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=HORIZONTAL+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=HORIZONTAL+4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=HORIZONTAL+3;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setSize(ZipShort.getValue(lfh,off+SHORT));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setSize(ZipLong.getValue(lfh,off+SHORT));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LITERAL;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(current!=null){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=BYTE_LONG;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=BYTE_SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LEN*1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipShort.getValue(lfh,off+SHORT));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipShort.getValue(lfh,off)+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147while(!hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(hasEFS&&entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=HORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&hasEFS){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING&&hasEFS){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&hasEFS){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=hasEFS-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset+=HORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(hasEFS){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==ZipEncodingHelper.UTF8){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset<ZipEncoding>off=entryEncoding.offsetToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset<ZipEncoding>off=entryEncoding.offsetToJavaTime(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==ZipEncodingHelper.UTF8){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS&&entryEncoding.equals(zipEncoding)){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS&&entryEncoding.equals(zipEncoding)){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setDescriptor(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&current.setMethod(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&current.setEntryEncoding(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(!hasEFS){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=hasEFS?LFH_LEN:inf.getLongValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=hasEFS?LFH_LEN:hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=SHORT=hasEFS?LFH_LEN:inf.readInt();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==ZipEncodingHelper.UTF8){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=SHORT||hasEFS;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=SHORT,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LEN-SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipShort.getValue(lfh,off)+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING&&hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&hasEFS){off+=WORD;}else{current.setMethod(ZipShort.getValue(lfh
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==ZipEncodingHelper.UTF8){off+=WORD;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LONG-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS&&current.getMethod()==ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS&&ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding!=hasEFS&&zipEncoding.equals(entryEncoding)){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(entryEncoding==hasEFS){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=BYTE_LONG;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off-=LAST_FIRST;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setFileName(ZipLong.getValue(lfh,off)+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147finalZipEncodingentryEncoding=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:this.zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setDescriptor(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Off<SHORT?current.setMethod(ZipShort.getValue(lfh,off)):entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Off<SHORT||current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&zipEncoding.equals(ZipEncodingHelper.UTF8)){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding.equals(ZipEncodingHelper.UTF8)){off+=SHORT;}else{current.setMethod(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS&&entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147if(hasEFS||hasDataDescriptor){off+=SHORT;}else{current.setMethod(ZipShort.getValue(lfh,off));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=LAST_LIN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=WORD/2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147current.setMethod(ZipLong.getValue(lfh,off+SHORT));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offsets.getLength(lfh)*SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147||hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding.equals(ZipLong.getValue(lfh,off))){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset-=HORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147Offset-=LAST;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147off+=TIME_LEN-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java147intlengthOfLastRead=ZipShort.getValue(lfh,off)-1;
