bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
2	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
3	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
4	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
5	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
6	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
7	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off)  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off)  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off)	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
8	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
9	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
10	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipShort.getValue(lfh,  off));	  if(entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
11	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding!=  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));	  if(entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
12	[BUG]  [BUGGY]  if(entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
13	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS)  {  off  +=  WORD;  }	  if(entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
14	[BUG]  [BUGGY]  off  -=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  -=  WORD;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  WORD;	  off    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
15	[BUG]  [BUGGY]  Offset  -=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  Offset  -=  SHORT;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  -=  SHORT;	  off    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
16	[BUG]  [BUGGY]  off  -=  SHORT  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  -=  SHORT  +  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  SHORT  +  1;	  off    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
17	[BUG]  [BUGGY]  off  -=  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  -=  LFH_LEN;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  LFH_LEN;	  off    +=    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
18	[BUG]  [BUGGY]  off  +=  LH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LH_LEN;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LH_LEN;	  off    +=    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
19	[BUG]  [BUGGY]  off  +=  LFH_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LFH_LEN  +  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  +  1;	  off    +=    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
20	[BUG]  [BUGGY]  ||  entryEncoding  ==  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding  ==  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding    ==    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
21	[BUG]  [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding    ==    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
22	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding    ==    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
23	[BUG]  [BUGGY]  if(entryEncoding  ==  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding  ==  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding    ==    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
24	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding!=  null)  {  off  +=  WORD;  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  null)  {  off  +=  WORD;  }	  if(entryEncoding    ==    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
25	[BUG]  [BUGGY]  ||  entryEncoding  ==  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding  ==  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding    ==    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
26	[BUG]  [BUGGY]  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding    ==    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
27	[BUG]  [BUGGY]  ||  entryEncoding  ==  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding  ==  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));	  if(entryEncoding    ==    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
28	[BUG]  [BUGGY]  off  +=  TIME_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  TIME_LEN  +  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  TIME_LEN  +  1;	  off    +=    TIME_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
29	[BUG]  [BUGGY]  off  +=  TIME_LEN  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  TIME_LEN  -  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  TIME_LEN  -  1;	  off    +=    TIME_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
30	[BUG]  [BUGGY]  off  +=  HORD  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  HORD  -  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  -  1;	  off    +=    HORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
31	[BUG]  [BUGGY]  off  +=  HORD  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  HORD  +  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  +  1;	  off    +=    HORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
32	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipLong.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
33	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
34	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
35	[BUG]  [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off));  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setSize(ZipLong.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
36	[BUG]  [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off));  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipLong.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
37	[BUG]  [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off));  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipShort.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
38	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
39	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
40	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
41	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
42	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
43	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off)  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off)  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off)	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
44	[BUG]  [BUGGY]  off  +=  WORD  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  WORD  -  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  WORD  -  1;	  off    +=    SHORT    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
45	[BUG]  [BUGGY]  off  +=  LFH_LEN  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LFH_LEN  -  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  -  1;	  off    +=    SHORT    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
46	[BUG]  [BUGGY]  off  +=  SHORT  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  SHORT  -  WORD;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  -  WORD;	  off    +=    SHORT    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
47	[BUG]  [BUGGY]  off  +=  LAST_LONG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LAST_LONG;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LONG;	  off    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
48	[BUG]  [BUGGY]  off  +=  LAST_SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LAST_SHORT;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_SHORT;	  off    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
49	[BUG]  [BUGGY]  off  +=  LAST_FIRST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LAST_FIRST;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_FIRST;	  off    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
50	[BUG]  [BUGGY]  Offset  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  Offset  +=  SHORT;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  +=  SHORT;	  off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
51	[BUG]  [BUGGY]  Offsets.getLength(lfh)+  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  Offsets.getLength(lfh)+  SHORT;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offsets.getLength(lfh)+  SHORT;	  off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
52	[BUG]  [BUGGY]  off  +=  LHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LHORT;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LHORT;	  off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
53	[BUG]  [BUGGY]  off  +=  SHORT  =  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  SHORT  =  LFH_LEN;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  LFH_LEN;	  off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
54	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
55	[BUG]  [BUGGY]  if(entryEncoding  ==  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding  ==  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
56	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
57	[BUG]  [BUGGY]  off  +=  FH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  FH_LEN;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  FH_LEN;	  off    +=    TIME_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
58	[BUG]  [BUGGY]  off  +=  SHORT  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  SHORT  -  2;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  -  2;	  off    +=    SHORT    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
59	[BUG]  [BUGGY]  off  +=  LAST_LEN  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LAST_LEN  -  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LEN  -  1;	  off    +=    SHORT    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
60	[BUG]  [BUGGY]  off  +=  SHORT  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  SHORT  /  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  /  1;	  off    +=    SHORT    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
61	[BUG]  [BUGGY]  off  +=  LFH_LEN  *  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LFH_LEN  *  SHORT;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  *  SHORT;	  off    +=    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
62	[BUG]  [BUGGY]  if(current!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(current!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(current!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
63	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  if(entryEncoding    ==    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
64	[BUG]  [BUGGY]  off  -=  HORIZONTAL;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  -=  HORIZONTAL;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  HORIZONTAL;	  off    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
65	[BUG]  [BUGGY]  off  -=  LAST_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  -=  LAST_LEN;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  LAST_LEN;	  off    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
66	[BUG]  [BUGGY]  off  +=  LAST_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LAST_LEN  +  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LEN  +  1;	  off    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
67	[BUG]  [BUGGY]  current.setSize(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  current.setSize(ZipShort.getValue(lfh,  off));  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setSize(ZipShort.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
68	[BUG]  [BUGGY]  off  +=  H  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  H  -  1;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  H  -  1;	  off    +=    SHORT    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
69	[BUG]  [BUGGY]  off  +=  LONG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LONG;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LONG;	  off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
70	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
71	[BUG]  [BUGGY]  if(hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding    ==    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
72	[BUG]  [BUGGY]  if(hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding    ==    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
73	[BUG]  [BUGGY]  Off  <  SHORT  ||  hasEFS?  current.setMethod(ZipShort.getValue(lfh,  off))  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  Off  <  SHORT  ||  hasEFS?  current.setMethod(ZipShort.getValue(lfh,  off))  :  entryEncoding;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Off  <  SHORT  ||  hasEFS?  current.setMethod(ZipShort.getValue(lfh,  off))  :  entryEncoding;	  if(entryEncoding!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
74	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
75	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
76	[BUG]  [BUGGY]  off  -=  BYTE_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  -=  BYTE_LEN;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  BYTE_LEN;	  off    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
77	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding!=  null)  {  off  +=  SHORT;  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  null)  {  off  +=  SHORT;  }	  if(entryEncoding    ==    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
78	[BUG]  [BUGGY]  if(hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
79	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
80	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
81	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
82	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
83	[BUG]  [BUGGY]  off  +=  LAST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));    [BUGGY]  off  +=  LAST;  [BUGGY]      long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST;	  off    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
