bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
2	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
3	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lf	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
4	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
5	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
6	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
7	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
8	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
9	[BUG]  [BUGGY]  ||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
10	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
11	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
12	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
13	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
14	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
15	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
16	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
17	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
18	[BUG]  [BUGGY]  ||  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
19	[BUG]  [BUGGY]  off  -=  LH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  LH_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  LH_LEN;	  off    -=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
20	[BUG]  [BUGGY]  off  +=  LAST_LONG  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_LONG  -  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LONG  -  1;	  off    +=    LAST_LONG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
21	[BUG]  [BUGGY]  off  +=  LAST_QUOTE;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_QUOTE;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_QUOTE;	  off    +=    LAST_LONG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
22	[BUG]  [BUGGY]  off  -=  BYTE_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  BYTE_LEN  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  BYTE_LEN  +  1;	  off    -=    BYTE_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
23	[BUG]  [BUGGY]  off  -=  BYTE_SIZE;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  BYTE_SIZE;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  BYTE_SIZE;	  off    -=    BYTE_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
24	[BUG]  [BUGGY]  off  -=  LAST_LONG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  LAST_LONG;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  LAST_LONG;	  off    -=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
25	[BUG]  [BUGGY]  off  -=  LAST_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  LAST_LEN  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  LAST_LEN  +  1;	  off    -=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
26	[BUG]  [BUGGY]  ||  isEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  isEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  isEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lf    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
27	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  WORD;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lf    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
28	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  zipEncoding))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lf    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
29	[BUG]  [BUGGY]  off  +=  WORD  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  WORD  /  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  WORD  /  1;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
30	[BUG]  [BUGGY]  off  +=  LFH_LEN  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LFH_LEN  /  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  /  1;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
31	[BUG]  [BUGGY]  off  +=  SHORT  /  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  /  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  /  WORD;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
32	[BUG]  [BUGGY]  off  +=  HORD  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  /  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  /  1;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
33	[BUG]  [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
34	[BUG]  [BUGGY]  ||  entryEncoding  ==  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding  ==  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
35	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
36	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
37	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
38	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
39	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
40	[BUG]  [BUGGY]  off  +=  WORD  *  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  WORD  *  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  WORD  *  SHORT;	  off    +=    LFH_LEN    *    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
41	[BUG]  [BUGGY]  off  +=  SHORT  *  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  *  LFH_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  *  LFH_LEN;	  off    +=    LFH_LEN    *    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
42	[BUG]  [BUGGY]  off  +=  LFH_LEN  *  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LFH_LEN  *  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  *  WORD;	  off    +=    LFH_LEN    *    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
43	[BUG]  [BUGGY]  off  +=  WORD  *  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  WORD  *  LFH_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  WORD  *  LFH_LEN;	  off    +=    LFH_LEN    *    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
44	[BUG]  [BUGGY]  off  +=  LH_LEN  *  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LH_LEN  *  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LH_LEN  *  SHORT;	  off    +=    LFH_LEN    *    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
45	[BUG]  [BUGGY]  off  +=  LFH_LEN  *  SHORT  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LFH_LEN  *  SHORT  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  *  SHORT  +  1;	  off    +=    LFH_LEN    *    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
46	[BUG]  [BUGGY]  ||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
47	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValu  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValu  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValu	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
48	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
49	[BUG]  [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
50	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
51	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
52	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
53	[BUG]  [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
54	[BUG]  [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
55	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
56	[BUG]  [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
57	[BUG]  [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
58	[BUG]  [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
59	[BUG]  [BUGGY]  off  +=  LH_LEN  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LH_LEN  -  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LH_LEN  -  1;	  off    +=    TIME_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
60	[BUG]  [BUGGY]  off  +=  TIME_LEN  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  TIME_LEN  /  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  TIME_LEN  /  1;	  off    +=    TIME_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
61	[BUG]  [BUGGY]  off  +=  WORD  -  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  WORD  -  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  WORD  -  SHORT;	  off    +=    SHORT    -    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
62	[BUG]  [BUGGY]  off  +=  LFH_LEN  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LFH_LEN  -  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  -  WORD;	  off    +=    SHORT    -    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
63	[BUG]  [BUGGY]  off  +=  SHORT  -  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  -  entryEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  -  entryEncoding;	  off    +=    SHORT    -    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
64	[BUG]  [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  null)  {  off  +=  WORD;  }	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
65	[BUG]  [BUGGY]  if(entryEncoding  ==  null)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  null)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  null)  {  off  +=  SHORT;  }	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
66	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
67	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
68	[BUG]  [BUGGY]  Offsets.getLength(off)+  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offsets.getLength(off)+  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offsets.getLength(off)+  SHORT;	  Offsets.getLength(lfh)+    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
69	[BUG]  [BUGGY]  Offsets.getLength(lfh)/  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offsets.getLength(lfh)/  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offsets.getLength(lfh)/  SHORT;	  Offsets.getLength(lfh)+    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
70	[BUG]  [BUGGY]  Offsets.getLength(lfh)+  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offsets.getLength(lfh)+  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offsets.getLength(lfh)+  WORD;	  Offsets.getLength(lfh)+    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
71	[BUG]  [BUGGY]  Offsets.intLength(lfh)+  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offsets.intLength(lfh)+  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offsets.intLength(lfh)+  SHORT;	  Offsets.getLength(lfh)+    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
72	[BUG]  [BUGGY]  if(entryEncoding)  {  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding)  {  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding)  {  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(!hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
73	[BUG]  [BUGGY]  if(!hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(!hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
74	[BUG]  [BUGGY]  ||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(!hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
75	[BUG]  [BUGGY]  ||!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(!hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
76	[BUG]  [BUGGY]  if(entryEncoding)  {  if(!hasEFS)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding)  {  if(!hasEFS)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding)  {  if(!hasEFS)  {  off  +=  SHORT;  }	  if(!hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
77	[BUG]  [BUGGY]  off  +=  SHORT  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  +  1;	  off    +=    LAST_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
78	[BUG]  [BUGGY]  off  +=  WORD  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  WORD  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  WORD  +  1;	  off    +=    LAST_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
79	[BUG]  [BUGGY]  off  +=  LAST_LEN  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_LEN  +  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LEN  +  2;	  off    +=    LAST_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
80	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lf	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
81	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
82	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
83	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
84	[BUG]  [BUGGY]  off  +=  LH_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LH_LEN  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LH_LEN  +  1;	  off    +=    TIME_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
85	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
86	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
87	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
88	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
89	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
90	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
91	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
92	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
93	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
94	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lf	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
95	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
96	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
97	[BUG]  [BUGGY]  Offset  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  +=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  +=  WORD;	  Offset    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
98	[BUG]  [BUGGY]  Offset  +=  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  +=  LFH_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  +=  LFH_LEN;	  Offset    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
99	[BUG]  [BUGGY]  Offset  +=  LAST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  +=  LAST;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  +=  LAST;	  Offset    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
100	[BUG]  [BUGGY]  Offset  +=  SHORT  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  +=  SHORT  -  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  +=  SHORT  -  1;	  Offset    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
101	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setFileName(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
102	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead  +  1);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setFileName(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
103	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setFileName(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setFileName(lengthOfLastRead);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setFileName(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setFileName(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
104	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setFileName(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
105	[BUG]  [BUGGY]  Off  <  SHORT  &&  hasEFS?  current.setMethod(ZipShort.getValue(lfh,  off)):  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Off  <  SHORT  &&  hasEFS?  current.setMethod(ZipShort.getValue(lfh,  off)):  entryEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Off  <  SHORT  &&  hasEFS?  current.setMethod(ZipShort.getValue(lfh,  off)):  entryEncoding;	  Off    <    SHORT    ||    hasEFS?    current.setMethod(ZipShort.getValue(lfh,    off))    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
106	[BUG]  [BUGGY]  Off  <  SHORT  ||  hasEFS?  current.setCrc(ZipShort.getValue(lfh,  off)):  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Off  <  SHORT  ||  hasEFS?  current.setCrc(ZipShort.getValue(lfh,  off)):  entryEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Off  <  SHORT  ||  hasEFS?  current.setCrc(ZipShort.getValue(lfh,  off)):  entryEncoding;	  Off    <    SHORT    ||    hasEFS?    current.setMethod(ZipShort.getValue(lfh,    off))    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
107	[BUG]  [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
108	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
109	[BUG]  [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
110	[BUG]  [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
111	[BUG]  [BUGGY]  off  -=  HORIZONTAL  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  HORIZONTAL  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  HORIZONTAL  +  1;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
112	[BUG]  [BUGGY]  off  -=  HORIZONTAL  ||  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  HORIZONTAL  ||  hasEFS;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  HORIZONTAL  ||  hasEFS;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
113	[BUG]  [BUGGY]  off  +=  HORIZONTAL;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORIZONTAL;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORIZONTAL;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
114	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
115	[BUG]  [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
116	[BUG]  [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
117	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lf	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
118	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
119	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1));	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
120	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
121	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  2));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  2));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  2));	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
122	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setCrc(ZipShort.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
123	[BUG]  [BUGGY]  ||  entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding    ==    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
124	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));	  if(entryEncoding    ==    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
125	[BUG]  [BUGGY]  ||  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
126	[BUG]  [BUGGY]  current.setSize(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setSize(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setSize(ZipShort.getValue(lfh,  off  +  1));	  current.setSize(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
127	[BUG]  [BUGGY]  current.setLength(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setLength(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setLength(ZipShort.getValue(lfh,  off));	  current.setSize(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
128	[BUG]  [BUGGY]  current.setDelimiter(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setDelimiter(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setDelimiter(ZipShort.getValue(lfh,  off));	  current.setSize(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
129	[BUG]  [BUGGY]  off  +=  WORD  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  WORD  -  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  WORD  -  2;	  off    +=    SHORT    -    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
130	[BUG]  [BUGGY]  off  +=  SHORT  /  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  /  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  /  2;	  off    +=    SHORT    -    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
131	[BUG]  [BUGGY]  off  -=  LAST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  LAST;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  LAST;	  off    +=    LAST;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
132	[BUG]  [BUGGY]  off  +=  LFH_LEN  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LFH_LEN  +  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  +  2;	  off    +=    LFH_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
133	[BUG]  [BUGGY]  off  +=  LFH_LEN  +  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LFH_LEN  +  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  +  SHORT;	  off    +=    LFH_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
134	[BUG]  [BUGGY]  ||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
135	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
136	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING,  hasEFS))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
137	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValu  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValu  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValu	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
138	[BUG]  [BUGGY]  off  +=  H  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  H  /  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  H  /  1;	  off    +=    H    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
139	[BUG]  [BUGGY]  off  +=  H  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  H  -  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  H  -  2;	  off    +=    H    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
140	[BUG]  [BUGGY]  off  +=  H  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  H  -  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  H  -  WORD;	  off    +=    H    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
141	[BUG]  [BUGGY]  off  +=  HORD  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  +  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  +  2;	  off    +=    HORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
142	[BUG]  [BUGGY]  off  +=  HORD  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  +  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  +  WORD;	  off    +=    HORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
143	[BUG]  [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  null)  {  off  +=  SHORT;  }	  if(entryEncoding!=    null)    {    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
144	[BUG]  [BUGGY]  if(entryEncoding  ==  null)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  null)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  null)  {  off  +=  WORD;  }	  if(entryEncoding!=    null)    {    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
145	[BUG]  [BUGGY]  Offset  <  SHORT  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  <  SHORT  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  <  SHORT  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }	  if(entryEncoding!=    null)    {    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
146	[BUG]  [BUGGY]  Offset  <  SHORT  ||  entryEncoding!=  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  <  SHORT  ||  entryEncoding!=  null;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  <  SHORT  ||  entryEncoding!=  null;	  if(entryEncoding!=    null)    {    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
147	[BUG]  [BUGGY]  ||  entryEncoding  ==  null)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding  ==  null)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  null)  {  off  +=  SHORT;  }	  if(entryEncoding!=    null)    {    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
148	[BUG]  [BUGGY]  off  +=  LAST_LEN  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_LEN  /  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LEN  /  1;	  off    +=    LAST_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
149	[BUG]  [BUGGY]  off  +=  LAST_LEN  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_LEN  -  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LEN  -  2;	  off    +=    LAST_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
150	[BUG]  [BUGGY]  off  +=  LAST_LEN  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_LEN  -  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LEN  -  WORD;	  off    +=    LAST_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
151	[BUG]  [BUGGY]  off  +=  FH_LEN  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  FH_LEN  -  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  FH_LEN  -  1;	  off    +=    FH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
152	[BUG]  [BUGGY]  off  +=  FH_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  FH_LEN  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  FH_LEN  +  1;	  off    +=    FH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
153	[BUG]  [BUGGY]  ||  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));	  ||    entryEncoding    ==    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
154	[BUG]  [BUGGY]  ||  entryEncoding  ==  hasEFS  &&  current.setCrc(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding  ==  hasEFS  &&  current.setCrc(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  hasEFS  &&  current.setCrc(ZipShort.getValue(lfh,  off));	  ||    entryEncoding    ==    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
155	[BUG]  [BUGGY]  ||  hasEFS  &&  current.setCrc(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  current.setCrc(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  current.setCrc(ZipShort.getValue(lfh,  off));	  ||    entryEncoding    ==    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
156	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS  &&  current.setCrc(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS  &&  current.setCrc(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS  &&  current.setCrc(ZipShort.getValue(lfh,  off));	  ||    entryEncoding    ==    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
157	[BUG]  [BUGGY]  ||  entryEncoding  ==  hasEFS  &&  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding  ==  hasEFS  &&  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  hasEFS  &&  current.setMethod(ZipLong.getValue(lfh,  off));	  ||    entryEncoding    ==    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
158	[BUG]  [BUGGY]  off  +=  HORD  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  -  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  -  2;	  off    +=    HORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
159	[BUG]  [BUGGY]  off  +=  HORD  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  -  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  -  WORD;	  off    +=    HORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
160	[BUG]  [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  null)  {  off  +=  WORD;	  ||    entryEncoding!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
161	[BUG]  [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  ||    entryEncoding!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
162	[BUG]  [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  ||    entryEncoding!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
163	[BUG]  [BUGGY]  off  -=  WORD  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  WORD  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  WORD  +  1;	  off    -=    SHORT    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
164	[BUG]  [BUGGY]  off  -=  SHORT  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  SHORT  +  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  SHORT  +  WORD;	  off    -=    SHORT    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
165	[BUG]  [BUGGY]  off  -=  SHORT  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  SHORT  +  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  SHORT  +  2;	  off    -=    SHORT    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
166	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  ||    entryEncoding    ==    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
167	[BUG]  [BUGGY]  ||  entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  ||    entryEncoding    ==    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
168	[BUG]  [BUGGY]  ||  entryEncoding  ==  hasEFS)  {  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding  ==  hasEFS)  {  off  +=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  hasEFS)  {  off  +=  WORD;	  ||    entryEncoding    ==    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
169	[BUG]  [BUGGY]  off  +=  LFH_LEN  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LFH_LEN  -  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  -  2;	  off    +=    LFH_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
170	[BUG]  [BUGGY]  if(entryEncoding!=  false)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  false)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  false)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(current!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
171	[BUG]  [BUGGY]  if(entryEncoding)  {  if(current!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding)  {  if(current!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding)  {  if(current!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(current!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
172	[BUG]  [BUGGY]  if(current!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(current!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(current!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(current!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
173	[BUG]  [BUGGY]  Offset  -=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  -=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  -=  WORD;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
174	[BUG]  [BUGGY]  Offset  -=  HORIZONTAL;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  -=  HORIZONTAL;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  -=  HORIZONTAL;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
175	[BUG]  [BUGGY]  Offset  -=  SHORT  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  -=  SHORT  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  -=  SHORT  +  1;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
176	[BUG]  [BUGGY]  Offset  -=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  -=  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  -=  1;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
177	[BUG]  [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setSize(ZipLong.getValue(lfh,  off  +  1));	  current.setSize(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
178	[BUG]  [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setSize(ZipLong.getValue(lfh,  off),  hasEFS);	  current.setSize(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
179	[BUG]  [BUGGY]  current.setLength(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setLength(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setLength(ZipLong.getValue(lfh,  off));	  current.setSize(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
180	[BUG]  [BUGGY]  current.setDelimiter(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setDelimiter(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setDelimiter(ZipLong.getValue(lfh,  off));	  current.setSize(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
181	[BUG]  [BUGGY]  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setCrc(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setCrc(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setCrc(ZipShort.getValue(lfh,  off));  }	  if(hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
182	[BUG]  [BUGGY]  off  +=  LH_LEN  ||  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LH_LEN  ||  hasEFS;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LH_LEN  ||  hasEFS;	  off    +=    LH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
183	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipLong.getValue(lfh,  off  +  1));	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
184	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
185	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setCrc(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
186	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  entryEncoding);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipLong.getValue(lfh,  off),  entryEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
187	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
188	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  current;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  current;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  current;	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
189	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  generalPurposeFlag;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  generalPurposeFlag;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  generalPurposeFlag;	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
190	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  userDescriptor;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  userDescriptor;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  userDescriptor;	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
191	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  fileNameLen;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  fileNameLen;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  fileNameLen;	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
192	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  this.entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  this.entryEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  this.entryEncoding;	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
193	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  currentEntryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  currentEntryEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  currentEntryEncoding;	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
194	[BUG]  [BUGGY]  off  +=  LHORT  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LHORT  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LHORT  +  1;	  off    +=    LHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
195	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
196	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
197	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
198	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setLength(lengthOfLastRead);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
199	[BUG]  [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
200	[BUG]  [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_LEN;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
201	[BUG]  [BUGGY]  off  +=  WORD  =  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  WORD  =  LFH_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  WORD  =  LFH_LEN;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
202	[BUG]  [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_LONG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_LONG;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_LONG;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
203	[BUG]  [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_FOR;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_FOR;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_FOR;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
204	[BUG]  [BUGGY]  off  +=  SHORT  -  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  -  LFH_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  -  LFH_LEN;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
205	[BUG]  [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_FIRST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_FIRST;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  hasEFS?  LFH_LEN  :  LFH_FIRST;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
206	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS  &&  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS  &&  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS  &&  current.setMethod(ZipLong.getValue(lfh,  off));	  ||    entryEncoding!=    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
207	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off  +  1));	  ||    entryEncoding!=    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
208	[BUG]  [BUGGY]  ||  hasEFS  &&  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  current.setMethod(ZipLong.getValue(lfh,  off));	  ||    entryEncoding!=    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
209	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS)  {  off  +=  WORD;	  ||    entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
210	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  ||    entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
211	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }	  ||    entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
212	[BUG]  [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
213	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
214	[BUG]  [BUGGY]  if(entryEncoding  ==  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  null)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
215	[BUG]  [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipLong.getValue(lfh,  off  +  1));	  current.setFileName(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
216	[BUG]  [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipLong.getValue(lfh,  off),  hasEFS);	  current.setFileName(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
217	[BUG]  [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off  +  2));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off  +  2));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipLong.getValue(lfh,  off  +  2));	  current.setFileName(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
218	[BUG]  [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off  -  1));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipLong.getValue(lfh,  off  -  1));	  current.setFileName(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
219	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  hasEFS)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS)  {  off  +=  SHORT;  }	  if(entryEncoding!=    hasEFS)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
220	[BUG]  [BUGGY]  Offset  <  WORD  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  <  WORD  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  <  WORD  ||  entryEncoding!=  hasEFS)  {  off  +=  WORD;  }	  if(entryEncoding!=    hasEFS)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
221	[BUG]  [BUGGY]  ||  entryEncoding  ==  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding  ==  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding  ==  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding    ==    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
222	[BUG]  [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipShort.getValue(lfh,  off  +  1));	  current.setFileName(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
223	[BUG]  [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off),  hasEFS);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipShort.getValue(lfh,  off),  hasEFS);	  current.setFileName(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
224	[BUG]  [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off  +  2));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off  +  2));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipShort.getValue(lfh,  off  +  2));	  current.setFileName(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
225	[BUG]  [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off  -  1));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipShort.getValue(lfh,  off  -  1));	  current.setFileName(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
226	[BUG]  [BUGGY]  off  +=  H  -  1L;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  H  -  1L;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  H  -  1L;	  off    +=    H    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
227	[BUG]  [BUGGY]  off  +=  H  -  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  H  -  4;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  H  -  4;	  off    +=    H    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
228	[BUG]  [BUGGY]  off  +=  H  -  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  H  -  3;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  H  -  3;	  off    +=    H    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
229	[BUG]  [BUGGY]  ||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lf    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
230	[BUG]  [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lf    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
231	[BUG]  [BUGGY]  if(entryEncoding  ==  hasEFS)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  hasEFS)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  hasEFS)  {  off  +=  SHORT;  }	  if(entryEncoding!=    hasEFS)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
232	[BUG]  [BUGGY]  if(entryEncoding!=  isEFS)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  isEFS)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  isEFS)  {  off  +=  SHORT;  }	  if(entryEncoding!=    hasEFS)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
233	[BUG]  [BUGGY]  if(!hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
234	[BUG]  [BUGGY]  if(!hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
235	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
236	[BUG]  [BUGGY]  if(!hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
237	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
238	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
239	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
240	[BUG]  [BUGGY]  if(current!=  null)  {  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(current!=  null)  {  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(current!=  null)  {  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
241	[BUG]  [BUGGY]  off  +=  LAST_LEN  +  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_LEN  +  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LEN  +  SHORT;	  off    +=    LAST_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
242	[BUG]  [BUGGY]  off  +=  SHORT  -  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  -  8;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  -  8;	  off    +=    SHORT    -    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
243	[BUG]  [BUGGY]  off  +=  SHORT  -  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  -  4;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  -  4;	  off    +=    SHORT    -    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
244	[BUG]  [BUGGY]  off  +=  NON_SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  NON_SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  NON_SHORT;	  off    +=    LONG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
245	[BUG]  [BUGGY]  off  +=  NUMBER;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  NUMBER;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  NUMBER;	  off    +=    LONG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
246	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
247	[BUG]  [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off  +  SHORT));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off  +  SHORT));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipLong.getValue(lfh,  off  +  SHORT));	  current.setFileName(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
248	[BUG]  [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off)+  SHORT);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipLong.getValue(lfh,  off)+  SHORT);	  current.setFileName(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
249	[BUG]  [BUGGY]  if(current!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(current!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(current!=  null)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding    ==    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
250	[BUG]  [BUGGY]  if(current!=  null)  {  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(current!=  null)  {  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(current!=  null)  {  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(!hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
251	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
252	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
253	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
254	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  hasDataDescriptor;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  hasDataDescriptor;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  hasDataDescriptor;	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
255	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  userEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  userEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  userEncoding;	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
256	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  new  ZipEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  new  ZipEncoding(current);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  new  ZipEncoding(current);	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
257	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  new  ZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  new  ZipEncoding();  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  new  ZipEncoding();	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
258	[BUG]  [BUGGY]  off  +=  NUMBER_FIRST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  NUMBER_FIRST;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  NUMBER_FIRST;	  off    +=    LAST_FIRST;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
259	[BUG]  [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(current!=  null)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setFileName(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
260	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setFileName(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setFileName(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
261	[BUG]  [BUGGY]  Off  <  SHORT  ||  hasEFS?  current.setZipEncoding(ZipShort.getValue(lfh,  off)):  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Off  <  SHORT  ||  hasEFS?  current.setZipEncoding(ZipShort.getValue(lfh,  off)):  entryEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Off  <  SHORT  ||  hasEFS?  current.setZipEncoding(ZipShort.getValue(lfh,  off)):  entryEncoding;	  Off    <    SHORT    ||    hasEFS?    current.setMethod(ZipShort.getValue(lfh,    off))    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
262	[BUG]  [BUGGY]  off  +=  SHORT  /  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  /  8;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  /  8;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
263	[BUG]  [BUGGY]  off  +=  LHORT  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LHORT  -  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LHORT  -  1;	  off    +=    WORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
264	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  null  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  null  &&  zipEncoding.equals(entryEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
265	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS  &&  entryEncoding.equals(current))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  hasEFS  &&  entryEncoding.equals(current))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS  &&  entryEncoding.equals(current))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
266	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(current))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(current))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(current))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
267	[BUG]  [BUGGY]  if(!hasEFS  &&  entryEncoding.equals(current))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS  &&  entryEncoding.equals(current))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS  &&  entryEncoding.equals(current))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
268	[BUG]  [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding);	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
269	[BUG]  [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding!=  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding!=  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  ||    entryEncoding!=    hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
270	[BUG]  [BUGGY]  if(!hasEFS)  {  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS)  {  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS)  {  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lf	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
271	[BUG]  [BUGGY]  off  +=  HORD  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  +  8;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  +  8;	  off    +=    HORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
272	[BUG]  [BUGGY]  off  +=  HORD  +  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  +  3;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  +  3;	  off    +=    HORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
273	[BUG]  [BUGGY]  off  +=  HORD  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  +  4;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  +  4;	  off    +=    HORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
274	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  SHORT));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  SHORT));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  SHORT));	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
275	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off)+  SHORT);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipShort.getValue(lfh,  off)+  SHORT);	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
276	[BUG]  [BUGGY]  Off  -=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Off  -=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Off  -=  SHORT;	  off    -=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
277	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipLong.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
278	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
279	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
280	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  off  +=  SHORT;	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
281	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
282	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  off  +=  SHORT;	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
283	[BUG]  [BUGGY]  off  +=  HORD  -  1L;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  -  1L;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  -  1L;	  off    +=    HORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
284	[BUG]  [BUGGY]  off  +=  HORD  -  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  -  4;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  -  4;	  off    +=    HORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
285	[BUG]  [BUGGY]  off  +=  HORD  -  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  HORD  -  3;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  HORD  -  3;	  off    +=    HORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
286	[BUG]  [BUGGY]  off  +=  LFH_LEN  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LFH_LEN  *  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LFH_LEN  *  2;	  off    +=    LFH_LEN    *    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
287	[BUG]  [BUGGY]  Offsets.getLength(lfh)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offsets.getLength(lfh)+  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offsets.getLength(lfh)+  1;	  Offsets.getLength(lfh)+    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
288	[BUG]  [BUGGY]  Offsets.getLength(current)+  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offsets.getLength(current)+  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offsets.getLength(current)+  SHORT;	  Offsets.getLength(lfh)+    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
289	[BUG]  [BUGGY]  Offsets.getLength(lfh)+  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offsets.getLength(lfh)+  LFH_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offsets.getLength(lfh)+  LFH_LEN;	  Offsets.getLength(lfh)+    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
290	[BUG]  [BUGGY]  off  +=  LH_LEN  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LH_LEN  -  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LH_LEN  -  WORD;	  off    +=    SHORT    -    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
291	[BUG]  [BUGGY]  off  +=  SHORT  =  LFH_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  LFH_LEN  +  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  LFH_LEN  +  1;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
292	[BUG]  [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  inf;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  inf;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  hasEFS?  LFH_LEN  :  inf;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
293	[BUG]  [BUGGY]  off  +=  SHORT  =  hasEFS?  inf  :  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  hasEFS?  inf  :  LFH_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  hasEFS?  inf  :  LFH_LEN;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
294	[BUG]  [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  hasDataDescriptor;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  hasDataDescriptor;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  hasEFS?  LFH_LEN  :  hasDataDescriptor;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
295	[BUG]  [BUGGY]  off  +=  SHORT  =  LFH_LONG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  LFH_LONG;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  LFH_LONG;	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
296	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  SHORT);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  SHORT);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
297	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
298	[BUG]  [BUGGY]  while(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  while(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	while(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
299	[BUG]  [BUGGY]  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
300	[BUG]  [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
301	[BUG]  [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
302	[BUG]  [BUGGY]  current.setMethod(ZipUtil.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipUtil.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipUtil.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
303	[BUG]  [BUGGY]  ||  current!=  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  current!=  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  current!=  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off));	  ||    entryEncoding!=    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
304	[BUG]  [BUGGY]  off  +=  TIME_LEN  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  TIME_LEN  +  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  TIME_LEN  +  2;	  off    +=    TIME_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
305	[BUG]  [BUGGY]  ||  hasEFS)  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS)  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS)  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
306	[BUG]  [BUGGY]  Offset  -=  LAST_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  -=  LAST_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  -=  LAST_LEN;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
307	[BUG]  [BUGGY]  off  -=  SHORT  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  SHORT  +  8;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  SHORT  +  8;	  off    -=    SHORT    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
308	[BUG]  [BUGGY]  off  -=  SHORT  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  SHORT  +  4;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  SHORT  +  4;	  off    -=    SHORT    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
309	[BUG]  [BUGGY]  off  -=  HORIZONTAL  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  HORIZONTAL  +  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  HORIZONTAL  +  2;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
310	[BUG]  [BUGGY]  off  -=  HORIZONTAL  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  HORIZONTAL  +  4;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  HORIZONTAL  +  4;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
311	[BUG]  [BUGGY]  off  -=  HORIZONTAL  +  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  HORIZONTAL  +  3;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  HORIZONTAL  +  3;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
312	[BUG]  [BUGGY]  current.setSize(ZipShort.getValue(lfh,  off  +  SHORT));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setSize(ZipShort.getValue(lfh,  off  +  SHORT));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setSize(ZipShort.getValue(lfh,  off  +  SHORT));	  current.setSize(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
313	[BUG]  [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off  +  SHORT));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off  +  SHORT));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setSize(ZipLong.getValue(lfh,  off  +  SHORT));	  current.setSize(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
314	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
315	[BUG]  [BUGGY]  off  +=  BYTE_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  BYTE_LEN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  BYTE_LEN;	  off    +=    LAST_SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
316	[BUG]  [BUGGY]  off  +=  LAST_LITERAL;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_LITERAL;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LITERAL;	  off    +=    LAST_SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
317	[BUG]  [BUGGY]  if(current!=  null)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(current!=  null)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(current!=  null)  {  off  +=  WORD;  }	  if(current!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
318	[BUG]  [BUGGY]  off  -=  BYTE_LONG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  BYTE_LONG;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  BYTE_LONG;	  off    -=    BYTE_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
319	[BUG]  [BUGGY]  off  -=  BYTE_SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  BYTE_SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  BYTE_SHORT;	  off    -=    BYTE_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
320	[BUG]  [BUGGY]  off  +=  LAST  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST  -  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST  -  1;	  off    +=    LAST;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
321	[BUG]  [BUGGY]  off  +=  LAST_LEN  *  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_LEN  *  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LEN  *  1;	  off    +=    LAST_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
322	[BUG]  [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off  +  SHORT));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off  +  SHORT));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipShort.getValue(lfh,  off  +  SHORT));	  current.setFileName(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
323	[BUG]  [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off)+  SHORT);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipShort.getValue(lfh,  off)+  SHORT);	  current.setFileName(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
324	[BUG]  [BUGGY]  while(!hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  while(!hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	while(!hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
325	[BUG]  [BUGGY]  if(hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
326	[BUG]  [BUGGY]  off  -=  HORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  HORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  HORD;	  off    -=    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
327	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  SHORT;  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
328	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING  &&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING  &&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING  &&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
329	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
330	[BUG]  [BUGGY]  off  +=  hasEFS  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  hasEFS  -  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  hasEFS  -  WORD;	  off    +=    SHORT    -    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
331	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
332	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  WORD;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
333	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
334	[BUG]  [BUGGY]  Offset  +=  HORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  +=  HORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  +=  HORD;	  Offset    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
335	[BUG]  [BUGGY]  ||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lf	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
336	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
337	[BUG]  [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
338	[BUG]  [BUGGY]  if(hasEFS)  {  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(hasEFS)  {  off  +=  SHORT;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(hasEFS)  {  off  +=  SHORT;  }	  if(hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
339	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
340	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
341	[BUG]  [BUGGY]  Offset  <  ZipEncoding>  off  =  entryEncoding.offsetToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  <  ZipEncoding>  off  =  entryEncoding.offsetToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  <  ZipEncoding>  off  =  entryEncoding.offsetToJavaTime(ZipLong.getValue(lfh,  off));	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
342	[BUG]  [BUGGY]  Offset  <  ZipEncoding>  off  =  entryEncoding.offsetToJavaTime(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  <  ZipEncoding>  off  =  entryEncoding.offsetToJavaTime(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  <  ZipEncoding>  off  =  entryEncoding.offsetToJavaTime(ZipShort.getValue(lfh,  off));	  if(entryEncoding!=    null)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
343	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
344	[BUG]  [BUGGY]  if(!hasEFS  &&  entryEncoding.equals(zipEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS  &&  entryEncoding.equals(zipEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS  &&  entryEncoding.equals(zipEncoding))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
345	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS  &&  entryEncoding.equals(zipEncoding))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  hasEFS  &&  entryEncoding.equals(zipEncoding))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS  &&  entryEncoding.equals(zipEncoding))  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(entryEncoding!=    hasEFS    &&    zipEncoding.equals(entryEncoding))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
346	[BUG]  [BUGGY]  current.setDescriptor(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setDescriptor(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setDescriptor(ZipShort.getValue(lfh,  off));	  current.setSize(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
347	[BUG]  [BUGGY]  ||  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  current.setMethod(ZipShort.getValue(lfh,  off  +  1));	  ||    entryEncoding!=    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
348	[BUG]  [BUGGY]  ||  hasEFS  &&  current.setEntryEncoding(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  current.setEntryEncoding(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  current.setEntryEncoding(ZipShort.getValue(lfh,  off));	  ||    entryEncoding!=    hasEFS    &&    current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
349	[BUG]  [BUGGY]  if(!hasEFS)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(!hasEFS)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(!hasEFS)  {  off  +=  WORD;  }	  if(!hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
350	[BUG]  [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  inf.getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  inf.getLongValue();  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  hasEFS?  LFH_LEN  :  inf.getLongValue();	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
351	[BUG]  [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  hasDataDescriptor);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  hasEFS?  LFH_LEN  :  hasDataDescriptor);	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
352	[BUG]  [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  inf.readInt();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  SHORT  =  hasEFS?  LFH_LEN  :  inf.readInt();  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  SHORT  =  hasEFS?  LFH_LEN  :  inf.readInt();	  off    +=    SHORT    =    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
353	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
354	[BUG]  [BUGGY]  off  -=  SHORT  ||  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  SHORT  ||  hasEFS;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  SHORT  ||  hasEFS;	  off    -=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
355	[BUG]  [BUGGY]  off  -=  SHORT,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  SHORT,  hasEFS);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  SHORT,  hasEFS);	  off    -=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
356	[BUG]  [BUGGY]  off  +=  LAST_LEN  -  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_LEN  -  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LEN  -  SHORT;	  off    +=    LAST_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
357	[BUG]  [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off)+  1);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipShort.getValue(lfh,  off)+  1);	  current.setFileName(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
358	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING  &&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING  &&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING  &&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
359	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
360	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&  hasEFS)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipShort.getValue(lfh	  if(entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING)&&    hasEFS)    {    off    +=    WORD;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
361	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  ZipEncodingHelper.UTF8)  {  off  +=  WORD;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  if(entryEncoding.equals(ZipEncodingHelper.UTF8))    {    off    +=    WORD;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
362	[BUG]  [BUGGY]  off  +=  LONG  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LONG  -  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LONG  -  1;	  off    +=    WORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
363	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS  &&  current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  hasEFS  &&  current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS  &&  current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }	  if(entryEncoding!=    hasEFS)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
364	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS  &&  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  hasEFS  &&  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS  &&  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  WORD;  }	  if(entryEncoding!=    hasEFS)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
365	[BUG]  [BUGGY]  if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding!=  hasEFS  &&  zipEncoding.equals(entryEncoding))  {  off  +=  WORD;  }	  if(entryEncoding!=    hasEFS)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
366	[BUG]  [BUGGY]  if(entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(entryEncoding  ==  hasEFS)  {  off  +=  WORD;  }	  if(entryEncoding!=    hasEFS)    {    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
367	[BUG]  [BUGGY]  ||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lf	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
368	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  }	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
369	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
370	[BUG]  [BUGGY]  off  +=  BYTE_LONG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  BYTE_LONG;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  BYTE_LONG;	  off    +=    LONG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
371	[BUG]  [BUGGY]  ||  hasEFS))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
372	[BUG]  [BUGGY]  off  -=  LAST_FIRST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  -=  LAST_FIRST;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  -=  LAST_FIRST;	  off    -=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
373	[BUG]  [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setFileName(ZipLong.getValue(lfh,  off)+  1);  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setFileName(ZipLong.getValue(lfh,  off)+  1);	  current.setFileName(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
374	[BUG]  [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  this.zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  this.zipEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	final  ZipEncoding  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  this.zipEncoding;	  final    ZipEncoding    entryEncoding    =    hasEFS?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
375	[BUG]  [BUGGY]  current.setDescriptor(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setDescriptor(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setDescriptor(ZipLong.getValue(lfh,  off));	  current.setSize(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
376	[BUG]  [BUGGY]  Off  <  SHORT?  current.setMethod(ZipShort.getValue(lfh,  off)):  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Off  <  SHORT?  current.setMethod(ZipShort.getValue(lfh,  off)):  entryEncoding;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Off  <  SHORT?  current.setMethod(ZipShort.getValue(lfh,  off)):  entryEncoding;	  Off    <    SHORT    ||    hasEFS?    current.setMethod(ZipShort.getValue(lfh,    off))    :    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
377	[BUG]  [BUGGY]  Off  <  SHORT  ||  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Off  <  SHORT  ||  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Off  <  SHORT  ||  current.setMethod(ZipShort.getValue(lfh,  off));	  if(current!=    null)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
378	[BUG]  [BUGGY]  ||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  zipEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lf    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
379	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8))  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipLong.getValue(lfh,  off));	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
380	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
381	[BUG]  [BUGGY]  ||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS  &&  entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));	  if(hasEFS    &&    entryEncoding!=    ZipEncodingHelper.UTF8_ZIP_ENCODING)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
382	[BUG]  [BUGGY]  if(hasEFS  ||  hasDataDescriptor)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  if(hasEFS  ||  hasDataDescriptor)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	if(hasEFS  ||  hasDataDescriptor)  {  off  +=  SHORT;  }  else  {  current.setMethod(ZipShort.getValue(lfh,  off));  }	  if(hasEFS)    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipShort.getValue(lfh,    off));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
383	[BUG]  [BUGGY]  off  +=  LAST_LIN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  LAST_LIN;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  LAST_LIN;	  off    +=    LAST_SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
384	[BUG]  [BUGGY]  off  +=  WORD  /  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  WORD  /  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  WORD  /  2;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
385	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  SHORT));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  SHORT));  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	current.setMethod(ZipLong.getValue(lfh,  off  +  SHORT));	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
386	[BUG]  [BUGGY]  Offsets.getLength(lfh)*  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offsets.getLength(lfh)*  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offsets.getLength(lfh)*  SHORT;	  Offsets.getLength(lfh)+    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
387	[BUG]  [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipLong.getValue(lfh,  off)))  {  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipLong.getValue(lfh,  off)))  {  off  +=  SHORT;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding.equals(ZipLong.getValue(lfh,  off)))  {  off  +=  SHORT;	  ||    entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING))    {    off    +=    SHORT;    }    else    {    current.setMethod(ZipLong.getValue(lfh,    off)    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
388	[BUG]  [BUGGY]  Offset  -=  HORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  -=  HORD;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  -=  HORD;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
389	[BUG]  [BUGGY]  Offset  -=  LAST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  Offset  -=  LAST;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	Offset  -=  LAST;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
390	[BUG]  [BUGGY]  off  +=  TIME_LEN  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  off  +=  TIME_LEN  -  2;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	off  +=  TIME_LEN  -  2;	  off    +=    TIME_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
391	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]        long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	147	147	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
