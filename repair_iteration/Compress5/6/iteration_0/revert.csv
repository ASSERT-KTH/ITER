projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError=newAssertionFailedError();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67ZipArchiveEntry<K,V>current=currentEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError(){returnnewAssertionFailedError(ZipArchiveEntry.SOURCENAME_ERROR);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError(){returnnewAssertionFailedError(ZipArchiveEntry.SOURCENAME_ERROR,null);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67ZipArchiveEntry<K,V>current=currentEntry.getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError(){returnnewAssertionFailedError(ZipArchiveEntry.DEFAULT_ERROR);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError(){returnnewAssertionFailedError(ZipArchiveEntry.SOURCENAME_ERROR,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67Validate.isTrue(current.getType()==Token.EXPR_RESULT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67Validate.notNull(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67if(current==null){current=newZipArchiveEntry();}else{current.closeEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67if(current!=null){current=newZipArchiveEntry();}else{current.closeEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67if(current==null){current=newZipArchiveEntry();}else{current.close();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError<ZipArchiveEntry>current=newAssertionFailedError();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError<ZipArchiveEntry>current=newAssertionFailedErrorImpl();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError<ZipArchiveEntry>current=newAssertionFailedErrorHandler();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError=newAssertionFailedError();this.current=current;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError=newAssertionFailedError("ZipArchiveInputStreamisnotsupported.");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java67privatefinalAssertionFailedError=newAssertionFailedError("ZipArchiveInputStreamisnotimplemented.");
