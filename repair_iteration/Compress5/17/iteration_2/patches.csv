bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Inflater  inf  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextFileEntry();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextFileEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
2	[BUG]  [BUGGY]  Inflater  inf  =  getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextEntry();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
3	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInputStream();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getInputStream();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
4	[BUG]  [BUGGY]  Inflater  inf  =  getFullZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getFullZipEntry();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getFullZipEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
5	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextZipEntry(true);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextZipEntry(true);	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
6	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextZipEntry(null);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextZipEntry(null);	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
7	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null)  {	  if(zipEncoding!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
8	[BUG]  [BUGGY]  if(entryEncoding  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null)  {	  if(zipEncoding!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
9	[BUG]  [BUGGY]  if(this.entryEncoding!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding!=  null)  {	  if(zipEncoding!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
10	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
11	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
12	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
13	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
14	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
15	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARGUMENT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARGUMENT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARGUMENT))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
16	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
17	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
18	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
19	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME,  true)||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME,  true)||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME,  true)||  isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
20	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
21	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
22	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
23	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
24	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
25	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
26	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
27	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().size()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().size()  +  1;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().size()  +  1;	  int    LFH_LEN    =    getFullyQuotedFields().size();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
28	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().size()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().size()  -  1;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().size()  -  1;	  int    LFH_LEN    =    getFullyQuotedFields().size();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
29	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().size()  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().size()  *  2;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().size()  *  2;	  int    LFH_LEN    =    getFullyQuotedFields().size();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
30	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().getLength();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().getLength();	  int    LFH_LEN    =    getFullyQuotedFields().size();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
31	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
32	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
33	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
34	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
35	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  containsEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  containsEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  containsEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
36	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  close)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  close)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  close)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
37	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
38	[BUG]  [BUGGY]  if(this.current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
39	[BUG]  [BUGGY]  if(this.current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
40	[BUG]  [BUGGY]  if(this.current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
41	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {	  if(current    ==    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
42	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {	  if(current    ==    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
43	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getValue()!=  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  current.getValue()!=  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getValue()!=  ZipEncoding.UTF8)  {	  if(current    ==    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
44	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
45	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
46	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
47	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
48	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.CFH_SIG))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
49	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.FOR)||  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.FOR)||  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.FOR)||  isEnabled(ZipLong.CFH_SIG))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
50	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
51	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
52	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
53	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  +  1))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  +  1))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  +  1))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
54	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
55	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
56	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
57	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
58	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
59	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
60	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
61	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
62	[BUG]  [BUGGY]  if(entry  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
63	[BUG]  [BUGGY]  if(entry!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
64	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
65	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
66	[BUG]  [BUGGY]  if(entry!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
67	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
68	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ||  hasEFS)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
69	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hitCentralDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ||  hitCentralDirectory)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ||  hitCentralDirectory)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
70	[BUG]  [BUGGY]  if(!closed  ||  hitCentralDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  ||  hitCentralDirectory)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  ||  hitCentralDirectory)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
71	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
72	[BUG]  [BUGGY]  if(!closed  &&!hitCentralDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  &&!hitCentralDirectory)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  &&!hitCentralDirectory)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
73	[BUG]  [BUGGY]  if(closed  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(closed  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(closed  ||  hasDataDescriptor)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
74	[BUG]  [BUGGY]  if(!closed  ||!hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  ||!hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  ||!hasDataDescriptor)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
75	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_ERROR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
76	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_ERROR))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_ERROR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
77	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_ERROR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
78	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_ERROR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
79	[BUG]  [BUGGY]  if(isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.AUTO_CLOSE_ERROR))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_ERROR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
80	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_ERROR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
81	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entryEncoding    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
82	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entryEncoding    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
83	[BUG]  [BUGGY]  if(zipEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entryEncoding    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
84	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(this.entryEncoding    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
85	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
86	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
87	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
88	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.SHORT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.SHORT))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
89	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.SHORT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.SHORT))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
90	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  +  1;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().length  +  1;	  int    LFH_LEN    =    getFullyQuotedFields().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
91	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  -  1;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().length  -  1;	  int    LFH_LEN    =    getFullyQuotedFields().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
92	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  *  2;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().length  *  2;	  int    LFH_LEN    =    getFullyQuotedFields().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
93	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  +  2;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().length  +  2;	  int    LFH_LEN    =    getFullyQuotedFields().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
94	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  -  2;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().length  -  2;	  int    LFH_LEN    =    getFullyQuotedFields().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
95	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getOutputFile();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getOutputFile();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
96	[BUG]  [BUGGY]  Inflater  inf  =  this.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  this.getInflater();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  this.getInflater();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
97	[BUG]  [BUGGY]  Inflater  inf  =  getNextInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextInflater();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextInflater();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
98	[BUG]  [BUGGY]  if(entry  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
99	[BUG]  [BUGGY]  if(entry!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
100	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasDataDescriptor)  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
101	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  hasDataDescriptor)  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
102	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
103	[BUG]  [BUGGY]  if(entry!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
104	[BUG]  [BUGGY]  if(isEnabled(ZipLong.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
105	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
106	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
107	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
108	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME,  true))  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
109	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
110	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.DEFAULT)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.DEFAULT)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.DEFAULT)  {	  if(zipEncoding    ==    ZipEncoding.DEFAULT)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
111	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncoding.DEFAULT)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  ZipEncoding.DEFAULT)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  ZipEncoding.DEFAULT)  {	  if(zipEncoding    ==    ZipEncoding.DEFAULT)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
112	[BUG]  [BUGGY]  if(this.entryEncoding  ==  ZipEncoding.DEFAULT)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  ZipEncoding.DEFAULT)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  ZipEncoding.DEFAULT)  {	  if(zipEncoding    ==    ZipEncoding.DEFAULT)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
113	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.DEFAULT  ||  entryEncoding  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.DEFAULT  ||  entryEncoding  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.DEFAULT  ||  entryEncoding  ==  null)  {	  if(zipEncoding    ==    ZipEncoding.DEFAULT)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
114	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.DEFAULT  ||  entryEncoding  ==  ZipEncoding.DEFAULT)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.DEFAULT  ||  entryEncoding  ==  ZipEncoding.DEFAULT)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.DEFAULT  ||  entryEncoding  ==  ZipEncoding.DEFAULT)  {	  if(zipEncoding    ==    ZipEncoding.DEFAULT)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
115	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.BLOCK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.BLOCK)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.BLOCK)  {	  if(current    ==    null    ||    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
116	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getKey()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  current.getKey()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getKey()  ==  ZipEncoding.UTF8)  {	  if(current    ==    null    ||    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
117	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getType()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  current.getType()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getType()  ==  ZipEncoding.UTF8)  {	  if(current    ==    null    ||    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
118	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.EOF)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.EOF)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.EOF)  {	  if(current    ==    null    ||    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
119	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
120	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {	  if(current    ==    null    ||    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
121	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SIG))  {	  if(current    ==    null    ||    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
122	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
123	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
124	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
125	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.SUB_QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.SUB_QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.SUB_QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
126	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
127	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELDS_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELDS_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELDS_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
128	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.UTF8)  {	  if(zipEncoding    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
129	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  ZipEncoding.UTF8)  {	  if(zipEncoding    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
130	[BUG]  [BUGGY]  if(this.entryEncoding  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  ZipEncoding.UTF8)  {	  if(zipEncoding    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
131	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.UNKNOWN)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.UNKNOWN)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.UNKNOWN)  {	  if(zipEncoding    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
132	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.EOF)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.EOF)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.EOF)  {	  if(zipEncoding    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
133	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
134	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_FILENAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
135	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
136	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILENAME)||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILENAME)||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_FILENAME)||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
137	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
138	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
139	[BUG]  [BUGGY]  if  (hasDataDescriptor  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (hasDataDescriptor  ||  current!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (hasDataDescriptor  ||  current!=  null)  {	  if    (hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
140	[BUG]  [BUGGY]  if  (!hasDataDescriptor  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!hasDataDescriptor  ||  current  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!hasDataDescriptor  ||  current  ==  null)  {	  if    (hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
141	[BUG]  [BUGGY]  if(current!=  null  &&  entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {	  if(entryEncoding!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
142	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(entryEncoding!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
143	[BUG]  [BUGGY]  if(current  ==  null  &&  entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {	  if(entryEncoding!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
144	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(entryEncoding!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
145	[BUG]  [BUGGY]  if(current  ==  null  ||  entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {	  if(entryEncoding    ==    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
146	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.LP))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
147	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.LP))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
148	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.LP))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.LP))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.LP))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
149	[BUG]  [BUGGY]  if(current!=  null  ||  current.getValue()  ==  ZipEncoding.BLOCK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  current.getValue()  ==  ZipEncoding.BLOCK)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  current.getValue()  ==  ZipEncoding.BLOCK)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.BLOCK)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
150	[BUG]  [BUGGY]  if(current  ==  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.BLOCK)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
151	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.BLOCK)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
152	[BUG]  [BUGGY]  if(current  ==  null  &&  current.getValue()!=  ZipEncoding.BLOCK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  current.getValue()!=  ZipEncoding.BLOCK)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  current.getValue()!=  ZipEncoding.BLOCK)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.BLOCK)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
153	[BUG]  [BUGGY]  if(entryEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.BLOCK)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
154	[BUG]  [BUGGY]  if  (hasDataDescriptor  ||  hitCentralDirectory!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (hasDataDescriptor  ||  hitCentralDirectory!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (hasDataDescriptor  ||  hitCentralDirectory!=  null)  {	  if    (closed    ||    hitCentralDirectory!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
155	[BUG]  [BUGGY]  if  (!closed  ||  hitCentralDirectory!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!closed  ||  hitCentralDirectory!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!closed  ||  hitCentralDirectory!=  null)  {	  if    (closed    ||    hitCentralDirectory!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
156	[BUG]  [BUGGY]  if  (hasDataDescriptor  ||  hitCentralDirectory  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (hasDataDescriptor  ||  hitCentralDirectory  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (hasDataDescriptor  ||  hitCentralDirectory  ==  null)  {	  if    (closed    ||    hitCentralDirectory!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
157	[BUG]  [BUGGY]  if(!closed  &&  hitCentralDirectory!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  &&  hitCentralDirectory!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  &&  hitCentralDirectory!=  null)  {	  if    (closed    ||    hitCentralDirectory!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
158	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  new  ZipArchiveEntry();  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  new  ZipArchiveEntry();  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
159	[BUG]  [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
160	[BUG]  [BUGGY]  final  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  final  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	final  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
161	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
162	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  close)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  close)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  close)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
163	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
164	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
165	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  closed)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
166	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  open)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  open)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  open)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
167	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
168	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {	  if(current!=    null    &&    isEnabled(ZipLong.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
169	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {	  if(current!=    null    &&    isEnabled(ZipLong.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
170	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {	  if(current!=    null    &&    isEnabled(ZipLong.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
171	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.FIELD_NAMES))  {	  if(current!=    null    &&    isEnabled(ZipLong.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
172	[BUG]  [BUGGY]  if(isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {	  if(current!=    null    &&    isEnabled(ZipLong.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
173	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.FIELD_NAMES))  {	  if(current!=    null    &&    isEnabled(ZipLong.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
174	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
175	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
176	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
177	[BUG]  [BUGGY]  if(current  ==  null  &&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  hasEFS)  {	  if(current    ==    null    &&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
178	[BUG]  [BUGGY]  if(current!=  null  &&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  hasEFS)  {	  if(current    ==    null    &&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
179	[BUG]  [BUGGY]  if(entryEncoding  ==  null  &&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  &&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  &&  hasDataDescriptor)  {	  if(current    ==    null    &&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
180	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
181	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  close)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  close)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  close)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
182	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
183	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  closed)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
184	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  open)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  open)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  open)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
185	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FILES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FILES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FILES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
186	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FILES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
187	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FILES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FILES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FILES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
188	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FILES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
189	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FILES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
190	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FILES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FILES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FILES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
191	[BUG]  [BUGGY]  if  (!closed  &&  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!closed  &&  current  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!closed  &&  current  ==  null)  {	  if    (!closed    &&    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
192	[BUG]  [BUGGY]  if  (!closed  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!closed  ||  current!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!closed  ||  current!=  null)  {	  if    (!closed    &&    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
193	[BUG]  [BUGGY]  if  (!closed  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!closed  ||  current  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!closed  ||  current  ==  null)  {	  if    (!closed    &&    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
194	[BUG]  [BUGGY]  int  LFH_LEN  =  entryEncoding.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  entryEncoding.getLength();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  entryEncoding.getLength();	  int    LFH_LEN    =    zipEncoding.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
195	[BUG]  [BUGGY]  int  LFH_LEN  =  this.entryEncoding.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  this.entryEncoding.getLength();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  this.entryEncoding.getLength();	  int    LFH_LEN    =    zipEncoding.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
196	[BUG]  [BUGGY]  int  LFH_LEN  =  zipEncoding.getLength()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  zipEncoding.getLength()  +  1;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  zipEncoding.getLength()  +  1;	  int    LFH_LEN    =    zipEncoding.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
197	[BUG]  [BUGGY]  int  LFH_LEN  =  this.zipEncoding.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  this.zipEncoding.getLength();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  this.zipEncoding.getLength();	  int    LFH_LEN    =    zipEncoding.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
198	[BUG]  [BUGGY]  int  LFH_LEN  =  fileNameLen.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  fileNameLen.getLength();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  fileNameLen.getLength();	  int    LFH_LEN    =    zipEncoding.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
199	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  zipEncoding.equals(entryEncoding))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  zipEncoding.equals(entryEncoding))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  zipEncoding.equals(entryEncoding))  {	  if(zipEncoding    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
200	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  zipEncoding.length()  ==  LFH_LEN)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  zipEncoding.length()  ==  LFH_LEN)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  zipEncoding.length()  ==  LFH_LEN)  {	  if(zipEncoding    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
201	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  zipEncoding.length()  ==  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  zipEncoding.length()  ==  0)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  zipEncoding.length()  ==  0)  {	  if(zipEncoding    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
202	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null)  {	  if(zipEncoding    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
203	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
204	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasEFS)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
205	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasEFS)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
206	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_LEN))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
207	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  close)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  close)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  close)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
208	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  close)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  close)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  close)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
209	[BUG]  [BUGGY]  if(zipArchiveEntry!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipArchiveEntry!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipArchiveEntry!=  null)  {	  if(zipArchiveEntry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
210	[BUG]  [BUGGY]  if(zipArchiveEntry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipArchiveEntry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipArchiveEntry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(zipArchiveEntry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
211	[BUG]  [BUGGY]  if(this.zipArchiveEntry  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.zipArchiveEntry  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.zipArchiveEntry  ==  null)  {	  if(zipArchiveEntry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
212	[BUG]  [BUGGY]  if(!isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!isEnabled(ZipLong.CFH_LEN))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
213	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN  ||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN  ||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN  ||  isEnabled(ZipLong.CFH_LEN))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
214	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
215	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
216	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN  ||  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN  ||  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN  ||  isEnabled(ZipLong.CFH_SIG))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
217	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CLIENT_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CLIENT_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CLIENT_SIG))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
218	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.FLOAT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.FLOAT))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
219	[BUG]  [BUGGY]  int  LFH_LEN  =  entryEncoding.getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  entryEncoding.getLongValue();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  entryEncoding.getLongValue();	  int    LFH_LEN    =    zipEncoding.getLongValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
220	[BUG]  [BUGGY]  int  LFH_LEN  =  this.entryEncoding.getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  this.entryEncoding.getLongValue();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  this.entryEncoding.getLongValue();	  int    LFH_LEN    =    zipEncoding.getLongValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
221	[BUG]  [BUGGY]  int  LFH_LEN  =  this.zipEncoding.getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  this.zipEncoding.getLongValue();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  this.zipEncoding.getLongValue();	  int    LFH_LEN    =    zipEncoding.getLongValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
222	[BUG]  [BUGGY]  int  LFH_LEN  =  zipEncoding.getLongValue()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  zipEncoding.getLongValue()  +  1;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  zipEncoding.getLongValue()  +  1;	  int    LFH_LEN    =    zipEncoding.getLongValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
223	[BUG]  [BUGGY]  int  LFH_LEN  =  getZipEncoding().getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getZipEncoding().getLongValue();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getZipEncoding().getLongValue();	  int    LFH_LEN    =    zipEncoding.getLongValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
224	[BUG]  [BUGGY]  int  LFH_LEN  =  fileNameLen.getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  fileNameLen.getLongValue();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  fileNameLen.getLongValue();	  int    LFH_LEN    =    zipEncoding.getLongValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
225	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullLength();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullLength();	  int    LFH_LEN    =    getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
226	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullSize()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullSize()  +  1;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullSize()  +  1;	  int    LFH_LEN    =    getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
227	[BUG]  [BUGGY]  int  LFH_LEN  =  getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getLongValue();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getLongValue();	  int    LFH_LEN    =    getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
228	[BUG]  [BUGGY]  int  LFH_LEN  =  getLongSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getLongSize();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getLongSize();	  int    LFH_LEN    =    getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
229	[BUG]  [BUGGY]  if(entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(entryEncoding!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
230	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(entryEncoding!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
231	[BUG]  [BUGGY]  if(entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(entryEncoding!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
232	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(entryEncoding!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
233	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
234	[BUG]  [BUGGY]  if(isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
235	[BUG]  [BUGGY]  if(current  ==  null  &&  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
236	[BUG]  [BUGGY]  if(current!=  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
237	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
238	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
239	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
240	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
241	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  close)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  close)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  close)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
242	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  containsEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  containsEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  containsEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
243	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
244	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {	  if(current!=    null    ||    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
245	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
246	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
247	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
248	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
249	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
250	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
251	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
252	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
253	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
254	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
255	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
256	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
257	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
258	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
259	[BUG]  [BUGGY]  if(!closed  &&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  &&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  &&  hasDataDescriptor)  {	  if(!closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
260	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(!closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
261	[BUG]  [BUGGY]  if(!closed  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  ||  hasDataDescriptor)  {	  if(!closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
262	[BUG]  [BUGGY]  if  (!closed  ||  hitCentralDirectory  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!closed  ||  hitCentralDirectory  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!closed  ||  hitCentralDirectory  ==  null)  {	  if    (closed    ||    hitCentralDirectory    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
263	[BUG]  [BUGGY]  if(!closed  &&  hitCentralDirectory  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  &&  hitCentralDirectory  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  &&  hitCentralDirectory  ==  null)  {	  if    (closed    ||    hitCentralDirectory    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
264	[BUG]  [BUGGY]  if(current  ==  null  ||  isEntry())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEntry())  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEntry())  {	  if(current    ==    null    ||    hasdataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
265	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isDirectory())  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isDirectory())  {	  if(current    ==    null    ||    hasdataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
266	[BUG]  [BUGGY]  int  LFH_LEN  =  getFileNameLen()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFileNameLen()  +  1;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFileNameLen()  +  1;	  int    LFH_LEN    =    getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
267	[BUG]  [BUGGY]  int  LFH_LEN  =  getFileNameLen(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFileNameLen(0);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFileNameLen(0);	  int    LFH_LEN    =    getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
268	[BUG]  [BUGGY]  int  LFH_LEN  =  getFileNameLen(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFileNameLen(source);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFileNameLen(source);	  int    LFH_LEN    =    getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
269	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullNameLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullNameLen();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullNameLen();	  int    LFH_LEN    =    getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
270	[BUG]  [BUGGY]  int  LFH_LEN  =  getFileNameLen(1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFileNameLen(1);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFileNameLen(1);	  int    LFH_LEN    =    getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
271	[BUG]  [BUGGY]  if(current  ==  null  ||  containsFileExtraFields  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  containsFileExtraFields  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  containsFileExtraFields  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    containsFileExtraFields)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
272	[BUG]  [BUGGY]  if(current  ==  null  ||  containsFileExtraFields  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  containsFileExtraFields  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  containsFileExtraFields  ||  hasDataDescriptor)  {	  if(current    ==    null    ||    containsFileExtraFields)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
273	[BUG]  [BUGGY]  if(current!=  null  ||  containsFileExtraFields)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  containsFileExtraFields)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  containsFileExtraFields)  {	  if(current    ==    null    ||    containsFileExtraFields)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
274	[BUG]  [BUGGY]  if(current  ==  null  ||  containsFileExtraFields  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  containsFileExtraFields  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  containsFileExtraFields  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    containsFileExtraFields)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
275	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(getNextZipEntry()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
276	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()  ==  null  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()  ==  null  ||  hasDataDescriptor)  {	  if(getNextZipEntry()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
277	[BUG]  [BUGGY]  if(this.getNextZipEntry()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.getNextZipEntry()  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.getNextZipEntry()  ==  null)  {	  if(getNextZipEntry()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
278	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(getNextZipEntry()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
279	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(getNextZipEntry()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
280	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(entryEncoding    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
281	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {	  if(entryEncoding    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
282	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(entryEncoding    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
283	[BUG]  [BUGGY]  if(this.entryEncoding!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entryEncoding!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
284	[BUG]  [BUGGY]  if(zipEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entryEncoding!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
285	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
286	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
287	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
288	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
289	[BUG]  [BUGGY]  if(in  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(in  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(in  ==  null)  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
290	[BUG]  [BUGGY]  if(in!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(in!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(in!=  null)  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
291	[BUG]  [BUGGY]  if(!closed  ||  inputStream  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  ||  inputStream  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  ||  inputStream  ==  null)  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
292	[BUG]  [BUGGY]  if(!closed  ||  outputStream  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  ||  outputStream  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  ||  outputStream  ==  null)  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
293	[BUG]  [BUGGY]  if(outputStream!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(outputStream!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(outputStream!=  null)  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
294	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(current    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
295	[BUG]  [BUGGY]  if(getNextZipEntry()!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(getNextZipEntry()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
296	[BUG]  [BUGGY]  if(this.getNextZipEntry()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.getNextZipEntry()!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.getNextZipEntry()!=  null)  {	  if(getNextZipEntry()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
297	[BUG]  [BUGGY]  if(closed  ||  getNextZipEntry()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(closed  ||  getNextZipEntry()!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(closed  ||  getNextZipEntry()!=  null)  {	  if(getNextZipEntry()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
298	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getInflater(source);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inflater  =  getInflater(source);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
299	[BUG]  [BUGGY]  Inflater  inflater  =  getOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getOutputFile();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inflater  =  getOutputFile();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
300	[BUG]  [BUGGY]  Inflater  inflater  =  this.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  this.getInflater();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inflater  =  this.getInflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
301	[BUG]  [BUGGY]  Inflater  inflater  =  getNextInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getNextInflater();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inflater  =  getNextInflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
302	[BUG]  [BUGGY]  Inflater  inflater  =  getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getNextEntry();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inflater  =  getNextEntry();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
303	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
304	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
305	[BUG]  [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
306	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
307	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  throw  new  IllegalStateException( " ");  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
308	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
309	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  if(current  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  if(current  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getZipEntry();  if(current  ==  null)  {  throw  new  IllegalStateException( " ");  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
310	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
311	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasEFS)  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
312	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength()  +  1;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedLength()  +  1;	  int    LFH_LEN    =    getFullyQuotedLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
313	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength()  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength()  *  2;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedLength()  *  2;	  int    LFH_LEN    =    getFullyQuotedLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
314	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength()  *  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength()  *  4;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedLength()  *  4;	  int    LFH_LEN    =    getFullyQuotedLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
315	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength()  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength()  +  2;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedLength()  +  2;	  int    LFH_LEN    =    getFullyQuotedLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
316	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength()  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength()  +  4;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedLength()  +  4;	  int    LFH_LEN    =    getFullyQuotedLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
317	[BUG]  [BUGGY]  if(current!=  null  ||  current.getKey()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  current.getKey()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  current.getKey()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getKey()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
318	[BUG]  [BUGGY]  if(current  ==  null  &&  current.getKey()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  current.getKey()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  current.getKey()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getKey()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
319	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  current.getKey()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  current.getKey()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  current.getKey()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getKey()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
320	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getCurrentZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getCurrentZipEntry();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getCurrentZipEntry();	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
321	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getZipEntry();	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
322	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(null);	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
323	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(false);	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
324	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(true);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(true);	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
325	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  ||  isEnabled(ZipLong.CFH_LEN))  {	  if(entryEncoding!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
326	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {	  if(entryEncoding!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
327	[BUG]  [BUGGY]  if(entryEncoding  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(entryEncoding!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
328	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {	  if(entryEncoding!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
329	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {	  if(entryEncoding!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
330	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {	  if(entryEncoding!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
331	[BUG]  [BUGGY]  if(current!=  null  ||  current.getValue()!=  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  current.getValue()!=  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  current.getValue()!=  ZipEncoding.UTF8)  {	  if(current    ==    null    &&    current.getValue()!=    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
332	[BUG]  [BUGGY]  if(current!=  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {	  if(current    ==    null    &&    current.getValue()!=    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
333	[BUG]  [BUGGY]  if(entryEncoding  ==  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {	  if(current    ==    null    &&    current.getValue()!=    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
334	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {	  if(current    ==    null    &&    current.getValue()!=    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
335	[BUG]  [BUGGY]  if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentEntry  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentEntry  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentEntry  ==  null)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
336	[BUG]  [BUGGY]  if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentLength  ==  LFH_LEN)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentLength  ==  LFH_LEN)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentLength  ==  LFH_LEN)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
337	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  open)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  open)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  open)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
338	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
339	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
340	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
341	[BUG]  [BUGGY]  if(hasDataDescriptor!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentLength  ==  LFH_LEN)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentLength  ==  LFH_LEN)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentLength  ==  LFH_LEN)  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
342	[BUG]  [BUGGY]  if(hasDataDescriptor!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentDirectory  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentDirectory  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  currentDirectory  ==  null)  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
343	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getValue()  <  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  current.getValue()  <  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getValue()  <  ZipEncoding.UTF8)  {	  if(current!=    null    ||    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
344	[BUG]  [BUGGY]  if(entry  ==  null  ||  entry.length()  ==  LFH_LEN)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  entry.length()  ==  LFH_LEN)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  entry.length()  ==  LFH_LEN)  {	  if(entry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
345	[BUG]  [BUGGY]  if(isEnabled(Feature.AUTO_CLOSE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.AUTO_CLOSE_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.AUTO_CLOSE_SIG))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
346	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
347	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SIG))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
348	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
349	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
350	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
351	[BUG]  [BUGGY]  if(hasEFS  ||  current  ==  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasEFS  ||  current  ==  null  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasEFS  ||  current  ==  null  ||  hasDataDescriptor)  {	  if(current    ==    null    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
352	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.US_ASCII)  {	  if(zipEncoding    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
353	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  ZipEncoding.US_ASCII)  {	  if(zipEncoding    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
354	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.US_OBJECT)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.US_OBJECT)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.US_OBJECT)  {	  if(zipEncoding    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
355	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.US_ASCII  ||  entryEncoding  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.US_ASCII  ||  entryEncoding  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.US_ASCII  ||  entryEncoding  ==  null)  {	  if(zipEncoding    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
356	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyLen()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyLen()  +  1;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyLen()  +  1;	  int    LFH_LEN    =    getFullyLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
357	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyLen(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyLen(source);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyLen(source);	  int    LFH_LEN    =    getFullyLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
358	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyLen(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyLen(0);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyLen(0);	  int    LFH_LEN    =    getFullyLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
359	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyLen(inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyLen(inputStream);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyLen(inputStream);	  int    LFH_LEN    =    getFullyLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
360	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyLen(1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyLen(1);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyLen(1);	  int    LFH_LEN    =    getFullyLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
361	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  null;  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  null;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
362	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(source);  if(current!=  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(source);  if(current!=  null)  {  return  null;  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(source);  if(current!=  null)  {  return  null;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
363	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
364	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
365	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
366	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
367	[BUG]  [BUGGY]  if(entryEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
368	[BUG]  [BUGGY]  if(current!=  null  ||  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  current.getValue()  ==  ZipEncoding.US_ASCII)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
369	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.US_ASCII)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
370	[BUG]  [BUGGY]  if(current  ==  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
371	[BUG]  [BUGGY]  if(current  ==  null  &&  current.getValue()!=  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  current.getValue()!=  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  current.getValue()!=  ZipEncoding.US_ASCII)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
372	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
373	[BUG]  [BUGGY]  if(current!=  null  &&  current.getValue()  <  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  current.getValue()  <  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  current.getValue()  <  ZipEncoding.US_ASCII)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
374	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FILES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
375	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FILES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FILES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FILES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
376	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
377	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
378	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.SHORT_DESCRIPTOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.SHORT_DESCRIPTOR))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.SHORT_DESCRIPTOR))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
379	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(entryEncoding    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
380	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {	  if(entryEncoding!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
381	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  +  4;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().length  +  4;	  int    LFH_LEN    =    getFullyQuotedFields().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
382	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  *  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length  *  4;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().length  *  4;	  int    LFH_LEN    =    getFullyQuotedFields().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
383	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
384	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_LIST))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_LIST))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_LIST))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
385	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_INTS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_INTS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_INTS))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
386	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
387	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(entry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
388	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(entry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
389	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.DEFAULT  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.DEFAULT  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.DEFAULT  ||  hasDataDescriptor)  {	  if(zipEncoding    ==    ZipEncoding.DEFAULT)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
390	[BUG]  [BUGGY]  if(zipEncoding  ==  ZipEncoding.DEFAULT  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  ZipEncoding.DEFAULT  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  ZipEncoding.DEFAULT  ||  hasDataDescriptor)  {	  if(zipEncoding    ==    ZipEncoding.DEFAULT)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
391	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
392	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
393	[BUG]  [BUGGY]  if(zipEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entryEncoding!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
394	[BUG]  [BUGGY]  if  (!hasDataDescriptor  &&  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!hasDataDescriptor  &&  current  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!hasDataDescriptor  &&  current  ==  null)  {	  if    (closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
395	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
396	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ".);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ".);  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
397	[BUG]  [BUGGY]  int  LFH_LEN  =  source.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  source.getLength();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  source.getLength();	  int    LFH_LEN    =    zipEncoding.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
398	[BUG]  [BUGGY]  Inflater  inf  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextArchiveEntry();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextArchiveEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
399	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry().getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextZipEntry().getInputStream();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextZipEntry().getInputStream();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
400	[BUG]  [BUGGY]  Inflater  inf  =  getNextInputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextInputFile();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextInputFile();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
401	[BUG]  [BUGGY]  Inflater  inf  =  getNextDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextDirectory();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextDirectory();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
402	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
403	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasDataDescriptor  &&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasDataDescriptor  &&  hasEFS)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
404	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
405	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasDataDescriptor  ||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasDataDescriptor  ||  closed)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
406	[BUG]  [BUGGY]  if(!hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasDataDescriptor)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
407	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextFileEntry();	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
408	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry().getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry().getValue();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry().getValue();	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
409	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(0);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(0);	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
410	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_ERROR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
411	[BUG]  [BUGGY]  if(current  >=  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  >=  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  >=  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(current    ==    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
412	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  &&  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  &&  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasDataDescriptor  &&  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
413	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
414	[BUG]  [BUGGY]  if(current  ==  null  ||  hasdataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasdataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasdataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    hasdataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
415	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
416	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
417	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(getNextZipEntry()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
418	[BUG]  [BUGGY]  if(current!=  null  &&  current.getKey()  ==  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  current.getKey()  ==  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  current.getKey()  ==  ZipEncoding.US_ASCII)  {	  if(current!=    null    &&    current.getKey()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
419	[BUG]  [BUGGY]  int  LFH_LEN  =  getFileLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFileLen();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFileLen();	  int    LFH_LEN    =    getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
420	[BUG]  [BUGGY]  int  LFH_LEN  =  getFileNameLen(2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFileNameLen(2);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFileNameLen(2);	  int    LFH_LEN    =    getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
421	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasDataDescriptor  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
422	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
423	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.BLOCK_SIZE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.BLOCK_SIZE))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
424	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(!closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
425	[BUG]  [BUGGY]  if(hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor)  {	  if(!closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
426	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
427	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
428	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  isEnabled(Feature.SHORT_DESCRIPTOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  isEnabled(Feature.SHORT_DESCRIPTOR))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  isEnabled(Feature.SHORT_DESCRIPTOR))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
429	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
430	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.NUMBER_INT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.NUMBER_INT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.NUMBER_INT))  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
431	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CENTER_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CENTER_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.CENTER_NAME))  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
432	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.FOR)||  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.FOR)||  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.FOR)||  isEnabled(ZipLong.CFH_SIG))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
433	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  null;  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  null;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
434	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  null;  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  null;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
435	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
436	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
437	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
438	[BUG]  [BUGGY]  if(current  >=  null  ||  current.getValue()!=  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  >=  null  ||  current.getValue()!=  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  >=  null  ||  current.getValue()!=  ZipEncoding.UTF8)  {	  if(current    ==    null    &&    current.getValue()!=    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
439	[BUG]  [BUGGY]  if  (hasDataDescriptor  ||  hasEFS  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (hasDataDescriptor  ||  hasEFS  ||  current  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (hasDataDescriptor  ||  hasEFS  ||  current  ==  null)  {	  if    (hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
440	[BUG]  [BUGGY]  if  (hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if    (hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
441	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(current!=    null    &&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
442	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getValue()  >=  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  current.getValue()  >=  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getValue()  >=  ZipEncoding.UTF8)  {	  if(current!=    null    ||    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
443	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
444	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  containsFileExtraFields)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  containsFileExtraFields)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  containsFileExtraFields)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
445	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
446	[BUG]  [BUGGY]  if(entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
447	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
448	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_FAILURE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_FAILURE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_FAILURE))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
449	[BUG]  [BUGGY]  if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
450	[BUG]  [BUGGY]  if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
451	[BUG]  [BUGGY]  if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
452	[BUG]  [BUGGY]  if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_FILES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(outputStream  ==  null  ||  isEnabled(Feature.QUOTE_FILES))  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
453	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  new  ZipArchiveEntry();  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
454	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
455	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(0);  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(0);  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(0);  if(current!=  null)  {  return  new  ZipArchiveEntry();  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
456	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
457	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
458	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.INTEGER_QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.INTEGER_QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.INTEGER_QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
459	[BUG]  [BUGGY]  if(closed  ||  zipArchiveEntry  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(closed  ||  zipArchiveEntry  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(closed  ||  zipArchiveEntry  ==  null)  {	  if(zipArchiveEntry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
460	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
461	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasFileDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasFileDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasFileDescriptor)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
462	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasBDDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasBDDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasBDDescriptor)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
463	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
464	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMBERS))  {	  if(current    ==    null    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
465	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NAME))  {	  if(current    ==    null    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
466	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasFileDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasFileDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasFileDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
467	[BUG]  [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  currentLength!=  LFH_LEN)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  currentLength!=  LFH_LEN)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  currentLength!=  LFH_LEN)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
468	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasFileExtraFields)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasFileExtraFields)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasFileExtraFields)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
469	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
470	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullLen();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullLen();	  int    LFH_LEN    =    getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
471	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullPurposeFlag();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullPurposeFlag();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullPurposeFlag();	  int    LFH_LEN    =    getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
472	[BUG]  [BUGGY]  int  LFH_LEN  =  getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getLength();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getLength();	  int    LFH_LEN    =    getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
473	[BUG]  [BUGGY]  if(getNextZipEntry()!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(getNextZipEntry()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
474	[BUG]  [BUGGY]  if(getNextZipFile()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipFile()!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipFile()!=  null)  {	  if(getNextZipEntry()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
475	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.US_CLOSE)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.US_CLOSE)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.US_CLOSE)  {	  if(zipEncoding    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
476	[BUG]  [BUGGY]  if(zipEncoding!=  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding!=  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  ZipEncoding.UTF8)  {	  if(zipEncoding    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
477	[BUG]  [BUGGY]  if(entryEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
478	[BUG]  [BUGGY]  if(current  >=  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  >=  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  >=  null  ||  isEnabled(ZipLong.CFH_LEN))  {	  if(current!=    null    ||    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
479	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {	  if(current!=    null    ||    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
480	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(current!=    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
481	[BUG]  [BUGGY]  if(zipEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(zipEncoding    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
482	[BUG]  [BUGGY]  if(zipEncoding  ==  null  ||  zipEncoding.equals(entryEncoding))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  ||  zipEncoding.equals(entryEncoding))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  ||  zipEncoding.equals(entryEncoding))  {	  if(zipEncoding    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
483	[BUG]  [BUGGY]  if(zipEncoding  ==  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  ||  hasDataDescriptor)  {	  if(zipEncoding    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
484	[BUG]  [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  currentLength!=  LFH_LEN)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  currentLength!=  LFH_LEN)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  currentLength!=  LFH_LEN)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
485	[BUG]  [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  currentLength  ==  LFH_LEN)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  currentLength  ==  LFH_LEN)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  currentLength  ==  LFH_LEN)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
486	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyLen(length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyLen(length);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyLen(length);	  int    LFH_LEN    =    getFullyLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
487	[BUG]  [BUGGY]  if(!closed  &&  current!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  &&  current!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  &&  current!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(current    ==    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
488	[BUG]  [BUGGY]  if  (!hasDataDescriptor  &&  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!hasDataDescriptor  &&  current!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!hasDataDescriptor  &&  current!=  null)  {	  if    (!closed    &&    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
489	[BUG]  [BUGGY]  if(this.entry!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entry!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entry!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
490	[BUG]  [BUGGY]  Inflater  inf  =  getInflater().getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getInflater().getInputStream();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getInflater().getInputStream();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
491	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
492	[BUG]  [BUGGY]  if(this.current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
493	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_BYTE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_BYTE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_BYTE))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
494	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARGUMENT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARGUMENT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_ARGUMENT))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
495	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  close)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  close)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS  ||  close)  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
496	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS  ||  closed)  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
497	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
498	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
499	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
500	[BUG]  [BUGGY]  if  (!hasDataDescriptor  ||  hitCentralDirectory  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!hasDataDescriptor  ||  hitCentralDirectory  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!hasDataDescriptor  ||  hitCentralDirectory  ==  null)  {	  if    (closed    ||    hitCentralDirectory    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
501	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
502	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasdataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasdataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasdataDescriptor)  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
503	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileExtraFields)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileExtraFields)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileExtraFields)  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
504	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasECS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasECS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasECS)  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
505	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
506	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
507	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
508	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
509	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
510	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
511	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().size()  *  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().size()  *  4;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().size()  *  4;	  int    LFH_LEN    =    getFullyQuotedFields().size();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
512	[BUG]  [BUGGY]  if  (!hasDataDescriptor  ||  hitCentralDirectory!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!hasDataDescriptor  ||  hitCentralDirectory!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!hasDataDescriptor  ||  hitCentralDirectory!=  null)  {	  if    (closed    ||    hitCentralDirectory!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
513	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getNextZipEntry();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inflater  =  getNextZipEntry();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
514	[BUG]  [BUGGY]  Inflater  inflater  =  getOutflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getOutflater();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inflater  =  getOutflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
515	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  getInflater(inputStream);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inflater  =  getInflater(inputStream);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
516	[BUG]  [BUGGY]  if(outputStream  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(outputStream  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(outputStream  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
517	[BUG]  [BUGGY]  if(outputStream  ==  null  ||  inputStream!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(outputStream  ==  null  ||  inputStream!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(outputStream  ==  null  ||  inputStream!=  null)  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
518	[BUG]  [BUGGY]  if(outputStream  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(outputStream  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(outputStream  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG))  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
519	[BUG]  [BUGGY]  if(outputStream  ==  null  ||  inputStream.length  ==  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(outputStream  ==  null  ||  inputStream.length  ==  0)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(outputStream  ==  null  ||  inputStream.length  ==  0)  {	  if(outputStream    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
520	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
521	[BUG]  [BUGGY]  int  LFH_LEN  =  getFileNameLen(fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFileNameLen(fileNameLen);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFileNameLen(fileNameLen);	  int    LFH_LEN    =    getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
522	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyLoadedFields().size();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyLoadedFields().size();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyLoadedFields().size();	  int    LFH_LEN    =    getFullyQuotedFields().size();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
523	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
524	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
525	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  isEnabled(Feature.WRITE_FIELD_FILENAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  isEnabled(Feature.WRITE_FIELD_FILENAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME)||  isEnabled(Feature.WRITE_FIELD_FILENAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILENAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
526	[BUG]  [BUGGY]  if(current  ==  null  ||  containsFileExtraFields  ||  isEnabled(Feature.QUOTE_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  containsFileExtraFields  ||  isEnabled(Feature.QUOTE_FILES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  containsFileExtraFields  ||  isEnabled(Feature.QUOTE_FILES))  {	  if(current    ==    null    ||    containsFileExtraFields)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
527	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
528	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG)||  closed)  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
529	[BUG]  [BUGGY]  if(entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding.getValue()  ==  ZipEncoding.UTF8)  {	  if(current    ==    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
530	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  closed)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
531	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
532	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
533	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.WARNING_AS_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.WARNING_AS_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.WARNING_AS_NULL_OBJECT))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
534	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  hasDataDescriptor)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
535	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  hasEFS)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
536	[BUG]  [BUGGY]  if(zipEncoding  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    ||    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
537	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.DEFAULT)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.DEFAULT)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.DEFAULT)  {	  if(current    ==    null    ||    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
538	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.BASE_SEPARATOR)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.BASE_SEPARATOR)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.BASE_SEPARATOR)  {	  if(current    ==    null    ||    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
539	[BUG]  [BUGGY]  if(zipEncoding  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(entryEncoding!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
540	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {	  if(entryEncoding!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
541	[BUG]  [BUGGY]  if(zipEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(entryEncoding!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
542	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LFH_LEN))  {	  if(entryEncoding!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
543	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN)||  closed)  {	  if(current    ==    null    ||    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
544	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  entryEncoding.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  entryEncoding.equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  entryEncoding.equals(ZipLong.CFH_LEN))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
545	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
546	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FILES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_FILES))  {	  if(!closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
547	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.LP))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.LP))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.LP))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
548	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)||  isEnabled(ZipLong.CFH_LEN))  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
549	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(ZipLong.FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
550	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)||  isEnabled(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)||  isEnabled(ZipLong.LFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME)||  isEnabled(ZipLong.LFH_LEN))  {	  if(current    ==    null    ||    isEnabled(ZipLong.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
551	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)||  isDirectory())  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)||  isDirectory())  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
552	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)||  isDirectoryExtraFields)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)||  isDirectoryExtraFields)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES)||  isDirectoryExtraFields)  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
553	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
554	[BUG]  [BUGGY]  if(!hasEFS  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasEFS  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasEFS  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
555	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_BIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_BIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_BIG))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
556	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_UNKNOWN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_UNKNOWN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_UNKNOWN))  {	  if(isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
557	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(current    ==    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
558	[BUG]  [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
559	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
560	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
561	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
562	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  closed)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
563	[BUG]  [BUGGY]  if(this.entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(this.entryEncoding!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
564	[BUG]  [BUGGY]  Integer  LFH_LEN  =  getFullyQuotedFields().length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Integer  LFH_LEN  =  getFullyQuotedFields().length;  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Integer  LFH_LEN  =  getFullyQuotedFields().length;	  int    LFH_LEN    =    getFullyQuotedFields().length;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
565	[BUG]  [BUGGY]  Inflater  inf  =  getNextLongEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inf  =  getNextLongEntry();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextLongEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
566	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.WRITE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.WRITE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.WRITE_FIELD_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
567	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    closed)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
568	[BUG]  [BUGGY]  if(zipArchiveEntry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipArchiveEntry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipArchiveEntry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LEN))  {	  if(zipArchiveEntry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
569	[BUG]  [BUGGY]  if(zipArchiveEntry  ==  null  ||  close)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipArchiveEntry  ==  null  ||  close)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipArchiveEntry  ==  null  ||  close)  {	  if(zipArchiveEntry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
570	[BUG]  [BUGGY]  if(zipArchiveEntry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipArchiveEntry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipArchiveEntry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_SIG))  {	  if(zipArchiveEntry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
571	[BUG]  [BUGGY]  if(zipArchiveEntry  ==  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipArchiveEntry  ==  null  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipArchiveEntry  ==  null  ||  hasDataDescriptor)  {	  if(zipArchiveEntry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
572	[BUG]  [BUGGY]  if(zipArchiveEntry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LONG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipArchiveEntry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LONG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipArchiveEntry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LONG))  {	  if(zipArchiveEntry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
573	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
574	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
575	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
576	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
577	[BUG]  [BUGGY]  if(current!=  null  &&  current.getType()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  current.getType()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  current.getType()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getKey()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
578	[BUG]  [BUGGY]  if(getNextZipEntry()!=  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()!=  null  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()!=  null  ||  hasDataDescriptor)  {	  if(getNextZipEntry()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
579	[BUG]  [BUGGY]  if(getNextZipEntry()!=  null  ||  getNextDirectory().equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()!=  null  ||  getNextDirectory().equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()!=  null  ||  getNextDirectory().equals(ZipLong.CFH_LEN))  {	  if(getNextZipEntry()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
580	[BUG]  [BUGGY]  if(getNextZipEntry()!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(getNextZipEntry()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
581	[BUG]  [BUGGY]  if  (!closed  &&  current!=  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (!closed  &&  current!=  null  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!closed  &&  current!=  null  ||  hasDataDescriptor)  {	  if    (!closed    &&    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
582	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
583	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
584	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)||  closed)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FILES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
585	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)||  isEnabled(Feature.DEFAULT_TIME_OUTPUT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)||  isEnabled(Feature.DEFAULT_TIME_OUTPUT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES)||  isEnabled(Feature.DEFAULT_TIME_OUTPUT))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FILES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
586	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  zipEncoding.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  zipEncoding.equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  zipEncoding.equals(ZipLong.CFH_LEN))  {	  if(entryEncoding    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
587	[BUG]  [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
588	[BUG]  [BUGGY]  if(hasDataDescriptor  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ==  null)  {	  if(current    ==    null    &&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
589	[BUG]  [BUGGY]  if(current!=  null  &&  hasdataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  hasdataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  hasdataDescriptor)  {	  if(current    ==    null    &&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
590	[BUG]  [BUGGY]  if(current  >=  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  >=  null  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  >=  null  ||  hasDataDescriptor)  {	  if(current    ==    null    &&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
591	[BUG]  [BUGGY]  if(entry  ==  null  ||  entryEncoding.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  entryEncoding.equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  entryEncoding.equals(ZipLong.CFH_LEN))  {	  if(entry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
592	[BUG]  [BUGGY]  if(entry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LEN))  {	  if(entry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
593	[BUG]  [BUGGY]  if(entry  ==  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  hasDataDescriptor)  {	  if(entry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
594	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {	  if(entry    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
595	[BUG]  [BUGGY]  if(zipEncoding  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LEN))  {	  if(zipEncoding    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
596	[BUG]  [BUGGY]  if(zipEncoding  ==  null  ||  entryEncoding.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  ||  entryEncoding.equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  ||  entryEncoding.equals(ZipLong.CFH_LEN))  {	  if(zipEncoding    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
597	[BUG]  [BUGGY]  if(zipEncoding  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LONG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LONG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  ||  zipEncoding.equals(ZipLong.CFH_LONG))  {	  if(zipEncoding    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
598	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  int  LFH_LEN  =  getFullyQuotedLen();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedLen();	  int    LFH_LEN    =    getFullyQuotedLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
599	[BUG]  [BUGGY]  if(current!=  null  &&  current.getKey()  ==  ZipEncoding.BLOCK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  current.getKey()  ==  ZipEncoding.BLOCK)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  current.getKey()  ==  ZipEncoding.BLOCK)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.BLOCK)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
600	[BUG]  [BUGGY]  if(current!=  null  &&  current.getValue()  ==  ZipEncoding.CRC32)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  current.getValue()  ==  ZipEncoding.CRC32)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  current.getValue()  ==  ZipEncoding.CRC32)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.BLOCK)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
601	[BUG]  [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
602	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {	  if(entryEncoding!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
603	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  closed)  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
604	[BUG]  [BUGGY]  if(zipEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
605	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.DEFAULT_LOAD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.DEFAULT_LOAD_FILE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.DEFAULT_LOAD_FILE))  {	  if(entry    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
606	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
607	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
608	[BUG]  [BUGGY]  if(hasDataDescriptor!=  Feature.QUOTE_FIELD_NAME  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor!=  Feature.QUOTE_FIELD_NAME  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor!=  Feature.QUOTE_FIELD_NAME  ||  hasDataDescriptor)  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
609	[BUG]  [BUGGY]  if(hasDataDescriptor!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  currentDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  currentDirectory)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  currentDirectory)  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
610	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  ||  getNextDirectory()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()  ==  null  ||  getNextDirectory()!=  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()  ==  null  ||  getNextDirectory()!=  null)  {	  if(getNextZipEntry()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
611	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  ||  getNextDirectory().equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(getNextZipEntry()  ==  null  ||  getNextDirectory().equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()  ==  null  ||  getNextDirectory().equals(ZipLong.CFH_LEN))  {	  if(getNextZipEntry()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
612	[BUG]  [BUGGY]  if(zipEncoding!=  null  &&  zipEncoding.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding!=  null  &&  zipEncoding.equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  null  &&  zipEncoding.equals(ZipLong.CFH_LEN))  {	  if(zipEncoding!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
613	[BUG]  [BUGGY]  if(zipEncoding!=  null  &&  entryEncoding.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding!=  null  &&  entryEncoding.equals(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  null  &&  entryEncoding.equals(ZipLong.CFH_LEN))  {	  if(zipEncoding!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
614	[BUG]  [BUGGY]  if(zipEncoding!=  null  &&  zipEncoding.length  >  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding!=  null  &&  zipEncoding.length  >  0)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  null  &&  zipEncoding.length  >  0)  {	  if(zipEncoding!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
615	[BUG]  [BUGGY]  if(zipEncoding!=  null  &&  zipEncoding.equals(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding!=  null  &&  zipEncoding.equals(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  null  &&  zipEncoding.equals(ZipLong.CFH_SIG))  {	  if(zipEncoding!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
616	[BUG]  [BUGGY]  if(zipEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(entryEncoding!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
617	[BUG]  [BUGGY]  if(zipEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(entryEncoding!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
618	[BUG]  [BUGGY]  if(current!=  null  &&  current.getValue()!=  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  current.getValue()!=  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  current.getValue()!=  ZipEncoding.US_ASCII)  {	  if(current    ==    null    &&    current.getValue()!=    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
619	[BUG]  [BUGGY]  if(this.current!=  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.current!=  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.current!=  null  ||  isEnabled(ZipLong.CFH_LEN))  {	  if(current!=    null    ||    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
620	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.USE_UNIcodeExtraFields))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.USE_UNIcodeExtraFields))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.USE_UNIcodeExtraFields))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
621	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_BUFFER_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_BUFFER_SIZE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_BUFFER_SIZE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
622	[BUG]  [BUGGY]  if(zipEncoding!=  ZipEncoding.DEFAULT)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding!=  ZipEncoding.DEFAULT)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  ZipEncoding.DEFAULT)  {	  if(zipEncoding    ==    ZipEncoding.DEFAULT)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
623	[BUG]  [BUGGY]  if(zipEncoding  ==  ZipEncoding.DEFAULT  ||  zipEncoding.equals(ZipEncoding.UTF8))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  ZipEncoding.DEFAULT  ||  zipEncoding.equals(ZipEncoding.UTF8))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  ZipEncoding.DEFAULT  ||  zipEncoding.equals(ZipEncoding.UTF8))  {	  if(zipEncoding    ==    ZipEncoding.DEFAULT)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
624	[BUG]  [BUGGY]  if(zipEncoding  ==  ZipEncoding.DEFAULT  ||  zipEncoding.equals(ZipEncoding.CRC32))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding  ==  ZipEncoding.DEFAULT  ||  zipEncoding.equals(ZipEncoding.CRC32))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  ZipEncoding.DEFAULT  ||  zipEncoding.equals(ZipEncoding.CRC32))  {	  if(zipEncoding    ==    ZipEncoding.DEFAULT)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
625	[BUG]  [BUGGY]  if(entryEncoding.equals(ZipEncoding.UTF8)&&  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding.equals(ZipEncoding.UTF8)&&  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding.equals(ZipEncoding.UTF8)&&  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(entryEncoding    ==    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
626	[BUG]  [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  null;  }  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  null;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
627	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
628	[BUG]  [BUGGY]  if(hasDataDescriptor  ==  Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ==  Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ==  Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
629	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  closed  ||  hitCentralDirectory  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasDataDescriptor  &&  closed  ||  hitCentralDirectory  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasDataDescriptor  &&  closed  ||  hitCentralDirectory  ==  null)  {	  if    (closed    ||    hitCentralDirectory    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
630	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
631	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES)||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES)||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES)||  isEnabled(ZipLong.CFH_LEN))  {	  if(current!=    null    &&    isEnabled(ZipLong.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
632	[BUG]  [BUGGY]  if(current!=  null  ||  hasdataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  hasdataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  hasdataDescriptor)  {	  if(current    ==    null    ||    hasdataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
633	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    hasdataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
634	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
635	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
636	[BUG]  [BUGGY]  if(current  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
637	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
638	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  isEnabled(Feature.WARNING_AS_NULL_VALUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  isEnabled(Feature.WARNING_AS_NULL_VALUE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE)||  isEnabled(Feature.WARNING_AS_NULL_VALUE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
639	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
640	[BUG]  [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  currentDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  currentDirectory)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  currentDirectory)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
641	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
642	[BUG]  [BUGGY]  if(this.entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
643	[BUG]  [BUGGY]  if(current  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
644	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)&&  isEnabled(ZipLong.CFH_SIG))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN)||    isEnabled(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
645	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
646	[BUG]  [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  currentLength  >  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  currentLength  >  0)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  currentLength  >  0)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
647	[BUG]  [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  currentLength  >  LFH_LEN)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  currentLength  >  LFH_LEN)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  currentLength  >  LFH_LEN)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
648	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasEFS)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
649	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
650	[BUG]  [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  currentLength  >  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  currentLength  >  0)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  currentLength  >  0)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
651	[BUG]  [BUGGY]  if  (hasDataDescriptor  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (hasDataDescriptor  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (hasDataDescriptor  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
652	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
653	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  closed  ||  hitCentralDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasDataDescriptor  &&  closed  ||  hitCentralDirectory)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasDataDescriptor  &&  closed  ||  hitCentralDirectory)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
654	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(hasDataDescriptor  ||  closed)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(hasDataDescriptor  ||  closed)  {	  if(closed    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
655	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(inflater);  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(inflater);	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
656	[BUG]  [BUGGY]  if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current!=    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
657	[BUG]  [BUGGY]  if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(current!=    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
658	[BUG]  [BUGGY]  if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FILES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FILES))  {	  if(current!=    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
659	[BUG]  [BUGGY]  if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.AUTO_CLOSE_FAILURE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.AUTO_CLOSE_FAILURE))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  hasEFS  ||  isEnabled(Feature.AUTO_CLOSE_FAILURE))  {	  if(current!=    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
660	[BUG]  [BUGGY]  if(this.entryEncoding  ==  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(this.entryEncoding  ==  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  ZipEncoding.US_ASCII)  {	  if(zipEncoding    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
661	[BUG]  [BUGGY]  if(zipEncoding!=  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(zipEncoding!=  ZipEncoding.US_ASCII)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  ZipEncoding.US_ASCII)  {	  if(zipEncoding    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
662	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncoding.USE_UNIcodeExtraFields)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(entryEncoding  ==  ZipEncoding.USE_UNIcodeExtraFields)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  ZipEncoding.USE_UNIcodeExtraFields)  {	  if(zipEncoding    ==    ZipEncoding.US_ASCII)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
663	[BUG]  [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
664	[BUG]  [BUGGY]  Inflater  inflater  =  createInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  Inflater  inflater  =  createInflater();  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inflater  =  createInflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
665	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FILES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(Feature.QUOTE_FILES))  {	  if(current!=    null    &&    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
666	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_ERROR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
667	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR,  closed))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR,  closed))  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR,  closed))  {	  if(current    ==    null    ||    isEnabled(Feature.AUTO_CLOSE_ERROR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
668	[BUG]  [BUGGY]  if  (closed  ||  currentDirectory  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }      [BUGGY]  if  (closed  ||  currentDirectory  ==  null)  {  [BUGGY]      closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (closed  ||  currentDirectory  ==  null)  {	  if    (closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
