bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  hasDataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasDataDescriptor)  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
2	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
3	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FILES))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
4	[BUG]  [BUGGY]  if  (closed  ||  hitCentralDirectory!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if  (closed  ||  hitCentralDirectory!=  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (closed  ||  hitCentralDirectory!=  null)  {	  if    (closed    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
5	[BUG]  [BUGGY]  if  (closed  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if  (closed  ||  current  ==  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (closed  ||  current  ==  null)  {	  if    (closed    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
6	[BUG]  [BUGGY]  if(current!=  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
7	[BUG]  [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
8	[BUG]  [BUGGY]  if(current  ==  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
9	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(entryEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
10	[BUG]  [BUGGY]  if(entryEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(entryEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  &&  current.getValue()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
11	[BUG]  [BUGGY]  if(current!=  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  current.getValue()  ==  ZipEncoding.BLOCK)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
12	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
13	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
14	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
15	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
16	[BUG]  [BUGGY]  if(entry  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(entry  ==  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
17	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
18	[BUG]  [BUGGY]  if(getNextZipEntry()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(getNextZipEntry()!=  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()!=  null)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
19	[BUG]  [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entry  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
20	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(getNextZipEntry()  ==  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(getNextZipEntry()  ==  null)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
21	[BUG]  [BUGGY]  Inflater  inf  =  getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  Inflater  inf  =  getInflater();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getInflater();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
22	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
23	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  Inflater  inf  =  getNextZipEntry();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inf  =  getNextZipEntry();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
24	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().length;  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().length;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
25	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  int  LFH_LEN  =  getFullyQuotedLength();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedLength();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
26	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().size();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  int  LFH_LEN  =  getFullyQuotedFields().size();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyQuotedFields().size();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
27	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  int  LFH_LEN  =  getFullSize();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullSize();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
28	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
29	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
30	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
31	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
32	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
33	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
34	[BUG]  [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
35	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.CFH_LEN))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
36	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(ZipLong.CFH_LEN))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
37	[BUG]  [BUGGY]  if(isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(isEnabled(ZipLong.CFH_LEN))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
38	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.SHORT))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
39	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.LP))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
40	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  hasEFS)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasEFS)  {	  if(current!=    null    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
41	[BUG]  [BUGGY]  if(current!=  null  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  ||  hasEFS)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  hasEFS)  {	  if(current!=    null    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
42	[BUG]  [BUGGY]  if(current  ==  null  &&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  &&  hasDataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  hasDataDescriptor)  {	  if(current!=    null    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
43	[BUG]  [BUGGY]  if(current!=  null  &&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  &&  hasDataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  hasDataDescriptor)  {	  if(current!=    null    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
44	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(ZipLong.CFH_LEN))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
45	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
46	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
47	[BUG]  [BUGGY]  if(current  ==  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  &&  current.getValue()!=  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
48	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
49	[BUG]  [BUGGY]  if  (hasDataDescriptor  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if  (hasDataDescriptor  ||  current  ==  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (hasDataDescriptor  ||  current  ==  null)  {	  if    (closed    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
50	[BUG]  [BUGGY]  if  (!closed  &&  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if  (!closed  &&  current!=  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (!closed  &&  current!=  null)  {	  if    (closed    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
51	[BUG]  [BUGGY]  if(zipArchiveEntry  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(zipArchiveEntry  ==  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipArchiveEntry  ==  null)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
52	[BUG]  [BUGGY]  if(outputStream  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(outputStream  ==  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(outputStream  ==  null)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
53	[BUG]  [BUGGY]  if(!closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(!closed)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(!closed)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
54	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
55	[BUG]  [BUGGY]  if(this.current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(this.current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
56	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  Inflater  inflater  =  getInflater();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	Inflater  inflater  =  getInflater();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
57	[BUG]  [BUGGY]  int  LFH_LEN  =  zipEncoding.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  int  LFH_LEN  =  zipEncoding.getLength();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  zipEncoding.getLength();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
58	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
59	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  null;  }  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  null;  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
60	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  new  ZipArchiveEntry();  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
61	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
62	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
63	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
64	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
65	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILENAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
66	[BUG]  [BUGGY]  if(current  ==  null  ||  hasdataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  hasdataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  hasdataDescriptor)  {	  if(current!=    null    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
67	[BUG]  [BUGGY]  int  LFH_LEN  =  getFullyLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  int  LFH_LEN  =  getFullyLen();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFullyLen();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
68	[BUG]  [BUGGY]  int  LFH_LEN  =  zipEncoding.getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  int  LFH_LEN  =  zipEncoding.getLongValue();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  zipEncoding.getLongValue();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
69	[BUG]  [BUGGY]  int  LFH_LEN  =  getFileNameLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  int  LFH_LEN  =  getFileNameLen();  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	int  LFH_LEN  =  getFileNameLen();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
70	[BUG]  [BUGGY]  if(zipEncoding  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(zipEncoding  ==  ZipEncoding.UTF8)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  ZipEncoding.UTF8)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
71	[BUG]  [BUGGY]  if(zipEncoding  ==  ZipEncoding.DEFAULT)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(zipEncoding  ==  ZipEncoding.DEFAULT)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  ZipEncoding.DEFAULT)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
72	[BUG]  [BUGGY]  if(zipEncoding  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(zipEncoding  ==  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  null)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
73	[BUG]  [BUGGY]  if(zipEncoding!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(zipEncoding!=  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding!=  null)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
74	[BUG]  [BUGGY]  if(zipEncoding  ==  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(zipEncoding  ==  ZipEncoding.US_ASCII)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(zipEncoding  ==  ZipEncoding.US_ASCII)  {	  if(entry!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
75	[BUG]  [BUGGY]  if(current!=  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  current.getValue()  ==  ZipEncoding.US_ASCII)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
76	[BUG]  [BUGGY]  if(current!=  null  &&  current.getKey()  ==  ZipEncoding.UTF8)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  &&  current.getKey()  ==  ZipEncoding.UTF8)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  current.getKey()  ==  ZipEncoding.UTF8)  {	  if(current!=    null    &&    current.getValue()    ==    ZipEncoding.UTF8)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
77	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
78	[BUG]  [BUGGY]  if(current  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
79	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(ZipLong.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
80	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
81	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
82	[BUG]  [BUGGY]  if  (closed  ||  hitCentralDirectory  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if  (closed  ||  hitCentralDirectory  ==  null)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if  (closed  ||  hitCentralDirectory  ==  null)  {	  if    (closed    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
83	[BUG]  [BUGGY]  if(closed  ||  hitCentralDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(closed  ||  hitCentralDirectory)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(closed  ||  hitCentralDirectory)  {	  if    (closed    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
84	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  hasDataDescriptor)  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
85	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.CFH_LEN)||  isEnabled(ZipLong.CFH_SIG))  {	  if(current!=    null    &&    isEnabled(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
86	[BUG]  [BUGGY]  if(current  ==  null  ||  containsFileExtraFields)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  containsFileExtraFields)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  containsFileExtraFields)  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
87	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SIG))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
88	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(ZipLong.QUOTE_FIELD_NAMES))  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
89	[BUG]  [BUGGY]  if(this.entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(this.entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(this.entryEncoding!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
90	[BUG]  [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(current!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
91	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {	  if(current!=    null    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
92	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(current!=    null    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
93	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }    [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [BUGGY]    closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	111	111	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
