bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  final    int    hasEFS    =    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
2	[BUG]  [BUGGY]  final  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >>  0;	  final    int    hasEFS    =    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
3	[BUG]  [BUGGY]  final  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;	  final    int    hasEFS    =    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
4	[BUG]  [BUGGY]  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	int  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  final    int    hasEFS    =    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
5	[BUG]  [BUGGY]  boolean  hasEFS  =(generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  boolean  hasEFS  =(generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	boolean  hasEFS  =(generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  boolean    hasEFS    =(generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
6	[BUG]  [BUGGY]  boolean  hasEFS  =(generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  boolean  hasEFS  =(generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	boolean  hasEFS  =(generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  >=  0;	  boolean    hasEFS    =(generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
7	[BUG]  [BUGGY]  boolean  hasEFS  =(generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  boolean  hasEFS  =(generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	boolean  hasEFS  =(generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;	  boolean    hasEFS    =(generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
8	[BUG]  [BUGGY]  final  int  hasEFS  =  (generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  int  hasEFS  =  (generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  int  hasEFS  =  (generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;	  final    boolean    hasEFS    =    (generalPurposeFlag    &    ZIPArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
9	[BUG]  [BUGGY]  final  int  hasEFS  =  generalPurposeFlag  >>  ZipArchiveOutputStream.EFS_FLAG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  int  hasEFS  =  generalPurposeFlag  >>  ZipArchiveOutputStream.EFS_FLAG;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  int  hasEFS  =  generalPurposeFlag  >>  ZipArchiveOutputStream.EFS_FLAG;	  final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
10	[BUG]  [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  ==  ZipArchiveOutputStream.EFS_FLAG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  ==  ZipArchiveOutputStream.EFS_FLAG;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =  generalPurposeFlag  ==  ZipArchiveOutputStream.EFS_FLAG;	  final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
11	[BUG]  [BUGGY]  final  int  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  int  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  int  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;	  final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
12	[BUG]  [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  >=  ZipArchiveOutputStream.EFS_FLAG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  >=  ZipArchiveOutputStream.EFS_FLAG;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =  generalPurposeFlag  >=  ZipArchiveOutputStream.EFS_FLAG;	  final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
13	[BUG]  [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  >>  ZipArchiveOutputStream.EFS_FLAG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  >>  ZipArchiveOutputStream.EFS_FLAG;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =  generalPurposeFlag  >>  ZipArchiveOutputStream.EFS_FLAG;	  final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
14	[BUG]  [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  [Delete]  ZipArchiveOutputStream.EFS_FLAG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  [Delete]  ZipArchiveOutputStream.EFS_FLAG;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =  generalPurposeFlag  [Delete]  ZipArchiveOutputStream.EFS_FLAG;	  final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
15	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
16	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	current.setMethod(ZipShort.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
17	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
18	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
19	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
20	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
21	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
22	[BUG]  [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  3)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  3)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =(generalPurposeFlag  &  3)!=  0;	  final    boolean    hasEFS    =(generalPurposeFlag    &    8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
23	[BUG]  [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  5)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  5)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =(generalPurposeFlag  &  5)!=  0;	  final    boolean    hasEFS    =(generalPurposeFlag    &    8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
24	[BUG]  [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  0)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  0)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =(generalPurposeFlag  &  0)!=  0;	  final    boolean    hasEFS    =(generalPurposeFlag    &    8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
25	[BUG]  [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  6)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  6)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =(generalPurposeFlag  &  6)!=  0;	  final    boolean    hasEFS    =(generalPurposeFlag    &    8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
26	[BUG]  [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  1)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  1)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =(generalPurposeFlag  &  1)!=  0;	  final    boolean    hasEFS    =(generalPurposeFlag    &    8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
27	[BUG]  [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  8)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  8)  ==  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =(generalPurposeFlag  &  8)  ==  0;	  final    boolean    hasEFS    =(generalPurposeFlag    &    8)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
28	[BUG]  [BUGGY]  static  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  static  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	static  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  ==  0;	  final    boolean    hasEFS    =    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
29	[BUG]  [BUGGY]  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	(generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  if(!hasEFS)    {    final    boolean    hasEFS    =    generalPurposeFlag    >>    ZipArchiveOutputStream.EFS_FLAG;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
30	[BUG]  [BUGGY]  ||  generalPurposeFlag  ==  ZipArchiveOutputStream.EFS_FLAG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  ||  generalPurposeFlag  ==  ZipArchiveOutputStream.EFS_FLAG;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	||  generalPurposeFlag  ==  ZipArchiveOutputStream.EFS_FLAG;	  if(!hasEFS)    {    final    boolean    hasEFS    =    generalPurposeFlag    >>    ZipArchiveOutputStream.EFS_FLAG;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
31	[BUG]  [BUGGY]  boolean  hasEFS  =(generalPurposeFlag  &  zipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  boolean  hasEFS  =(generalPurposeFlag  &  zipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	boolean  hasEFS  =(generalPurposeFlag  &  zipArchiveOutputStream.EFS_FLAG)!=  0;	  boolean    hasEFS    =(generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
32	[BUG]  [BUGGY]  boolean  hasEFS  =(GeneralPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  boolean  hasEFS  =(GeneralPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	boolean  hasEFS  =(GeneralPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  boolean    hasEFS    =(generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
33	[BUG]  [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  zipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =(generalPurposeFlag  &  zipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =(generalPurposeFlag  &  zipArchiveOutputStream.EFS_FLAG)!=  0;	  final    boolean    hasEFS    =    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)    ==    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
34	[BUG]  [BUGGY]  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
35	[BUG]  [BUGGY]  current.setPath(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  current.setPath(ZipShort.getValue(lfh,  off));  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	current.setPath(ZipShort.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
36	[BUG]  [BUGGY]  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  generalPurposeFlag));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  generalPurposeFlag));  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  generalPurposeFlag));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
37	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  generalPurposeFlag));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  generalPurposeFlag));  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  generalPurposeFlag));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
38	[BUG]  [BUGGY]  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  generalPurposeFlag));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  generalPurposeFlag));  off  +=  SHORT;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  generalPurposeFlag));  off  +=  SHORT;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
39	[BUG]  [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  >  ZipArchiveOutputStream.EFS_FLAG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  >  ZipArchiveOutputStream.EFS_FLAG;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =  generalPurposeFlag  >  ZipArchiveOutputStream.EFS_FLAG;	  final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
40	[BUG]  [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG  ||  generalPurposeFlag  ==  ZipArchiveOutputStream.LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG  ||  generalPurposeFlag  ==  ZipArchiveOutputStream.LFH_LEN;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG  ||  generalPurposeFlag  ==  ZipArchiveOutputStream.LFH_LEN;	  final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
41	[BUG]  [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =  generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;	  final    boolean    hasEFS    =    (generalPurposeFlag    &    ZIPArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
42	[BUG]  [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG  ||  generalPurposeFlag!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  boolean  hasEFS  =  generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG  ||  generalPurposeFlag!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  boolean  hasEFS  =  generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG  ||  generalPurposeFlag!=  0;	  final    boolean    hasEFS    =    (generalPurposeFlag    &    ZIPArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
43	[BUG]  [BUGGY]  final  int  hasEFS  =  (generalPurposeFlag  &  8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  int  hasEFS  =  (generalPurposeFlag  &  8)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  int  hasEFS  =  (generalPurposeFlag  &  8)!=  0;	  final    int    hasEFS    =    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
44	[BUG]  [BUGGY]  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;	  final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
45	[BUG]  [BUGGY]  static  final  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  static  final  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	static  final  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;	  final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
46	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lfhLen));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lfhLen));  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lfhLen));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
47	[BUG]  [BUGGY]  final  int  hasEFS  =  (hasEFS  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  final  int  hasEFS  =  (hasEFS  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	final  int  hasEFS  =  (hasEFS  &  ZipArchiveOutputStream.EFS_FLAG)!=  0;	  final    int    hasEFS    =    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
48	[BUG]  [BUGGY]  static  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  static  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	static  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZIPArchiveOutputStream.EFS_FLAG)!=  0;	  final    boolean    hasEFS    =    (generalPurposeFlag    &    ZIPArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
49	[BUG]  [BUGGY]  boolean  hasEFS  =  (generalPurposeFlag  &  8)!=  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  boolean  hasEFS  =  (generalPurposeFlag  &  8)!=  0;  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	boolean  hasEFS  =  (generalPurposeFlag  &  8)!=  0;	  final    boolean    hasEFS    =    (generalPurposeFlag    &    ZIPArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
50	[BUG]  [BUGGY]  if(!hasEFS)  {  final  boolean  hasEFS  =  generalPurposeFlag  >>  ZIPArchiveOutputStream.EFS_FLAG;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  if(!hasEFS)  {  final  boolean  hasEFS  =  generalPurposeFlag  >>  ZIPArchiveOutputStream.EFS_FLAG;  }  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	if(!hasEFS)  {  final  boolean  hasEFS  =  generalPurposeFlag  >>  ZIPArchiveOutputStream.EFS_FLAG;  }	  final    boolean    hasEFS    =    (generalPurposeFlag    &    ZIPArchiveOutputStream.EFS_FLAG)!=    0;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
51	[BUG]  [BUGGY]  if(!hasEFS  &&  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG)  {  final  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  if(!hasEFS  &&  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG)  {  final  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  }  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	if(!hasEFS  &&  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG)  {  final  boolean  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  }	  if(!hasEFS)    {    final    boolean    hasEFS    =    generalPurposeFlag    >>    ZipArchiveOutputStream.EFS_FLAG;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
52	[BUG]  [BUGGY]  if(!hasEFS  &&  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG)  {  final  int  hasEFS  =  generalPurposeFlag  >>  ZipArchiveOutputStream.EFS_FLAG;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  if(!hasEFS  &&  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG)  {  final  int  hasEFS  =  generalPurposeFlag  >>  ZipArchiveOutputStream.EFS_FLAG;  }  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	if(!hasEFS  &&  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG)  {  final  int  hasEFS  =  generalPurposeFlag  >>  ZipArchiveOutputStream.EFS_FLAG;  }	  if(!hasEFS)    {    final    boolean    hasEFS    =    generalPurposeFlag    >>    ZipArchiveOutputStream.EFS_FLAG;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
53	[BUG]  [BUGGY]  if(!hasEFS  &&  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG)  {  final  int  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  if(!hasEFS  &&  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG)  {  final  int  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  }  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	if(!hasEFS  &&  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG)  {  final  int  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  }	  if(!hasEFS)    {    final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
54	[BUG]  [BUGGY]  if(!hasEFS)  {  final  int  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);    [BUGGY]  if(!hasEFS)  {  final  int  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  }  [BUGGY]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	138	139	1	replace	if(!hasEFS)  {  final  int  hasEFS  =  generalPurposeFlag!=  ZipArchiveOutputStream.EFS_FLAG;  }	  if(!hasEFS)    {    final    boolean    hasEFS    =    generalPurposeFlag!=    ZipArchiveOutputStream.EFS_FLAG;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
