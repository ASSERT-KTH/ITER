projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{closeEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116writeFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,1,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0L);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,bytesReadFromBuffer);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116intlfhLen=current.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116inflater.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getInflater();current.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh);if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();if(current!=null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh);if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length*2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116lfh[0]=zipEncoding.encode(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();current.setLocalFileName(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh);}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,false,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true,0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();current.setFileName(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getZipEntry();current.setLocalFileName(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116zipArchiveEntry=getNextZipEntry();current.setLocalFileName(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getCurposeEntry();current.setLocalFileName(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getNextZipEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,2,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getInflater(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getOutputFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=this.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getInflater().inflate(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getInflater().getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=getNextZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,lfh.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,current.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh,lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh,ioe);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,ioe);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,0);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returngetNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,current);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,0);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returngetNextZipEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{lfh=readFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.setZipEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.close();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getCurrentZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextFileEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh,-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,LFH_LEN+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,LFH_LEN,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,LFH_LONG);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,LFH_LEN,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,false,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116inflater.closeZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116inflater.closeEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116inflater.closeZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returngetNextZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadBytesOfEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,1L);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=currentEntry.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getInflater(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getOutputFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getInflater(),lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=getNextZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,0);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=getNextZipEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,0,lfh.length);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,0,0);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116intlfhLen=current.length()+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116intlfhLen=current.length()*2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116intlfhLen=this.current.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116longlfhLen=current.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116bytelfhLen=current.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeZipEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.close();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,0L);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0L);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getInputStream(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=currentEntry.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getInputStream(),lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getOutputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getFileInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116intinf=getInflater();current.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116inf=getInflater();current.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getOutputFile();current.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,null,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,false);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,true,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,true,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,true,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,false);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh,0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getZipEncoding().encode(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh,-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh,0);if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh,true);if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh,null);if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=getNextZipEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=getNextZipEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,0,0);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getZipEntry();if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextFileEntry();if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,true,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh,current);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getZipEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,LFH_LEN,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,0,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh,current);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=newZipArchiveEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh.length);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh,current);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,current);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,0);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returngetNextZipEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,0,lfh.length);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returngetNextZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh,0);if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh,true);if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh,null);if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,false,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.setZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh,lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,e);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length/2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,lfh.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,lfh.length,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{inflater.readFully(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,lfh.length*2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,lfh.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,lfh.length,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0L);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{inflater.readFully(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,1,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current.length,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh);}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{closeEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length*1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length)+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116lfh[0]=entryEncoding.encode(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116lfh[0]=zipEncoding.encode(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116lfh[0]=zipEncoding.encode(lfh,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Lfh[]lfh=zipEncoding.encode(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh,bytesReadFromBuffer);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,offsetInBuffer);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh,bytesReadFromBuffer);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116writeFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{writeFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Writer.writeFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116writeFully(lfh,false,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116writeFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,false,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true,LFH_LEN,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true,LFH_LEN,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();if(current==null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getZipEntry();if(current!=null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getZipEntry();if(current==null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh);if(current!=null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getNextZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,LFH_LEN,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,10);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=newZipArchiveEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh,current);}catch(EOFExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh.length);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh,0);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh,-1);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh,close);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getZipEntry();if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length-1,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh,lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(current,lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116fileNameLen=readFully(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116fileNameLen=readFully(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116fileNameLen=readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,lfh.length);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh,0);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,false,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,true);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,false,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,false,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,false,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,1,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,0,lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh,current);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getZipEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.setZipEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.writeFully(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeEntry();}catch(EOFExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length,current.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current);}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh);}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh);}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh);}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(false);if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(null);if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.close();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length*4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length*2+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getNextZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,true);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{closeDirectory();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{this.closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{out.closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{closeFile();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh,true);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh,source);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(current);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116IntegerlfhLen=current.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,false,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,null,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true,LFH_LEN+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,true);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.deleteFully(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh);}catchEOFExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,current);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current.length);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,true);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,0,0);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,source);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{writeFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116WriteFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,bytesReadFromStream,fileNameLen);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(Locale.ENGLISH,lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(Locale.ENGLISH,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(Locale.getDefault(),0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,true);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,0,0);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,source);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116lfh[0]=getZipEncoding().encode(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116lfh[0]=zipEncoding.encode(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,current.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,this);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh,this);if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh.length);if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returngetNextZipEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextFile();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh,true);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh,source);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh,0);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,LFH_LEN+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh,closed);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh,open);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(Locale.getDefault());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,true);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh.length);if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh,this);if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,current);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(current,lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current.length);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.deleteFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh,0);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.writeFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{closeDirectory();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{this.closeEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{closeFile();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{writeFully(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextFileEntry();if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(null);if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(false);if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length*2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length*4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getNextInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getInputFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true,0,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,null,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextFile();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh,close);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh.length,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextFileEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();current.setUseUnicodeExtraFields(false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();current.setLocalPurposeFlag(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();current.setLocalFilename(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();current.setLocalFileName(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh,source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh,out);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116if(current!=null){Inflaterinf=getInflater();current.closeEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,lfh[lfh.length]);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,lfh.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextFileEntry();if(current!=null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();if(current!=null){thrownewIllegalStateException("".);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(null);if(current!=null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh,0);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getNextZipEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{ZipArchiveEntrycurrent=getNextZipEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh,currentLen);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{inflater.closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(Lfh.DEFAULT,lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,1,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntryInflater();if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=this.current.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,1,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,ioe);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,-1);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh,currentLen);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getCurrentZipEntry();if(current!=null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,lfh.length);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,lfh.length*2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,lfh.length));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextArchiveEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinflater=getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0L);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,1);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116lfh[0]=this.entryEncoding.encode(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh);}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();current.setLocalFileName(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true,LFH_LEN,LFH_SIZE);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getFileInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextFileEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{ZipArchiveEntrycurrent=getNextZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,LFH_LEN,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextFileEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextArchiveEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.readFully();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getZipEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.getEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116writeFully(lfh,false,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116writeFully(lfh,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{ZipArchiveEntrycurrent=getNextZipEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh,0,lfh.length);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh.length);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.setLength(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,false,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,LFH_LEN,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,LFH_LEN,-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(Locale.getDefault());}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh);}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,0);}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(Locale.getDefault());}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current.length*2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntryInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry().getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current,LBH_LEN);
