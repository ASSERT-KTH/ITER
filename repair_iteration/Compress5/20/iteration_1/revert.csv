projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{closeEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116writeFully(lfh,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,1,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0L);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current.readFully(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{current=readFully(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(current,lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,bytesReadFromBuffer);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116newZipArchiveEntry(lfh,0,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116intlfhLen=current.length();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116inflater.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=getInflater();current.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116Inflaterinf=current.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(current,lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh);if(current!=null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();if(current!=null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry(lfh);if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh);}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,current);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnnewZipArchiveEntry(lfh);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh,0);}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{returnreadFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{fileNameLen=readFully(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length*2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,0,lfh.length,lfh.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116lfh[0]=zipEncoding.encode(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ZipArchiveEntrycurrent=getNextZipEntry();current.setLocalFileName(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,current.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116readFully(lfh,true,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116ReadFully(lfh,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{readFully(lfh);}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java116try{zipEncoding.encode(lfh);
