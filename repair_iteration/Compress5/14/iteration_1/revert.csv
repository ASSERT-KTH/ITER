projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length/2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,encoding,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104intbuf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buffer.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-1,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){if(inputStream==null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIllegalArgumentException("
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIllegalArgumentException("
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())){return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length/1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length+4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104init(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,encoding.length,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,buf,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(encoding,buf,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,usedUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=inputStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding+buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,usingUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buffer.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalArgumentException("Inputstreamisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null){inputStream=ZipEncodingHelper.getInputStream(encoding);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalArgumentException("Currentaccessorisnotsupported.");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalArgumentException("Currentaccessorisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length+3);
