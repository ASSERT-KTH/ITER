projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length/2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,encoding,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104intbuf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buffer.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-1,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){if(inputStream==null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIllegalArgumentException("
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIllegalArgumentException("
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())){return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length/1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length+4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104init(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,encoding.length,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,buf,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(encoding,buf,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,usedUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=inputStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding+buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,usingUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buffer.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalArgumentException("Inputstreamisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null){inputStream=ZipEncodingHelper.getInputStream(encoding);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalArgumentException("Currentaccessorisnotsupported.");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalArgumentException("Currentaccessorisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length+3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding+buf.length-1,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding+buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding+buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length+encoding.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding+buf.length-3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding+this.buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||inputStream==null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||(inputStream==null&&inputStream.length()>0)||(inputStream.charAt(inputStream.length()-1)!='/')){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||(inputStream==null&&useUnicodeExtraFields)){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104While(inputStream==null){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||(inputStream==null&&inputStream.length()>0)||(inputStream.charAt(inputStream.length()-1)!=':')){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||(inputStream==null&&inputStream.length()>0)||(inputStream.charAt(inputStream.length()-1)!='n')){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||(inputStream==null&&inputStream.length()>0)||(inputStream.charAt(inputStream.length()-1)!=encoding)){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<1;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current==null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<2;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.useUnicodeExtraFields=useUnicodeExtraFields;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry(inputStream,encoding,useUnicodeExtraFields)){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry(inputStream,encoding,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry(inputStream,encoding,useUnicodeExtraFields))thrownewIllegalStateException("");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreaminputStream=ZipEncodingHelper.getInputStream(encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||inputStream==null){inputStream=ZipEncodingHelper.getInputStream(encoding);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inputStream=ZipEncodingHelper.getInputStream(encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=ZipEncodingHelper.getInputStream(encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,0,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,0,buf.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(buf,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,0,buf.length-1,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,0,buf.length,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104intbuf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104intbuf=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104intbuf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104intbuf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104bytebuf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104intbuf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buffer.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buffer,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buffer.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buffer.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreaminputStream=newPushbackInputStream(buf,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length/4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,buf,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,buf,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,buf,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(buf,encoding,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,buf,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreaminputStream=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,inputStream,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,this.buffer.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreaminputStream=newPushbackInputStream(inputStream,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,inputStream,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,0,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buffer,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,0,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,0,buf.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,0,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,0,buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,encoding,0,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,0,buf.length+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){if(inputStream==null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){if(inputStream==null||inputStream.length()==0){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){if(inputStream==null){thrownewIllegalArgumentException("".equals(encoding));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreaminputStream=inputStream.readInt();this.useUnicodeExtraFields=useUnicodeExtraFields;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){if(inputStream!=null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(buf,encoding,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(buf,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,usedUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,usingUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104init(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104init(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104init(inputStream,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104init(inputStream,encoding,useUnicodeExtraFields,this.hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104init(inputStream,encoding,useUnicodeExtraFields,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry(inputStream,encoding,useUnicodeExtraFields)){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry(inputStream,encoding,useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry(inputStream,encoding,useUnicodeExtraFields))thrownewIllegalArgumentException("");
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length*1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length-1,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtra);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(encoding,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,encoding.length,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,encoding.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,encoding.length,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,encoding.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,0,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,zipEncoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||inputStream.length()==0){thrownewIllegalArgumentException("Currentaccessorisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()!=0){thrownewIllegalArgumentException("Currentaccessorisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()>=0){thrownewIllegalArgumentException("Currentaccessorisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreaminputStream=inputStream.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()<=0){thrownewIllegalArgumentException("Currentaccessorisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()>0){thrownewIllegalArgumentException("Currentaccessorisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<1;i++){ZipArchiveEntrycurrent=inputStream[i];current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<2;i++){ZipArchiveEntrycurrent=inputStream[i];current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i<1;i++){ZipArchiveEntrycurrent=inputStream[i];current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields,useUnicodeExtra);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields,this.hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(buf,encoding,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(buf,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,usedUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,usingUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length/3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,0,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,0,buf.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,0,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,0,buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,0,buf.length-1,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||inputStream.length()==0){thrownewIllegalArgumentException("Currentaccessorisnotsupported.");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalArgumentException("Currentaccessorisnotsupported.n");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,buf,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-1,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-1,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length-1,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-1,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-1,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length-1,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-1,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(buf,encoding,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf,useUnicodeExtraFields,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,zipEncoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buffer,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,buf,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,encoding,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(in,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(buf,encoding,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(buf,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,usingUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,usedUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields?buf.length-1:buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length-1+useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields?buf.length-1:inputStream.length());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields?buf.length-1:buf.length());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtra);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownew
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownew
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownew
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,buf.length,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buffer.length,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length,usedUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length,buf,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length/1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length/1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,inputStream.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current==null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<1;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getIn
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<2;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=current
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length-3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length-6);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,0,buf.length-5);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||inputStream.length()==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()!=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()>=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalStateException("".getMessage());}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()==0){thrownewIllegalStateException("".equals(encoding));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(encoding,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())){return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())){return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.get
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.get
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,inputStream.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length-3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,buf,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,this.useUnicodeExtraFields,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,inputStream.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=encoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=newFileInputStream(inputStream,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=inputStream.readInt();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=InputStream.fromByteArray(encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=inputStream.readBytes();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=outputStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtra);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-5);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length-1,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(encoding,inputStream.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length-3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,inputStream,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||inputStream.length()==0){thrownewIllegalArgumentException("Inputstreamisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()!=0){thrownewIllegalArgumentException("Inputstreamisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()>=0){thrownewIllegalArgumentException("Inputstreamisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=inputStream.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()<=0){thrownewIllegalArgumentException("Inputstreamisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(buf,encoding,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(buff,encoding,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(buf,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(outputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,usedUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,usingUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(buf,encoding,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(buf,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length/2-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length/2+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length/2-encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,0,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,this.useUnicodeExtra);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length*1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current==null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i!=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=1;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownew
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104||useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownew
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*2-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*2+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*2+encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,buf,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(buf,inputStream,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104intbuf=newPushbackInputStream(inputStream,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(encoding,buf,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length/2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length+3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,encoding,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(buf,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(buff,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length*1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length-1+useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIllegalArgumentException("
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIllegalArgumentException("}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIllegalArgumentException(
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIllegalArgumentException
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readFully(inputStream,encoding,useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry(){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())){return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(this.useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())){return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())){return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(this.useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.get
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||encoding.length()==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,encoding,inputStream,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,this.useUnicodeExtraFields,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,this.useUnicodeExtraFields,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,0,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||encoding.length()==0){thrownewIllegalArgumentException("Inputstreamisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(buf,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(buf,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(buf,encoding,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||encoding.length()==0){thrownewIllegalArgumentException("Currentaccessorisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length+encoding-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length*2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,encoding,inputStream.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,0,inputStream.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,inputStream.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,buf.length*1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,encoding,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(buff,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(buf,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,0,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,null,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,0,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){if(inputStream==null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){if(useUnicodeExtraFields){if(inputStream==null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){if(useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){if(inputStream!=null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buffer,0,buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length+4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(buf,encoding,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(outputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntryentry=inputStream[i];if(current!=null){current=entry;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,0,encoding.length+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,0,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||useUnicodeExtraFields){returnnewZipArchiveInputStream(inputStream,encoding,useUnicodeExtraFields);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||useUnicodeExtraFields){thrownewIllegalStateException("".equals(inputStream.getBytes()));}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||useUnicodeExtraFields){returnnewZipArchiveInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()!=0){thrownewIllegalArgumentException("Currentaccessorisnotsupported.");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,0,buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buffer.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf.length,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104init(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104init(inputStream,encoding,useUnicodeExtraFields,isEnabled);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(buf,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(buf,encoding,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(buf,encoding,inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,useUnicodeExtraFields.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,encoding.length,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf,encoding.length,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIllegalArgumentException("
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownew
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIllegalArgumentException("}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIllegalArgumentException(
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];current=entry;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];current=this.useUnicodeExtraFields;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104safeUseUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry(){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfInputStream(){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readBytesOfEntry){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,usesUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,ZipEncodingHelper.getZipEncoding(encoding));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,0,buf.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,0,buf.length-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream.length/1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=inputStream<null?Integer.MAX_VALUE:inputStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=inputStream<null?Integer.MIN_VALUE:inputStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=inputStream<null?Integer.toString(Integer.MAX_VALUE):inputStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=in;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=inputStream<null?Integer.toString(Integer.toString(inputStream):encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,zipEncoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buffer,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.length-1,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length-2,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buffer);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(!hasDataDescriptor){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(current!=null){current=entry;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(this.useUnicodeExtraFields,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream!=null){inputStream=ZipEncodingHelper.getInputStream(encoding);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(buf,encoding,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(buf,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(buff,encoding,inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,false);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(buf,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(buf,encoding,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(buf,encoding,userUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(buf,inputStream,0,buf.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,useUnicodeExtraFields,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104init(inputStream,encoding,0,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterin=newPushbackInputStream(inputStream,encoding,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding+buf.length/1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,tooltipEncoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,tooltips);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,encoding.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields?buf.length-1:inputStream.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields?buf.length:buf.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,0,buffer.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,buffer.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=inputStream<null?inputStream:encoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=InputStream.parseInputStream(inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=inputStream<null?in:inputStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=InputStream.toByteArray(inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inf=newPushbackInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,buffer.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104inf=newPushbackInputStream(inputStream,encoding,tooltips);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownew
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding==null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding==null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null){thrownew
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()!=null
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackOutputStream(inputStream,buf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,this.usingUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream!=null||inputStream.length()==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104while(inputStream!=null&&inputStream.length()==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()<=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Inflaterinf=newPushbackInputStream(inputStream,encoding,zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding==null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding==null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i].getInputStream();if(current!=null){current
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields,usesUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<6;i++){ZipArchiveEntrycurrent=inputStream[i];current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<4;i++){ZipArchiveEntrycurrent=inputStream[i];current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,this.buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())){return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding==null){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())){return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){for(inti=inputStream.length();i<2;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getName().equals(entry.getKey())){return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length/2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length/2-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104intbuf=newPushbackInputStream(buf,0,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current=current
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i>=0;i++){ZipArchiveEntrycurrent=inputStream[i];if(current!=null){current
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,buf,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding+buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream!=null||inputStream.length()==0){thrownewIllegalArgumentException("Inputstreamisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream==null||inputStream.length()>0){thrownewIllegalArgumentException("Inputstreamisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,outputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreamin=newPushbackInputStream(inputStream,encoding,inputStream.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,encoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){if(inputStream==null||encoding!=null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(useUnicodeExtraFields){if(inputStream==null||encoding==null){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104InputStreaminputStream=inputStream.readIn();this.useUnicodeExtraFields=useUnicodeExtraFields;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream.length,encoding,buf.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Thread.currentThread().getContextClassLoader().process(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104readFromStream(inputStream){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Thread.currentThread().intermediateThread().intermediateThread();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Thread.currentThread().getContextClassLoader().registerInternal(inputStream,encoding,useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Thread.currentThread().intermediateThread().intermediateThread().intermediateThread();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104Thread.currentThread().getContextClassLoader().process(inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream!=null||inputStream.length()==0){thrownewIllegalArgumentException("Currentaccessorisnotsupported.");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownew
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding==null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownew
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding==null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null){thrownewIl
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(encoding!=null){if(useUnicodeExtraFields){for(inti=inputStream.length();i<0;i++){ZipArchiveEntryentry=inputStream[i];if(entry.getValue()==null
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding+buffer.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*2-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,buf.length*2-3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104if(inputStream!=null||inputStream.length()==0){thrownewIllegalArgumentException("Currentaccessorisnotsupportedby");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.in=newPushbackInputStream(inputStream,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(outputStream,encoding,this.useUnicodeExtraFields);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding.toString());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104in=newPushbackInputStream(inputStream,encoding,buf.length*1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java104this.inputStream=ZipEncodingHelper.getInputStream(encoding);
