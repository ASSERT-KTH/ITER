projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112rehashEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112close();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openZipEntry(null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeEntry();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncoding.getInstance();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getCrcEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112exitZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.closeEntry();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{getNextZipEntry();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current==null){try{closeEntry();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.getZipEntry();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112while(current!=null){try{closeEntry();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.getZip();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openZipEntry(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openZipEntry(null,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openZipEntry(current,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openZipEntry(null,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openZipEntry(null,-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112current.setZipEntry(null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112intLFH_LEN=current.getLength();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112Inflaterinf=current.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112returncurrent.getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112intLFH_LEN=current.getFullSize();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112fileNameLen=current.getFileNameLen();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112intLFH_LEN=current.getFullLength();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112inflater.close();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.close();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112rehashCode();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112closed=true;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112inflater.closeEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getZipEncoding(current,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getZipEncoding(current,open);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getZipEncoding(current,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getZipEncoding(current,entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getZipEncoding(current,fileNameLen);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getZipEncoding(current,this);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112ZipEncodingentryEncoding=ZipEncodingUtilities.getZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current==null){getNextZipEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current!=null){getNextZipEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current==null){getNextZipEntry();}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current==null){getNextZipEntry();}else{thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current==null){getNextZipEntry();}else{thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current==null){exitZipEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current!=null){exitZipEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current==null){exitZipEntry();}else{thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current==null){exitZipEntry();}else{thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getNextZipEntry(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getCrcEncoding(current,entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getCrcEncoding(current,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112ZipEncodingentryEncoding=ZipEncodingUtilities.getCrcEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getCrcEncoding(current,open);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getCrcEncoding(current,this);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{rehashEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{rehashEntry();}catch(IOExceptionioe){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{rehashEntry();}catch(IOExceptione){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{rehashEntry();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{rehashEntry();}catch(IOExceptionioe){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{rehashEntry();}catch(IOExceptione){thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current==null){try{closeEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{getNextZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.getZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.closeZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{getNextEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.closeEntry();}catch(EOFExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=current.getZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112ZipEncodingentryEncoding=ZipEncoding.getInstance();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112ZipEncodingentryEncoding=current.getZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112ZipEncodingcurrent=ZipEncoding.getInstance();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=current.getInstance();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=current.getZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.closeEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{getNextZipEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.getZipEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.getNextZipEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{getNextEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.setZipEntry(null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.closeZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.setZipEntry(getNextZipEntry());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.setZipEntry(inflater);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.setZipEntry(null,null);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112closeZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openFileEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.closeEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{getNextZipEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{current.getZipEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112while(current!=null){try{closeEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{getNextEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{rehashEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{rehashEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtil.getZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeDirectory();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{getNextZipEntry();}catch(EOFExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{initZipEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{zipEncoding.closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{initEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112exitZipEntry(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112exitZipDirectory();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112startNewZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112exitZipFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openZipDirectory();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openZipArchiveEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=getZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112openZipFileEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncoding.getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncoding.getZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112getNextZipEntry(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeDirectory();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{this.closeEntry();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{fileNameLen();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeDirectory();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{initZipEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{initEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112current=getNextZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112byte[]buf=current.getFileName();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeDirectory();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{this.closeEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{zipEncoding.closeEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{close();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{close();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{close();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{close();}catch(IOExceptionioe){throwioe;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{close();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getZipEncoding(current,closed);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getZipEncoding(current,close);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112ZipEncodingcurrent=ZipEncodingUtilities.getZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getCrcEncoding(current,closed);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getCrcEncoding(current,true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getCrcEncoding(current,close);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.setZipEntry(entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.initZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.setZipEntry(newZipArchiveEntry());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtilities.getZipEncoding(current,inflater);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112this.current.getZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeArchiveEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeArchiveEntry();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeArchiveEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{this.closeEntry();}catch(IOExceptione){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncodingUtils.getZipEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncoding.current();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncoding.encode(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112zipEncoding=ZipEncoding.getInstance(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112ZipEncodingentryEncoding=ZipEncoding.getEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112ZipEncodingcurrent=ZipEncodingUtilities.getCrcEncoding(current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112readBytesOfEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{inflater.closeEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{zipEncoding.closeEntry();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{zipEncoding=ZipEncoding.getInstance();}catch(IOExceptione){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{zipEncoding.closeEntry();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{currentDirectory();}catch(IOExceptionioe){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{closeArchiveEntry();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112try{currentDirectory();}catch(IOExceptionioe){returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112intLFH_LEN=current.readFully();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112returncurrent.getZipEntry();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112if(current==null){returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112intLFH_LEN=current.getFileName();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java112intLFH_LEN=current.getFH_LEN();
